{"version":3,"file":"relewise-client.js","sources":["../../node_modules/tslib/tslib.es6.js","../../node_modules/@relewise/client/dist/esm/relewise-client.js","../../src/integrator.ts","../../src/builders/categoryPathBuilder.ts","../../src/builders/products/productUpdateBuilder.ts","../../src/builders/products/productAdministrativeActionBuilder.ts","../../src/builders/products/productVariantBuilder.ts","../../src/builders/productcategories/productCategoryUpdateBuilder.ts","../../src/builders/productcategories/productCategoryAdministrativeActionBuilder.ts","../../src/builders/contentcategories/contentCategoryUpdateBuilder.ts","../../src/builders/contentcategories/contentCategoryAdministrativeActionBuilder.ts","../../src/builders/content/contentUpdateBuilder.ts","../../src/builders/content/contentAdministrativeActionBuilder.ts","../../src/builders/brands/brandUpdateBuilder.ts","../../src/builders/brands/brandAdministrativeActionBuilder.ts","../../src/builders/companies/companyUpdateBuilder.ts","../../src/builders/companies/companyAdministrativeActionBuilder.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","class DataValueBase {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n}\nclass StringDataValue extends DataValueBase {\n    constructor(value) {\n        super('String', value);\n        this.isCollection = false;\n    }\n}\nclass StringCollectionDataValue extends DataValueBase {\n    constructor(value) {\n        super('StringList', {\n            $type: 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib]], System.Private.CoreLib',\n            $values: value,\n        });\n        this.isCollection = true;\n    }\n}\nclass MultilingualCollectionDataValue extends DataValueBase {\n    constructor(values) {\n        super('MultilingualCollection', {\n            $type: 'Relewise.Client.DataTypes.MultilingualCollection, Relewise.Client',\n            values: values.map(x => ({ values: x.values, language: { value: x.language } })),\n        });\n        this.isCollection = true;\n    }\n}\nclass NumberDataValue extends DataValueBase {\n    constructor(value) {\n        super('Double', value);\n        this.isCollection = false;\n    }\n}\nclass DoubleCollectionDataValue extends DataValueBase {\n    constructor(value) {\n        super('DoubleList', {\n            $type: 'System.Collections.Generic.List`1[[System.Double, System.Private.CoreLib]], System.Private.CoreLib',\n            $values: value,\n        });\n        this.isCollection = true;\n    }\n}\nclass BooleanDataValue extends DataValueBase {\n    constructor(value) {\n        super('Boolean', value);\n        this.isCollection = false;\n    }\n}\nclass BooleanCollectionDataValue extends DataValueBase {\n    constructor(value) {\n        super('BooleanList', {\n            $type: 'System.Collections.Generic.List`1[[System.Boolean, System.Private.CoreLib]], System.Private.CoreLib',\n            $values: value,\n        });\n        this.isCollection = true;\n    }\n}\nclass MultiCurrencyDataValue extends DataValueBase {\n    constructor(values) {\n        super('MultiCurrency', {\n            $type: 'Relewise.Client.DataTypes.MultiCurrency, Relewise.Client',\n            values: values.map(x => ({ amount: x.amount, currency: { value: x.currency } })),\n        });\n        this.isCollection = false;\n    }\n}\nclass MultilingualDataValue extends DataValueBase {\n    constructor(values) {\n        super('Multilingual', {\n            $type: 'Relewise.Client.DataTypes.Multilingual, Relewise.Client',\n            values: values.map(x => ({ text: x.value, language: { value: x.language } })),\n        });\n        this.isCollection = false;\n    }\n}\nclass ObjectDataValue extends DataValueBase {\n    constructor(dataObject) {\n        super('Object', {\n            $type: 'Relewise.Client.DataTypes.DataObject, Relewise.Client',\n            data: dataObject,\n        });\n        this.isCollection = false;\n    }\n}\nclass ObjectCollectionDataValue extends DataValueBase {\n    constructor(dataObjects) {\n        super('ObjectList', {\n            $type: 'System.Collections.Generic.List`1[[Relewise.Client.DataTypes.DataObject, Relewise.Client]], System.Private.CoreLib',\n            $values: dataObjects.map(x => ({ $type: 'Relewise.Client.DataTypes.DataObject, Relewise.Client', data: x })),\n        });\n        this.isCollection = true;\n    }\n}\n\nclass FilterScopesBuilder {\n    constructor() {\n        this.fillScope = undefined;\n        this.defaultScope = undefined;\n    }\n    fill({ apply }) {\n        this.fillScope = {\n            $type: 'Relewise.Client.Requests.Filters.Settings.ApplyFilterSettings, Relewise.Client',\n            apply,\n        };\n        return this;\n    }\n    default({ apply }) {\n        this.defaultScope = {\n            $type: 'Relewise.Client.Requests.Filters.Settings.ApplyFilterSettings, Relewise.Client',\n            apply,\n        };\n        return this;\n    }\n    build() {\n        return this.fillScope || this.defaultScope\n            ? {\n                fill: this.fillScope,\n                default: this.defaultScope,\n            }\n            : null;\n    }\n}\n\nclass FilterSettingsBuilder {\n    constructor() {\n        this.scopesBuilder = new FilterScopesBuilder();\n    }\n    scopes(builder) {\n        builder(this.scopesBuilder);\n        return this;\n    }\n    build() {\n        const scopes = this.scopesBuilder.build();\n        return scopes\n            ? { scopes: scopes }\n            : null;\n    }\n}\n\nclass DataObjectFilterConditionBuilder {\n    constructor() {\n        this.conditions = [];\n    }\n    addContainsCondition(key, value, mode = 'All', objectPath, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueContainsCondition, Relewise.Client',\n            key: key,\n            value: value,\n            objectPath: objectPath,\n            mode: mode,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addEqualsCondition(key, value, objectPath, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueEqualsCondition, Relewise.Client',\n            value: value,\n            objectPath: objectPath,\n            negated: negated,\n            key: key,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addInRangeCondition(key, range, objectPath, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueInRangeCondition, Relewise.Client',\n            range: range,\n            key: key,\n            objectPath: objectPath,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addGreaterThanCondition(key, value, objectPath, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueGreaterThanCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n            key: key,\n            objectPath: objectPath,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addLessThanCondition(key, value, objectPath, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueLessThanCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n            key: key,\n            objectPath: objectPath,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addMinByCondition(key, objectPath, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueMinByCondition, Relewise.Client',\n            negated: negated,\n            key: key,\n            objectPath: objectPath,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addMaxByCondition(key, objectPath, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueMaxByCondition, Relewise.Client',\n            negated: negated,\n            key: key,\n            objectPath: objectPath,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    build() {\n        return this.conditions.length === 0\n            ? null\n            : this.conditions;\n    }\n}\n\nclass ConditionBuilder {\n    constructor() {\n        this.conditions = [];\n    }\n    addContainsCondition(value, valueCollectionEvaluationMode = 'All', negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Conditions.ContainsCondition, Relewise.Client',\n            value: value,\n            valueCollectionEvaluationMode: valueCollectionEvaluationMode,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addDistinctCondition(numberOfOccurrencesAllowedWithTheSameValue, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Conditions.DistinctCondition, Relewise.Client',\n            numberOfOccurrencesAllowedWithTheSameValue: numberOfOccurrencesAllowedWithTheSameValue,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addEqualsCondition(value, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Conditions.EqualsCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addGreaterThanCondition(value, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Conditions.GreaterThanCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addLessThanCondition(value, negated = false) {\n        const condition = {\n            $type: 'Relewise.Client.Requests.Conditions.LessThanCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    addDataObjectCondition(conditions, skip, take, negated = false) {\n        const conditionsBuilder = new DataObjectFilterConditionBuilder();\n        conditions(conditionsBuilder);\n        const condition = {\n            $type: 'Relewise.Client.Requests.Conditions.ContainsCondition, Relewise.Client',\n            objectFilter: {\n                conditions: conditionsBuilder.build(),\n                skip: skip,\n                take: take,\n            },\n            valueCollectionEvaluationMode: 'All',\n            negated: negated,\n        };\n        this.conditions.push(condition);\n        return this;\n    }\n    build() {\n        return this.conditions.length === 0\n            ? null\n            : { items: this.conditions };\n    }\n}\n\nclass FilterBuilder {\n    constructor() {\n        this.filters = [];\n    }\n    /**\n     * Adds a product assortment filter to the request\n     * @param assortmentIds\n     * @param negated\n     */\n    addProductAssortmentFilter(assortmentIds, negated = false, options) {\n        var _a;\n        const assortments = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a variant assortment filter to the request\n     * @param assortmentIds\n     * @param negated\n     */\n    addVariantAssortmentFilter(assortmentIds, negated = false, options) {\n        var _a;\n        const assortments = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a brand assortment filter to the request\n     * @param assortmentIds\n     * @param negated\n     */\n    addBrandAssortmentFilter(assortmentIds, negated = false, options) {\n        var _a;\n        const assortments = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.BrandAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a content assortment filter to the request\n     * @param assortmentIds\n     * @param negated\n     */\n    addContentAssortmentFilter(assortmentIds, negated = false, options) {\n        var _a;\n        const assortments = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a content category assortment filter to the request\n     * @param assortmentIds\n     * @param negated\n     */\n    addContentCategoryAssortmentFilter(assortmentIds, negated = false, options) {\n        var _a;\n        const assortments = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a content category assortment filter to the request\n     * @param assortmentIds\n     * @param negated\n     */\n    addProductCategoryAssortmentFilter(assortmentIds, negated = false, options) {\n        var _a;\n        const assortments = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return products within the specificed categories\n     * @param evaluationScope\n     * @param categoryIds\n     * @param negated\n     */\n    addProductCategoryIdFilter(evaluationScope, categoryIds, negated = false, options) {\n        var _a;\n        const ids = Array.isArray(categoryIds)\n            ? categoryIds\n            : [categoryIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryIdFilter, Relewise.Client',\n            evaluationScope: evaluationScope,\n            categoryIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return contents within the specificed categories\n     * @param evaluationScope\n     * @param categoryIds\n     * @param negated\n     */\n    addContentCategoryIdFilter(evaluationScope, categoryIds, negated = false, options) {\n        var _a;\n        const ids = Array.isArray(categoryIds)\n            ? categoryIds\n            : [categoryIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryIdFilter, Relewise.Client',\n            evaluationScope: evaluationScope,\n            categoryIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return the specificied products\n     * @param productIds\n     * @param negated\n     */\n    addProductIdFilter(productIds, negated = false, options) {\n        var _a;\n        const ids = Array.isArray(productIds)\n            ? productIds\n            : [productIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductIdFilter, Relewise.Client',\n            productIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return the specificied variants\n     * @param variantIds\n     * @param negated\n     */\n    addVariantIdFilter(variantIds, negated = false, options) {\n        var _a;\n        const ids = Array.isArray(variantIds)\n            ? variantIds\n            : [variantIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantIdFilter, Relewise.Client',\n            variantIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return the specificied brands\n     * @param brandIds\n     * @param negated\n     */\n    addBrandIdFilter(brandIds, negated = false, options) {\n        var _a;\n        const ids = Array.isArray(brandIds)\n            ? brandIds\n            : [brandIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.BrandIdFilter, Relewise.Client',\n            brandIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return the specificied contents\n     * @param contentIds\n     * @param negated\n     */\n    addContentIdFilter(contentIds, negated = false, options) {\n        var _a;\n        const ids = Array.isArray(contentIds)\n            ? contentIds\n            : [contentIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentIdFilter, Relewise.Client',\n            contentIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return the specificied contents\n     * @param companyIds\n     * @param negated\n     */\n    addCompanyIdFilter(companyIds, negated = false, options) {\n        var _a;\n        const ids = Array.isArray(companyIds)\n            ? companyIds\n            : [companyIds];\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.CompanyIdFilter, Relewise.Client',\n            companyIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a range filter to the request ensuring the product has a certain range of variants\n     * @param lowerBound\n     * @param upperBound\n     * @param negated\n     */\n    addProductHasVariantsFilter(lowerBound, upperBound, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductHasVariantsFilter, Relewise.Client',\n            numberOfVariants: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return products purchased since a certain point in time\n     * @param sinceUtc\n     * @param negated\n     */\n    addProductRecentlyPurchasedByUserFilter(sinceUtc, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyPurchasedByUserFilter, Relewise.Client',\n            sinceUtc: sinceUtc,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return products viewed since a certain point in time\n     * @param sinceUtc\n     * @param negated\n     */\n    addProductRecentlyViewedByUserFilter(sinceUtc, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyViewedByUserFilter, Relewise.Client',\n            sinceUtc: sinceUtc,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return products within a certain SalesPrice-range\n     * @param lowerBound\n     * @param upperBound\n     * @param negated\n     */\n    addProductSalesPriceFilter(lowerBound, upperBound, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductSalesPriceFilter, Relewise.Client',\n            range: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return products within a certain ListPice-range\n     * @param lowerBound\n     * @param upperBound\n     * @param negated\n     */\n    addProductListPriceFilter(lowerBound, upperBound, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductListPriceFilter, Relewise.Client',\n            range: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return variants within a certain SalesPrice-range\n     * @param lowerBound\n     * @param upperBound\n     * @param negated\n     */\n    addVariantSalesPriceFilter(lowerBound, upperBound, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantSalesPriceFilter, Relewise.Client',\n            range: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return variants within a certain ListPice-range\n     * @param lowerBound\n     * @param upperBound\n     * @param negated\n     */\n    addVariantListPriceFilter(lowerBound, upperBound, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantListPriceFilter, Relewise.Client',\n            range: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Filters the request to only return variants with a certain specification\n     * @param key\n     * @param equalTo\n     * @param filterOutIfKeyIsNotFound controls if variants with or without the key should be returned\n     * @param negated\n     */\n    addVariantSpecificationFilter(key, equalTo, filterOutIfKeyIsNotFound = true, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantSpecificationFilter, Relewise.Client',\n            key: key,\n            equalTo: equalTo,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    and(filterBuilder, negated = false, options) {\n        var _a;\n        const builder = new FilterBuilder();\n        filterBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filters = builder.build();\n        if (filters === null || filters.items === undefined || filters.items === null || filters.items.length <= 0) {\n            throw new Error('And-filters must contain atleast 1 filter');\n        }\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.AndFilter, Relewise.Client',\n            filters: filters.items,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    or(filterBuilder, negated = false, options) {\n        var _a;\n        const builder = new FilterBuilder();\n        filterBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filters = builder.build();\n        if (filters === null || filters.items === undefined || filters.items === null || filters.items.length <= 0) {\n            throw new Error('Or-filters must contain atleast 1 filter');\n        }\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.OrFilter, Relewise.Client',\n            filters: filters.items,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a product data filter to the request\n     * @param key\n     * @param conditionBuilder\n     * @param mustMatchAllConditions\n     * @param filterOutIfKeyIsNotFound\n     * @param negated\n     */\n    addProductDataFilter(key, conditionBuilder, mustMatchAllConditions = true, filterOutIfKeyIsNotFound = true, negated = false, options) {\n        var _a;\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options === null || options === void 0 ? void 0 : options.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a variant data filter to the request\n     * @param key\n     * @param conditionBuilder\n     * @param mustMatchAllConditions\n     * @param filterOutIfKeyIsNotFound\n     * @param negated\n     */\n    addVariantDataFilter(key, conditionBuilder, mustMatchAllConditions = true, filterOutIfKeyIsNotFound = true, negated = false, options) {\n        var _a;\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options === null || options === void 0 ? void 0 : options.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a brand data filter to the request\n     * @param key\n     * @param conditionBuilder\n     * @param mustMatchAllConditions\n     * @param filterOutIfKeyIsNotFound\n     * @param negated\n     */\n    addBrandDataFilter(key, conditionBuilder, mustMatchAllConditions = true, filterOutIfKeyIsNotFound = true, negated = false, options) {\n        var _a;\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.BrandDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options === null || options === void 0 ? void 0 : options.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a cart data filter to the request\n     * @param key\n     * @param conditionBuilder\n     * @param mustMatchAllConditions\n     * @param filterOutIfKeyIsNotFound\n     * @param negated\n     */\n    addCartDataFilter(key, conditionBuilder, mustMatchAllConditions = true, filterOutIfKeyIsNotFound = true, negated = false, options) {\n        var _a;\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.CartDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a cart data filter to the request\n     * @param key\n     * @param conditionBuilder\n     * @param mustMatchAllConditions\n     * @param filterOutIfKeyIsNotFound\n     * @param negated\n     */\n    addContentCategoryDataFilter(key, conditionBuilder, mustMatchAllConditions = true, filterOutIfKeyIsNotFound = true, negated = false, options) {\n        var _a;\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options === null || options === void 0 ? void 0 : options.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a content data filter to the request\n     * @param key\n     * @param conditionBuilder\n     * @param mustMatchAllConditions\n     * @param filterOutIfKeyIsNotFound\n     * @param negated\n     */\n    addContentDataFilter(key, conditionBuilder, mustMatchAllConditions = true, filterOutIfKeyIsNotFound = true, negated = false, options) {\n        var _a;\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options === null || options === void 0 ? void 0 : options.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a product category data filter to the request\n     * @param key\n     * @param conditionBuilder\n     * @param mustMatchAllConditions\n     * @param filterOutIfKeyIsNotFound\n     * @param negated\n     */\n    addProductCategoryDataFilter(key, conditionBuilder, mustMatchAllConditions = true, filterOutIfKeyIsNotFound = true, negated = false, options) {\n        var _a;\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options === null || options === void 0 ? void 0 : options.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n     * Adds a compnany data filter to the request\n     * @param key\n     * @param conditionBuilder\n     * @param mustMatchAllConditions\n     * @param filterOutIfKeyIsNotFound\n     * @param negated\n     */\n    addCompanyDataFilter(key, conditionBuilder, mustMatchAllConditions = true, filterOutIfKeyIsNotFound = true, negated = false, options) {\n        var _a;\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.CompanyDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options === null || options === void 0 ? void 0 : options.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a product display name filter to the request\n    * @param key\n    * @param conditionBuilder\n    * @param mustMatchAllConditions\n    * @param filterOutIfKeyIsNotFound\n    * @param negated\n    */\n    addProductDisplayNameFilter(conditionBuilder, mustMatchAllConditions = true, negated = false, options) {\n        var _a;\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductDisplayNameFilter, Relewise.Client',\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a product variant filter to the request\n    * @param products\n    * @param negated\n    */\n    addProductAndVariantIdFilter(products, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductAndVariantIdFilter, Relewise.Client',\n            productAndVariantIds: Array.isArray(products) ? products : [products],\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a product category level filter to the request\n    * @param levels\n    * @param negated\n    */\n    addProductCategoryLevelFilter(levels, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryLevelFilter, Relewise.Client',\n            levels: Array.isArray(levels) ? levels : [levels],\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a product category has parent filter to the request\n    * @param categoryIds\n    * @param negated\n    */\n    addProductCategoryHasParentFilter(categoryIds, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryHasParentFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a product category has child filter to the request\n    * @param categoryIds\n    * @param negated\n    */\n    addProductCategoryHasChildFilter(categoryIds, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryHasChildFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a product category has ancestor filter to the request\n    * @param categoryIds\n    * @param negated\n    */\n    addProductCategoryHasAncestorFilter(categoryIds, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryHasAncestorFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a content category level filter to the request\n    * @param levels\n    * @param negated\n    */\n    addContentCategoryLevelFilter(levels, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryLevelFilter, Relewise.Client',\n            levels: Array.isArray(levels) ? levels : [levels],\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a content category has parent filter to the request\n    * @param categoryIds\n    * @param negated\n    */\n    addContentCategoryHasParentFilter(categoryIds, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryHasParentFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a content category has child filter to the request\n    * @param categoryIds\n    * @param negated\n    */\n    addContentCategoryHasChildFilter(categoryIds, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryHasChildFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a content category has ancestor filter to the request\n    * @param categoryIds\n    * @param negated\n    */\n    addContentCategoryHasAncestorFilter(categoryIds, negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryHasAncestorFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a product category has products filter to the request ensuring that only categories with products in them are returned\n    * @param categoryIds\n    * @param negated\n    */\n    addProductCategoryHasProductsFilter(negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryHasProductsFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    /**\n    * Adds a content category has contents filter to the request ensuring that only categories with content in them are returned\n    * @param categoryIds\n    * @param negated\n    */\n    addContentCategoryHasContentsFilter(negated = false, options) {\n        var _a;\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        (_a = options === null || options === void 0 ? void 0 : options.filterSettings) === null || _a === void 0 ? void 0 : _a.call(options, internalSettingsBuilder);\n        const filter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryHasContentsFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n        return this;\n    }\n    reset() {\n        this.filters = [];\n        return this;\n    }\n    build() {\n        return this.filters.length === 0\n            ? null\n            : { items: this.filters };\n    }\n}\n\nclass PaginationBuilder {\n    constructor() {\n        this.pageNumber = 1;\n        this.pageSize = 10;\n    }\n    /**\n     * Defines how many results to return\n     * @param pageSize\n     * @returns\n     */\n    setPageSize(pageSize) {\n        if (pageSize < 0) {\n            throw new Error('pageSize can not be below 0');\n        }\n        this.pageSize = pageSize;\n        return this;\n    }\n    /**\n     * Page starts at 1, so this to skip 'X' pages of results\n     * @param pageNumber\n     * @returns\n     */\n    setPage(pageNumber) {\n        if (pageNumber < 1) {\n            throw new Error('pageNumber can not be below 1');\n        }\n        this.pageNumber = pageNumber;\n        return this;\n    }\n    build() {\n        return {\n            take: this.pageSize,\n            skip: (this.pageNumber - 1) * this.pageSize,\n        };\n    }\n}\n\nclass RelevanceModifierBuilder {\n    constructor() {\n        this.modifiers = [];\n    }\n    addBrandIdRelevanceModifier(brandId, ifProductIsBrandMultiplyWeightBy = 1, ifProductIsNotBrandMultiplyWeightBy = 1, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.BrandIdRelevanceModifier, Relewise.Client',\n            ifProductIsBrandMultiplyWeightBy: ifProductIsBrandMultiplyWeightBy,\n            ifProductIsNotBrandMultiplyWeightBy: ifProductIsNotBrandMultiplyWeightBy,\n            brandId: brandId,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addProductAssortmentRelevanceModifier(assortments, multiplyWeightBy = 1, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductAssortmentRelevanceModifier, Relewise.Client',\n            assortments: assortments,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addVariantAssortmentRelevanceModifier(assortments, multiplyWeightBy = 1, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantAssortmentRelevanceModifier, Relewise.Client',\n            assortments: assortments,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addProductCategoryIdRelevanceModifier(categoryId, evaluationScope, multiplyWeightBy = 1, negated = false, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductCategoryIdRelevanceModifier, Relewise.Client',\n            categoryId: categoryId,\n            evaluationScope: evaluationScope,\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addProductDataRelevanceModifier(key, conditions, multiplierSelector, mustMatchAllConditions = true, considerAsMatchIfKeyIsNotFound = false, filter) {\n        var _a;\n        const conditionBuilder = new ConditionBuilder();\n        conditions(conditionBuilder);\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductDataRelevanceModifier, Relewise.Client',\n            key: key,\n            considerAsMatchIfKeyIsNotFound: considerAsMatchIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: (_a = conditionBuilder.build()) === null || _a === void 0 ? void 0 : _a.items,\n            multiplierSelector: multiplierSelector,\n            multiplyWeightBy: 0,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addVariantDataRelevanceModifier(key, conditions, multiplierSelector, mustMatchAllConditions = true, considerAsMatchIfKeyIsNotFound = false, filter) {\n        var _a;\n        const conditionBuilder = new ConditionBuilder();\n        conditions(conditionBuilder);\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantDataRelevanceModifier, Relewise.Client',\n            key: key,\n            considerAsMatchIfKeyIsNotFound: considerAsMatchIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: (_a = conditionBuilder.build()) === null || _a === void 0 ? void 0 : _a.items,\n            multiplierSelector: multiplierSelector,\n            multiplyWeightBy: 0,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addProductIdRelevanceModifier(productIds, multiplyWeightBy = 1, negated = false, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductIdRelevanceModifier, Relewise.Client',\n            productIds: productIds,\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addProductListPriceRelevanceModifier(currency, lowerBound, upperBound, multiplyWeightBy = 1, negated = false, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductListPriceRelevanceModifier, Relewise.Client',\n            range: { lowerBoundInclusive: lowerBound, upperBoundInclusive: upperBound },\n            currency: { value: currency },\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addProductSalesPriceRelevanceModifier(currency, lowerBound, upperBound, multiplyWeightBy = 1, negated = false, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductSalesPriceRelevanceModifier, Relewise.Client',\n            range: { lowerBoundInclusive: lowerBound, upperBoundInclusive: upperBound },\n            currency: { value: currency },\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addVariantListPriceRelevanceModifier(currency, lowerBound, upperBound, multiplyWeightBy = 1, negated = false, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantListPriceRelevanceModifier, Relewise.Client',\n            range: { lowerBoundInclusive: lowerBound, upperBoundInclusive: upperBound },\n            currency: { value: currency },\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addVariantSalesPriceRelevanceModifier(currency, lowerBound, upperBound, multiplyWeightBy = 1, negated = false, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantSalesPriceRelevanceModifier, Relewise.Client',\n            range: { lowerBoundInclusive: lowerBound, upperBoundInclusive: upperBound },\n            currency: { value: currency },\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addVariantSpecificationsInCommonRelevanceModifier(specificationKeysAndMultipliers, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantSpecificationsInCommonRelevanceModifier, Relewise.Client',\n            specificationKeysAndMultipliers,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addVariantSpecificationValueRelevanceModifier(key, value, ifIdenticalMultiplyWeightBy = 1, ifNotIdenticalMultiplyWeightBy = 0, ifSpecificationKeyNotFoundApplyNotEqualMultiplier = false, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantSpecificationValueRelevanceModifier, Relewise.Client',\n            key,\n            value,\n            ifIdenticalMultiplyWeightBy,\n            ifNotIdenticalMultiplyWeightBy,\n            ifSpecificationKeyNotFoundApplyNotEqualMultiplier,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addProductRecentlyPurchasedByUserRelevanceModifier(sinceUtc, ifNotPreviouslyPurchasedByUserMultiplyWeightBy = 1, ifPreviouslyPurchasedByUserMultiplyWeightBy = 1, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductRecentlyPurchasedByUserRelevanceModifier, Relewise.Client',\n            ifNotPreviouslyPurchasedByUserMultiplyWeightBy,\n            ifPreviouslyPurchasedByUserMultiplyWeightBy,\n            sinceUtc: sinceUtc.toJSON(),\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addProductRecentlyViewedByUserRelevanceModifier(sinceUtc, ifNotPreviouslyViewedByUserMultiplyWeightBy = 1, ifPreviouslyViewedByUserMultiplyWeightBy = 1, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductRecentlyViewedByUserRelevanceModifier, Relewise.Client',\n            ifNotPreviouslyViewedByUserMultiplyWeightBy,\n            ifPreviouslyViewedByUserMultiplyWeightBy,\n            sinceUtc: sinceUtc.toJSON(),\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addUserFavoriteProductRelevanceModifier(sinceMinutesAgo, ifNotPurchasedBaseWeight = 1, mostRecentPurchaseWeight = 1, numberOfPurchasesWeight = 1, filter) {\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n        const modifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.UserFavoriteProductRelevanceModifier, Relewise.Client',\n            ifNotPurchasedBaseWeight,\n            mostRecentPurchaseWeight,\n            numberOfPurchasesWeight,\n            sinceMinutesAgo: sinceMinutesAgo,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n        return this;\n    }\n    build() {\n        return this.modifiers.length === 0\n            ? null\n            : { items: this.modifiers };\n    }\n}\n\nclass DataObjectFacetBuilder {\n    constructor() {\n        this.facets = [];\n    }\n    addDataObjectFacet(key, builder, filter, facetSettings) {\n        var _a, _b;\n        const facetBuilder = new DataObjectFacetBuilder();\n        if (builder) {\n            builder(facetBuilder);\n        }\n        const conditionsBuilder = new DataObjectFilterConditionBuilder();\n        if (filter === null || filter === void 0 ? void 0 : filter.conditions) {\n            filter === null || filter === void 0 ? void 0 : filter.conditions(conditionsBuilder);\n        }\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            items: (_a = facetBuilder.build()) !== null && _a !== void 0 ? _a : [],\n            filter: {\n                conditions: (_b = conditionsBuilder.build()) !== null && _b !== void 0 ? _b : [],\n                take: filter === null || filter === void 0 ? void 0 : filter.take,\n                skip: filter === null || filter === void 0 ? void 0 : filter.skip,\n            },\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addStringFacet(key, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectStringValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addBooleanFacet(key, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectBooleanValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addNumberFacet(key, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectDoubleValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addNumberRangeFacet(key, lowerBound, upperBound, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectDoubleRangeFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            selected: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addNumberRangesFacet(key, predefinedRanges, expandedRangeSize, selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectDoubleRangesFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            settings: facetSettings,\n            predefinedRanges: predefinedRanges === null || predefinedRanges === void 0 ? void 0 : predefinedRanges.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues === null || selectedValues === void 0 ? void 0 : selectedValues.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    build() {\n        return this.facets.length === 0\n            ? null\n            : this.facets;\n    }\n}\n\nclass FacetBuilder {\n    constructor() {\n        this.facets = [];\n    }\n    //#region Product\n    addCategoryFacet(categorySelectionStrategy, selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.CategoryFacet, Relewise.Client',\n            categorySelectionStrategy: categorySelectionStrategy,\n            field: 'Category',\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductCategoryHierarchyFacet(categorySelectionStrategy, selectedValues = null, selectedPropertiesSettings, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.CategoryHierarchyFacet, Relewise.Client',\n            categorySelectionStrategy: categorySelectionStrategy,\n            field: 'Category',\n            selected: selectedValues,\n            settings: facetSettings,\n            selectedPropertiesSettings: selectedPropertiesSettings ? Object.assign({ $type: 'Relewise.Client.Requests.Shared.SelectedProductCategoryPropertiesSettings, Relewise.Client' }, selectedPropertiesSettings) : undefined,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addContentCategoryHierarchyFacet(categorySelectionStrategy, selectedValues = null, selectedPropertiesSettings, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.CategoryHierarchyFacet, Relewise.Client',\n            categorySelectionStrategy: categorySelectionStrategy,\n            field: 'Category',\n            selected: selectedValues,\n            settings: facetSettings,\n            selectedPropertiesSettings: selectedPropertiesSettings ? Object.assign({ $type: 'Relewise.Client.Requests.Shared.SelectedContentCategoryPropertiesSettings, Relewise.Client' }, selectedPropertiesSettings) : undefined,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addBrandFacet(selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.BrandFacet, Relewise.Client',\n            field: 'Brand',\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductAssortmentFacet(selectionStrategy, selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductAssortmentFacet, Relewise.Client',\n            field: 'Assortment',\n            assortmentFilterType: 'Or',\n            assortmentSelectionStrategy: selectionStrategy,\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addVariantSpecificationFacet(key, selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.VariantSpecificationFacet, Relewise.Client',\n            field: 'VariantSpecification',\n            key: key,\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductDataDoubleRangeFacet(key, selectionStrategy, lowerBound, upperBound, facetSettings) {\n        const selected = this.mapSelectedDoubleRange(lowerBound, upperBound);\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleRangeFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            dataSelectionStrategy: selectionStrategy,\n            selected: selected,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductDataDoubleRangesFacet(key, selectionStrategy, predefinedRanges, expandedRangeSize, selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleRangesFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            predefinedRanges: predefinedRanges === null || predefinedRanges === void 0 ? void 0 : predefinedRanges.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues === null || selectedValues === void 0 ? void 0 : selectedValues.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            dataSelectionStrategy: selectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductDataStringValueFacet(key, selectionStrategy, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataStringValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            dataSelectionStrategy: selectionStrategy,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductDataBooleanValueFacet(key, selectionStrategy, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataBooleanValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            dataSelectionStrategy: selectionStrategy,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductDataDoubleValueFacet(key, selectionStrategy, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            dataSelectionStrategy: selectionStrategy,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addSalesPriceRangeFacet(priceSelectionStrategy, lowerBound, upperBound, facetSettings) {\n        const selected = this.mapSelectedDoubleRange(lowerBound, upperBound);\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.PriceRangeFacet, Relewise.Client',\n            field: 'SalesPrice',\n            selected: selected,\n            priceSelectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addSalesPriceRangesFacet(priceSelectionStrategy, predefinedRanges, expandedRangeSize, selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.PriceRangesFacet, Relewise.Client',\n            field: 'SalesPrice',\n            predefinedRanges: predefinedRanges === null || predefinedRanges === void 0 ? void 0 : predefinedRanges.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues === null || selectedValues === void 0 ? void 0 : selectedValues.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            priceSelectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addListPriceRangeFacet(priceSelectionStrategy, lowerBound, upperBound, facetSettings) {\n        const selected = this.mapSelectedDoubleRange(lowerBound, upperBound);\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.PriceRangeFacet, Relewise.Client',\n            field: 'ListPrice',\n            selected: selected,\n            priceSelectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addListPriceRangesFacet(priceSelectionStrategy, predefinedRanges, expandedRangeSize, selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.PriceRangesFacet, Relewise.Client',\n            field: 'ListPrice',\n            predefinedRanges: predefinedRanges === null || predefinedRanges === void 0 ? void 0 : predefinedRanges.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues === null || selectedValues === void 0 ? void 0 : selectedValues.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            priceSelectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductDataObjectFacet(key, selectionStrategy, builder, filter, facetSettings) {\n        var _a, _b;\n        const facetBuilder = new DataObjectFacetBuilder();\n        if (builder) {\n            builder(facetBuilder);\n        }\n        const conditionsBuilder = new DataObjectFilterConditionBuilder();\n        if (filter === null || filter === void 0 ? void 0 : filter.conditions) {\n            filter === null || filter === void 0 ? void 0 : filter.conditions(conditionsBuilder);\n        }\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataObjectFacet, Relewise.Client',\n            field: 'Data',\n            items: (_a = facetBuilder.build()) !== null && _a !== void 0 ? _a : [],\n            filter: {\n                conditions: (_b = conditionsBuilder.build()) !== null && _b !== void 0 ? _b : [],\n                take: filter === null || filter === void 0 ? void 0 : filter.take,\n                skip: filter === null || filter === void 0 ? void 0 : filter.skip,\n            },\n            dataSelectionStrategy: selectionStrategy,\n            settings: facetSettings,\n            key: key,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    //#endregion\n    //#region Content\n    addContentAssortmentFacet(selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentAssortmentFacet, Relewise.Client',\n            field: 'Assortment',\n            assortmentFilterType: 'Or',\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addContentDataDoubleRangeFacet(key, lowerBound, upperBound, facetSettings) {\n        const selected = this.mapSelectedDoubleRange(lowerBound, upperBound);\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentDataDoubleRangeFacet, Relewise.Client',\n            field: 'Data',\n            selected: selected,\n            key: key,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addContentDataDoubleRangesFacet(key, predefinedRanges, expandedRangeSize, selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleRangesFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            predefinedRanges: predefinedRanges === null || predefinedRanges === void 0 ? void 0 : predefinedRanges.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues === null || selectedValues === void 0 ? void 0 : selectedValues.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addContentDataStringValueFacet(key, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentDataStringValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addContentDataBooleanValueFacet(key, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentDataBooleanValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addContentDataDoubleValueFacet(key, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentDataDoubleValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    //#endregion\n    //#region ProductCategories\n    addProductCategoryAssortmentFacet(selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryAssortmentFacet, Relewise.Client',\n            field: 'Assortment',\n            assortmentFilterType: 'Or',\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductCategoryDataDoubleRangeFacet(key, lowerBound, upperBound, facetSettings) {\n        const selected = this.mapSelectedDoubleRange(lowerBound, upperBound);\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryDataDoubleRangeFacet, Relewise.Client',\n            field: 'Data',\n            selected: selected,\n            key: key,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductCategoryDataDoubleRangesFacet(key, predefinedRanges, expandedRangeSize, selectedValues = null, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleRangesFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            predefinedRanges: predefinedRanges === null || predefinedRanges === void 0 ? void 0 : predefinedRanges.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues === null || selectedValues === void 0 ? void 0 : selectedValues.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductCategoryDataStringValueFacet(key, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryDataStringValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductCategoryDataBooleanValueFacet(key, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryDataBooleanValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    addProductCategoryDataDoubleValueFacet(key, selectedValues = null, collectionFilterType, facetSettings) {\n        const facet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryDataDoubleValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n        return this;\n    }\n    //#endregion\n    build() {\n        return this.facets.length === 0\n            ? null\n            : {\n                items: this.facets,\n                $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.FacetQuery, Relewise.Client',\n            };\n    }\n    mapSelectedDoubleRange(lowerBound, upperBound) {\n        let selected = null;\n        const lowerBoundHasValue = lowerBound !== null && lowerBound !== undefined;\n        const upperBoundHasValue = upperBound !== null && upperBound !== undefined;\n        if (lowerBoundHasValue || upperBoundHasValue) {\n            selected = {};\n            if (lowerBoundHasValue)\n                selected.lowerBoundInclusive = lowerBound;\n            if (upperBoundHasValue)\n                selected.upperBoundInclusive = upperBound;\n        }\n        return selected;\n    }\n}\n\nclass DataObjectValueSelectorBuilder {\n    select(key, settings) {\n        var _a, _b;\n        if (!key)\n            throw new Error('DataObjectValueSelector key can\\'t be null or empty');\n        this.key = key;\n        if (settings) {\n            if (settings.filter) {\n                const conditionsBuilder = new DataObjectFilterConditionBuilder();\n                if ((_a = settings.filter) === null || _a === void 0 ? void 0 : _a.conditions) {\n                    (_b = settings.filter) === null || _b === void 0 ? void 0 : _b.conditions(conditionsBuilder);\n                }\n                this.filter = {\n                    skip: settings.filter.skip,\n                    take: settings.filter.take,\n                    conditions: conditionsBuilder.build(),\n                };\n            }\n            if (settings.childSelector) {\n                const childSelector = new DataObjectValueSelectorBuilder();\n                if (settings === null || settings === void 0 ? void 0 : settings.childSelector) {\n                    settings === null || settings === void 0 ? void 0 : settings.childSelector(childSelector);\n                }\n                this.childSelector = childSelector.build();\n            }\n            if (settings.fallbackSelector) {\n                const fallbackSelector = new DataObjectValueSelectorBuilder();\n                if (settings === null || settings === void 0 ? void 0 : settings.fallbackSelector) {\n                    settings === null || settings === void 0 ? void 0 : settings.fallbackSelector(fallbackSelector);\n                }\n                this.fallbackSelector = fallbackSelector.build();\n            }\n        }\n    }\n    build() {\n        if (!this.key)\n            throw new Error('DataObjectValueSelector key can\\'t be null or empty - did you forget to use .select(\\'key)?\\'');\n        return {\n            key: this.key,\n            filter: this.filter,\n            childSelector: this.childSelector,\n            fallbackSelector: this.fallbackSelector,\n        };\n    }\n}\n\nclass ProductSortingBuilder {\n    constructor() {\n        this.value = null;\n    }\n    sortByProductData(key, selectionStrategy, order, thenBy, mode = 'Auto') {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductDataSorting, Relewise.Client',\n            dataSelectionStrategy: selectionStrategy,\n            mode,\n            order,\n            key,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByProductDataObject(selectionStrategy, order, valueSelector, thenBy, mode = 'Auto') {\n        var _a;\n        const valueSelectorFactory = new DataObjectValueSelectorBuilder();\n        valueSelector(valueSelectorFactory);\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductDataObjectSorting, Relewise.Client',\n            dataSelectionStrategy: selectionStrategy,\n            mode,\n            order,\n            valueSelector: valueSelectorFactory.build(),\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByProductRelevance(order = 'Descending', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductRelevanceSorting, Relewise.Client',\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByProductPopularity(order = 'Descending', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductPopularitySorting, Relewise.Client',\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByProductAttribute(attribute, order, thenBy, mode = 'Auto') {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductAttributeSorting, Relewise.Client',\n            attribute,\n            mode,\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByProductVariantAttribute(attribute, order, thenBy, mode = 'Auto') {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductVariantAttributeSorting, Relewise.Client',\n            attribute,\n            mode,\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByProductVariantSpecification(key, order, thenBy, mode = 'Auto') {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductVariantSpecificationSorting, Relewise.Client',\n            key,\n            mode,\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    thenBy(thenBy) {\n        const thenByBuilder = new ProductSortingBuilder();\n        if (thenBy) {\n            thenBy(thenByBuilder);\n            thenByBuilder.build();\n        }\n        return thenByBuilder;\n    }\n    build() {\n        return this.value == null\n            ? null\n            : { value: this.value };\n    }\n}\n\nclass ContentSortingBuilder {\n    constructor() {\n        this.value = null;\n    }\n    sortByContentData(key, order = 'Descending', mode = 'Auto', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Content.ContentDataSorting, Relewise.Client',\n            mode,\n            order,\n            key,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByContentRelevance(order = 'Descending', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Content.ContentRelevanceSorting, Relewise.Client',\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByContentPopularity(order = 'Descending', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Content.ContentPopularitySorting, Relewise.Client',\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByContentAttribute(attribute, order, mode = 'Auto', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Content.ContentAttributeSorting, Relewise.Client',\n            attribute,\n            mode,\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    thenBy(thenBy) {\n        const thenByBuilder = new ContentSortingBuilder();\n        if (thenBy) {\n            thenBy(thenByBuilder);\n            thenByBuilder.build();\n        }\n        return thenByBuilder;\n    }\n    build() {\n        return this.value == null\n            ? null\n            : { value: this.value };\n    }\n}\n\nclass ProductCategorySortingBuilder {\n    constructor() {\n        this.value = null;\n    }\n    sortByProductCategoryData(key, order = 'Descending', mode = 'Auto', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.ProductCategory.ProductCategoryDataSorting, Relewise.Client',\n            mode,\n            order,\n            key,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByProductCategoryRelevance(order = 'Descending', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.ProductCategory.ProductCategoryRelevanceSorting, Relewise.Client',\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByProductCategoryPopularity(order = 'Descending', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.ProductCategory.ProductCategoryPopularitySorting, Relewise.Client',\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    sortByProductCategoryAttribute(attribute, order, mode = 'Auto', thenBy) {\n        var _a;\n        const sort = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.ProductCategory.ProductCategoryAttributeSorting, Relewise.Client',\n            attribute,\n            mode,\n            order,\n            thenBy: (_a = this.thenBy(thenBy)) === null || _a === void 0 ? void 0 : _a.value,\n        };\n        this.value = sort;\n    }\n    thenBy(thenBy) {\n        const thenByBuilder = new ProductCategorySortingBuilder();\n        if (thenBy) {\n            thenBy(thenByBuilder);\n        }\n        return thenByBuilder;\n    }\n    build() {\n        return this.value == null\n            ? null\n            : { value: this.value };\n    }\n}\n\nclass SearchRequestBuilder {\n    constructor(settings) {\n        this.settings = settings;\n        this.filterBuilder = new FilterBuilder();\n        this.postFilterBuilder = new FilterBuilder();\n        this.relevanceModifiersBuilder = new RelevanceModifierBuilder();\n    }\n    /**\n     * Adds filters to the request\n     * @param filterBuilder\n     * @returns\n     */\n    filters(filterBuilder) {\n        filterBuilder(this.filterBuilder);\n        return this;\n    }\n    /**\n     * Adds post filters to the request\n     * @param filterBuilder\n     * @returns\n     */\n    postFilters(filterBuilder) {\n        filterBuilder(this.postFilterBuilder);\n        return this;\n    }\n    relevanceModifiers(relevanceModifiersBuilder) {\n        relevanceModifiersBuilder(this.relevanceModifiersBuilder);\n        return this;\n    }\n    /**\n     * Use only when a specific index different from the 'default'-index is needed\n     * @param id\n     * @returns\n     */\n    setIndex(id) {\n        this.indexId = id;\n        return this;\n    }\n    baseBuild() {\n        return Object.assign(Object.assign(Object.assign({}, (this.settings && {\n            currency: { value: this.settings.currency },\n            language: { value: this.settings.language },\n            displayedAtLocation: this.settings.displayedAtLocation,\n            user: this.settings.user,\n        })), { filters: this.filterBuilder.build(), postFilters: this.postFilterBuilder.build(), relevanceModifiers: this.relevanceModifiersBuilder.build() }), (this.indexId && { indexSelector: { id: this.indexId } }));\n    }\n}\n\nclass ContentSearchBuilder extends SearchRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.facetBuilder = new FacetBuilder();\n        this.paginationBuilder = new PaginationBuilder();\n        this.sortingBuilder = new ContentSortingBuilder();\n        this.searchSettings = {\n            $type: 'Relewise.Client.Requests.Search.Settings.ContentSearchSettings, Relewise.Client',\n            recommendations: {},\n        };\n    }\n    setContentProperties(contentProperties) {\n        this.searchSettings.selectedContentProperties = contentProperties;\n        return this;\n    }\n    setRecommendationSettings(settings) {\n        this.searchSettings.recommendations = settings;\n        return this;\n    }\n    setTerm(term) {\n        this.term = term;\n        return this;\n    }\n    pagination(paginate) {\n        paginate(this.paginationBuilder);\n        return this;\n    }\n    facets(facets) {\n        facets(this.facetBuilder);\n        return this;\n    }\n    sorting(sorting) {\n        sorting(this.sortingBuilder);\n        return this;\n    }\n    build() {\n        const { take, skip } = this.paginationBuilder.build();\n        return Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Search.ContentSearchRequest, Relewise.Client' }, this.baseBuild()), { settings: this.searchSettings, take,\n            skip, term: this.term, facets: this.facetBuilder.build(), sorting: this.sortingBuilder.build() });\n    }\n}\n\nclass ProductCategorySearchBuilder extends SearchRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.facetBuilder = new FacetBuilder();\n        this.paginationBuilder = new PaginationBuilder();\n        this.sortingBuilder = new ProductCategorySortingBuilder();\n        this.searchSettings = {\n            $type: 'Relewise.Client.Requests.Search.Settings.ProductCategorySearchSettings, Relewise.Client',\n            recommendations: {},\n        };\n    }\n    setSelectedCategoryProperties(productCategoryProperties) {\n        this.searchSettings.selectedCategoryProperties = productCategoryProperties;\n        return this;\n    }\n    setRecommendationSettings(settings) {\n        this.searchSettings.recommendations = settings;\n        return this;\n    }\n    /**\n     * Set the term used to filter product categories by\n     */\n    setTerm(term) {\n        this.term = term;\n        return this;\n    }\n    pagination(paginate) {\n        paginate(this.paginationBuilder);\n        return this;\n    }\n    facets(facets) {\n        facets(this.facetBuilder);\n        return this;\n    }\n    sorting(sorting) {\n        sorting(this.sortingBuilder);\n        return this;\n    }\n    build() {\n        const { take, skip } = this.paginationBuilder.build();\n        return Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Search.ProductCategorySearchRequest, Relewise.Client' }, this.baseBuild()), { take,\n            skip, term: this.term, facets: this.facetBuilder.build(), settings: this.searchSettings, sorting: this.sortingBuilder.build() });\n    }\n}\n\nclass ProductSearchBuilder extends SearchRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.facetBuilder = new FacetBuilder();\n        this.paginationBuilder = new PaginationBuilder();\n        this.sortingBuilder = new ProductSortingBuilder();\n        this.searchSettings = {\n            $type: 'Relewise.Client.Requests.Search.Settings.ProductSearchSettings, Relewise.Client',\n            recommendations: {},\n        };\n    }\n    setSelectedProductProperties(productProperties) {\n        this.searchSettings.selectedProductProperties = productProperties;\n        return this;\n    }\n    setSelectedVariantProperties(variantProperties) {\n        this.searchSettings.selectedVariantProperties = variantProperties;\n        return this;\n    }\n    setSelectedBrandProperties(brandProperties) {\n        this.searchSettings.selectedBrandProperties = brandProperties;\n        return this;\n    }\n    setVariantSearchSettings(variantSearchSettings) {\n        this.searchSettings.variantSettings = variantSearchSettings;\n        return this;\n    }\n    setExplodedVariants(count) {\n        this.searchSettings.explodedVariants = count;\n        return this;\n    }\n    setRecommendationSettings(settings) {\n        this.searchSettings.recommendations = settings;\n        return this;\n    }\n    /**\n     * Set the term used to filter products by\n     */\n    setTerm(term) {\n        this.term = term;\n        return this;\n    }\n    pagination(paginate) {\n        paginate(this.paginationBuilder);\n        return this;\n    }\n    facets(facets) {\n        facets(this.facetBuilder);\n        return this;\n    }\n    sorting(sorting) {\n        sorting(this.sortingBuilder);\n        return this;\n    }\n    build() {\n        const { take, skip } = this.paginationBuilder.build();\n        return Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Search.ProductSearchRequest, Relewise.Client' }, this.baseBuild()), { take,\n            skip, term: this.term, facets: this.facetBuilder.build(), settings: this.searchSettings, sorting: this.sortingBuilder.build() });\n    }\n}\n\nclass SearchCollectionBuilder extends SearchRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.requests = [];\n    }\n    addRequest(request) {\n        this.requests.push(request);\n        return this;\n    }\n    build() {\n        return Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Search.SearchRequestCollection, Relewise.Client' }, this.baseBuild()), { requests: this.requests });\n    }\n}\n\nclass SearchTermPredictionBuilder extends SearchRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.count = 0;\n        this.term = '';\n        this.targetEntityTypes = null;\n    }\n    take(count) {\n        this.count = count;\n        return this;\n    }\n    setTerm(term) {\n        this.term = term;\n        return this;\n    }\n    addEntityType(...types) {\n        this.targetEntityTypes = types;\n        return this;\n    }\n    build() {\n        return Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Search.SearchTermPredictionRequest, Relewise.Client' }, this.baseBuild()), { term: this.term, take: this.count, settings: {\n                $type: 'Relewise.Client.Requests.Search.Settings.SearchTermPredictionSettings, Relewise.Client',\n                targetEntityTypes: this.targetEntityTypes,\n            } });\n    }\n}\n\nclass RecommendationRequestBuilder {\n    constructor(settings) {\n        this.settings = settings;\n        this.filterBuilder = new FilterBuilder();\n        this.relevanceModifiersBuilder = new RelevanceModifierBuilder();\n    }\n    /**\n     * Adds filters to the request\n     * @param filterBuilder\n     * @returns\n     */\n    filters(filterBuilder) {\n        filterBuilder(this.filterBuilder);\n        return this;\n    }\n    relevanceModifiers(relevanceModifiersBuilder) {\n        relevanceModifiersBuilder(this.relevanceModifiersBuilder);\n        return this;\n    }\n    baseBuild() {\n        var _a, _b;\n        return {\n            currency: { value: this.settings.currency },\n            user: this.settings.user,\n            language: { value: this.settings.language },\n            displayedAtLocationType: this.settings.displayedAtLocation,\n            filters: (_a = this.filterBuilder.build()) !== null && _a !== void 0 ? _a : {},\n            relevanceModifiers: (_b = this.relevanceModifiersBuilder.build()) !== null && _b !== void 0 ? _b : {},\n        };\n    }\n}\n\nclass ContentSettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.recommendationSettings = {\n            allowFillIfNecessaryToReachNumberOfRecommendations: true,\n            allowReplacingOfRecentlyShownRecommendations: true,\n            numberOfRecommendations: 10,\n            prioritizeDiversityBetweenRequests: false,\n        };\n    }\n    setSelectedContentProperties(contentProperties) {\n        this.recommendationSettings.selectedContentProperties = contentProperties;\n        return this;\n    }\n    setNumberOfRecommendations(count) {\n        this.recommendationSettings.numberOfRecommendations = count;\n        return this;\n    }\n    allowFillIfNecessaryToReachNumberOfRecommendations(allowed = true) {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n        return this;\n    }\n    allowReplacingOfRecentlyShownRecommendations(allowed = true) {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n        return this;\n    }\n    prioritizeDiversityBetweenRequests(prioritize = true) {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n        return this;\n    }\n}\n\nclass ContentsRecommendationCollectionBuilder {\n    constructor() {\n        this.requests = [];\n        this.distinctContentsAcrossResults = true;\n    }\n    addRequest(request) {\n        this.requests.push(request);\n        return this;\n    }\n    requireDistinctContentsAcrossResults(distinctContentsAcrossResults = true) {\n        this.distinctContentsAcrossResults = distinctContentsAcrossResults;\n        return this;\n    }\n    build() {\n        return {\n            $type: 'Relewise.Client.Requests.Recommendations.ContentRecommendationRequestCollection, Relewise.Client',\n            requireDistinctContentsAcrossResults: this.distinctContentsAcrossResults,\n            requests: this.requests,\n        };\n    }\n}\n\nclass ContentsViewedAfterViewingContentBuilder extends ContentSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.id = '';\n    }\n    setContentId(contentId) {\n        this.id = contentId;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.ContentsViewedAfterViewingContentRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, contentId: this.id });\n        return request;\n    }\n}\n\nclass ContentsViewedAfterViewingMultipleContentsBuilder extends ContentSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.ids = [];\n    }\n    setContentIds(...ids) {\n        this.ids = ids;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.ContentsViewedAfterViewingMultipleContentsRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, contentIds: this.ids });\n        return request;\n    }\n}\n\nclass ContentsViewedAfterViewingMultipleProductsBuilder extends ContentSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.products = [];\n    }\n    addProduct(product) {\n        this.products.push(product);\n        return this;\n    }\n    addProducts(products) {\n        products.forEach(x => this.products.push(x));\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.ContentsViewedAfterViewingMultipleProductsRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, productAndVariantIds: this.products });\n        return request;\n    }\n}\n\nclass ContentsViewedAfterViewingProductBuilder extends ContentSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.productAndVariantId = {\n            productId: '',\n        };\n    }\n    product(product) {\n        this.productAndVariantId = product;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.ContentsViewedAfterViewingProductRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, productAndVariantId: this.productAndVariantId });\n        return request;\n    }\n}\n\nclass PersonalContentRecommendationBuilder extends ContentSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PersonalContentRecommendationRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass PopularContentsBuilder extends ContentSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.since = 0;\n    }\n    sinceMinutesAgo(sinceMinutesAgo) {\n        this.since = sinceMinutesAgo;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PopularContentsRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, sinceMinutesAgo: this.since });\n        return request;\n    }\n}\n\nclass ContentCategoriesRecommendationCollectionBuilder {\n    constructor() {\n        this.requests = [];\n        this.distinctCategoriesAcrossResults = true;\n    }\n    addRequest(request) {\n        this.requests.push(request);\n        return this;\n    }\n    requireDistinctCategoriesAcrossResults(distinctCategoriesAcrossResults = true) {\n        this.distinctCategoriesAcrossResults = distinctCategoriesAcrossResults;\n        return this;\n    }\n    build() {\n        return {\n            $type: 'Relewise.Client.Requests.Recommendations.ContentRecommendationRequestCollection, Relewise.Client',\n            requireDistinctCategoriesAcrossResults: this.distinctCategoriesAcrossResults,\n            requests: this.requests,\n        };\n    }\n}\n\nclass ContentCategorySettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.recommendationSettings = {\n            allowFillIfNecessaryToReachNumberOfRecommendations: true,\n            allowReplacingOfRecentlyShownRecommendations: true,\n            numberOfRecommendations: 10,\n            prioritizeDiversityBetweenRequests: false,\n        };\n    }\n    setSelectedContentCategoryProperties(ContentCategoryProperties) {\n        this.recommendationSettings.selectedContentCategoryProperties = ContentCategoryProperties;\n        return this;\n    }\n    setNumberOfRecommendations(count) {\n        this.recommendationSettings.numberOfRecommendations = count;\n        return this;\n    }\n    allowFillIfNecessaryToReachNumberOfRecommendations(allowed = true) {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n        return this;\n    }\n    allowReplacingOfRecentlyShownRecommendations(allowed = true) {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n        return this;\n    }\n    prioritizeDiversityBetweenRequests(prioritize = true) {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n        return this;\n    }\n}\n\nclass PersonalContentCategoryRecommendationBuilder extends ContentCategorySettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.since = 0;\n        this.weights = { categoryViews: 1.0, contentViews: 1.0 };\n    }\n    sinceMinutesAgo(sinceMinutesAgo) {\n        this.since = sinceMinutesAgo;\n        return this;\n    }\n    setWeights(weights) {\n        this.weights = weights;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PersonalContentCategoryRecommendationRequest, Relewise.Client' }, this.baseBuild()), { sinceMinutesAgo: this.since, weights: this.weights, settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass PopularContentCategoriesRecommendationBuilder extends ContentCategorySettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.since = 0;\n        this.weights = { categoryViews: 1.0, contentViews: 1.0 };\n    }\n    sinceMinutesAgo(sinceMinutesAgo) {\n        this.since = sinceMinutesAgo;\n        return this;\n    }\n    setWeights(weights) {\n        this.weights = weights;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PopularContentCategoriesRecommendationRequest, Relewise.Client' }, this.baseBuild()), { sinceMinutesAgo: this.since, weights: this.weights, settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass BrandSettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.recommendationSettings = {\n            allowFillIfNecessaryToReachNumberOfRecommendations: true,\n            allowReplacingOfRecentlyShownRecommendations: true,\n            numberOfRecommendations: 10,\n            prioritizeDiversityBetweenRequests: false,\n        };\n    }\n    setSelectedBrandProperties(brandProperties) {\n        this.recommendationSettings.selectedBrandProperties = brandProperties;\n        return this;\n    }\n    setNumberOfRecommendations(count) {\n        this.recommendationSettings.numberOfRecommendations = count;\n        return this;\n    }\n    allowFillIfNecessaryToReachNumberOfRecommendations(allowed = true) {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n        return this;\n    }\n    allowReplacingOfRecentlyShownRecommendations(allowed = true) {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n        return this;\n    }\n    prioritizeDiversityBetweenRequests(prioritize = true) {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n        return this;\n    }\n}\n\nclass PersonalBrandRecommendationBuilder extends BrandSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.since = 0;\n        this.weights = { brandViews: 1.0, productViews: 1.0, productPurchases: 1.0 };\n    }\n    sinceMinutesAgo(sinceMinutesAgo) {\n        this.since = sinceMinutesAgo;\n        return this;\n    }\n    setWeights(weights) {\n        this.weights = weights;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PersonalBrandRecommendationRequest, Relewise.Client' }, this.baseBuild()), { sinceMinutesAgo: this.since, weights: this.weights, settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass PopularBrandsRecommendationBuilder extends BrandSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.since = 0;\n        this.weights = { brandViews: 1.0, productViews: 1.0, productPurchases: 1.0 };\n    }\n    sinceMinutesAgo(sinceMinutesAgo) {\n        this.since = sinceMinutesAgo;\n        return this;\n    }\n    setWeights(weights) {\n        this.weights = weights;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PopularBrandsRecommendationRequest, Relewise.Client' }, this.baseBuild()), { sinceMinutesAgo: this.since, weights: this.weights, settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass ProductCategorySettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.recommendationSettings = {\n            allowFillIfNecessaryToReachNumberOfRecommendations: true,\n            allowReplacingOfRecentlyShownRecommendations: true,\n            numberOfRecommendations: 10,\n            prioritizeDiversityBetweenRequests: false,\n        };\n    }\n    setProductCategoryProperties(ProductCategoryProperties) {\n        this.recommendationSettings.selectedProductCategoryProperties = ProductCategoryProperties;\n        return this;\n    }\n    setNumberOfRecommendations(count) {\n        this.recommendationSettings.numberOfRecommendations = count;\n        return this;\n    }\n    allowFillIfNecessaryToReachNumberOfRecommendations(allowed = true) {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n        return this;\n    }\n    allowReplacingOfRecentlyShownRecommendations(allowed = true) {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n        return this;\n    }\n    prioritizeDiversityBetweenRequests(prioritize = true) {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n        return this;\n    }\n}\n\nclass PersonalProductCategoryRecommendationBuilder extends ProductCategorySettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.since = 0;\n        this.weights = { categoryViews: 1.0, productViews: 1.0, productPurchases: 1.0 };\n    }\n    sinceMinutesAgo(sinceMinutesAgo) {\n        this.since = sinceMinutesAgo;\n        return this;\n    }\n    setWeights(weights) {\n        this.weights = weights;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PersonalProductCategoryRecommendationRequest, Relewise.Client' }, this.baseBuild()), { sinceMinutesAgo: this.since, weights: this.weights, settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass PopularProductCategoriesRecommendationBuilder extends ProductCategorySettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.since = 0;\n        this.weights = { categoryViews: 1.0, productViews: 1.0, productPurchases: 1.0 };\n    }\n    sinceMinutesAgo(sinceMinutesAgo) {\n        this.since = sinceMinutesAgo;\n        return this;\n    }\n    setWeights(weights) {\n        this.weights = weights;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PopularProductCategoriesRecommendationRequest, Relewise.Client' }, this.baseBuild()), { sinceMinutesAgo: this.since, weights: this.weights, settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass ProductCategoriesRecommendationCollectionBuilder {\n    constructor() {\n        this.requests = [];\n        this.distinctCategoriesAcrossResults = true;\n    }\n    addRequest(request) {\n        this.requests.push(request);\n        return this;\n    }\n    requireDistinctCategoriesAcrossResults(distinctCategoriesAcrossResults = true) {\n        this.distinctCategoriesAcrossResults = distinctCategoriesAcrossResults;\n        return this;\n    }\n    build() {\n        return {\n            $type: 'Relewise.Client.Requests.Recommendations.ProductCategoryRecommendationRequestCollection, Relewise.Client',\n            requireDistinctCategoriesAcrossResults: this.distinctCategoriesAcrossResults,\n            requests: this.requests,\n        };\n    }\n}\n\nclass ProductSettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.recommendationSettings = {\n            allowFillIfNecessaryToReachNumberOfRecommendations: true,\n            allowReplacingOfRecentlyShownRecommendations: true,\n            recommendVariant: true,\n            numberOfRecommendations: 10,\n            prioritizeDiversityBetweenRequests: false,\n        };\n    }\n    setSelectedProductProperties(productProperties) {\n        this.recommendationSettings.selectedProductProperties = productProperties;\n        return this;\n    }\n    setSelectedVariantProperties(variantProperties) {\n        this.recommendationSettings.selectedVariantProperties = variantProperties;\n        return this;\n    }\n    setSelectedBrandProperties(brandProperties) {\n        this.recommendationSettings.selectedBrandProperties = brandProperties;\n        return this;\n    }\n    setNumberOfRecommendations(count) {\n        this.recommendationSettings.numberOfRecommendations = count;\n        return this;\n    }\n    allowFillIfNecessaryToReachNumberOfRecommendations(allowed = true) {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n        return this;\n    }\n    allowReplacingOfRecentlyShownRecommendations(allowed = true) {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n        return this;\n    }\n    allowProductsCurrentlyInCart(allowed = true) {\n        this.recommendationSettings.allowProductsCurrentlyInCart = allowed;\n        return this;\n    }\n    prioritizeDiversityBetweenRequests(prioritize = true) {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n        return this;\n    }\n    recommendVariant(recommend = true) {\n        this.recommendationSettings.recommendVariant = recommend;\n        return this;\n    }\n}\n\nclass PurchasedWithCurrentCartBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PurchasedWithCurrentCartRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass BySingleProductRecommendationBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.productAndVariantId = null;\n    }\n    product(product) {\n        this.productAndVariantId = product;\n        return this;\n    }\n}\n\nclass ProductsViewedAfterViewingProductBuilder extends BySingleProductRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n    }\n    build() {\n        if (this.productAndVariantId === null) {\n            throw new Error('Must specificy a product');\n        }\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.ProductsViewedAfterViewingProductRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, productAndVariantId: this.productAndVariantId });\n        return request;\n    }\n}\n\nclass ProductsViewedAfterViewingContentBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.id = '';\n    }\n    setContentId(contentId) {\n        this.id = contentId;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.ProductsViewedAfterViewingContentRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, contentId: this.id });\n        return request;\n    }\n}\n\nclass PersonalProductRecommendationBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PersonalProductRecommendationRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass PopularProductsBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.since = 0;\n        this.basedOnSelection = 'MostPurchased';\n    }\n    basedOn(basedOn) {\n        this.basedOnSelection = basedOn;\n        return this;\n    }\n    sinceMinutesAgo(sinceMinutesAgo) {\n        this.since = sinceMinutesAgo;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PopularProductsRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, basedOn: this.basedOnSelection, sinceMinutesAgo: this.since });\n        return request;\n    }\n}\n\nclass RecentlyViewedProductsBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.RecentlyViewedProductsRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings });\n        return request;\n    }\n}\n\nclass SortVariantsBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.id = '';\n    }\n    setProductId(productId) {\n        this.id = productId;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.SortVariantsRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, productId: this.id });\n        return request;\n    }\n}\n\nclass ProductsRecommendationCollectionBuilder {\n    constructor() {\n        this.requests = [];\n        this.distinctProductsAcrossResults = true;\n    }\n    addRequest(request) {\n        this.requests.push(request);\n        return this;\n    }\n    requireDistinctProductsAcrossResults(distinctProductsAcrossResults = true) {\n        this.distinctProductsAcrossResults = distinctProductsAcrossResults;\n        return this;\n    }\n    build() {\n        return {\n            $type: 'Relewise.Client.Requests.Recommendations.ProductRecommendationRequestCollection, Relewise.Client',\n            requireDistinctProductsAcrossResults: this.distinctProductsAcrossResults,\n            requests: this.requests,\n        };\n    }\n}\n\nclass PurchasedWithMultipleProductsBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.products = [];\n    }\n    addProduct(product) {\n        this.products.push(product);\n        return this;\n    }\n    addProducts(products) {\n        products.forEach(x => this.products.push(x));\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PurchasedWithMultipleProductsRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, productAndVariantIds: this.products });\n        return request;\n    }\n}\n\nclass PurchasedWithProductBuilder extends BySingleProductRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n    }\n    build() {\n        if (this.productAndVariantId === null) {\n            throw new Error('Must specificy a product');\n        }\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PurchasedWithProductRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, productAndVariantId: this.productAndVariantId });\n        return request;\n    }\n}\n\nclass SearchTermBasedProductRecommendationBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.term = '';\n    }\n    setTerm(term) {\n        this.term = term;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.SearchTermBasedProductRecommendationRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, term: this.term });\n        return request;\n    }\n}\n\nclass SortProductsBuilder extends ProductSettingsRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.ids = [];\n    }\n    setProductIds(productIds) {\n        this.ids = productIds;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.SortProductsRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, productIds: this.ids });\n        return request;\n    }\n}\n\nclass SimilarProductsProductBuilder extends BySingleProductRecommendationBuilder {\n    constructor(settings) {\n        super(settings);\n        this.evaluationSettings = null;\n        this.considerAlreadyKnownInformationAboutProduct = false;\n        this.productData = null;\n    }\n    setSimilarProductsEvaluationSettings(settings) {\n        this.evaluationSettings = settings;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.SimilarProductsRequest, Relewise.Client' }, this.baseBuild()), { settings: this.recommendationSettings, existingProductId: this.productAndVariantId, considerAlreadyKnownInformationAboutProduct: this.considerAlreadyKnownInformationAboutProduct, productData: this.productData, evaluationSettings: this.evaluationSettings });\n        return request;\n    }\n}\n\nclass PopularSearchTermsRecommendationBuilder extends RecommendationRequestBuilder {\n    constructor(settings) {\n        super(settings);\n        this.recommendationSettings = {\n            numberOfRecommendations: 10,\n        };\n    }\n    setTerm(term) {\n        this.term = term;\n        return this;\n    }\n    addEntityType(...types) {\n        this.recommendationSettings.targetEntityTypes = types;\n        return this;\n    }\n    build() {\n        const request = Object.assign(Object.assign({ $type: 'Relewise.Client.Requests.Recommendations.PopularSearchTermsRecommendationRequest, Relewise.Client' }, this.baseBuild()), { term: this.term, settings: this.recommendationSettings });\n        return request;\n    }\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\n\nvar version = { tag: 'client@1.22.0' };\n\nclass ProblemDetailsError extends Error {\n    constructor(message, details) {\n        super(message);\n        this._details = details;\n    }\n    get details() {\n        return this._details;\n    }\n}\nclass RelewiseClient {\n    constructor(datasetId, apiKey, options) {\n        this.datasetId = datasetId;\n        this.apiKey = apiKey;\n        this._serverUrl = 'https://api.relewise.com';\n        this._urlPath = 'v1';\n        if (!datasetId)\n            throw new Error('Dataset id cannot be null or empty. Please contact Relewise if you don\\'t have an account already or would like a free demo license');\n        if (!apiKey)\n            throw new Error('API Key secret cannot be null or empty. Please contact Relewise support if you don\\'t know the apiKeySecret for your datasetId.');\n        this._apiKeyHeader = `APIKey ${this.apiKey}`;\n        if (options === null || options === void 0 ? void 0 : options.serverUrl) {\n            this._serverUrl = options.serverUrl;\n        }\n    }\n    get serverUrl() {\n        return this._serverUrl;\n    }\n    request(name, data, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const requestUrl = this.createRequestUrl(this._serverUrl, this.datasetId, this._urlPath, name);\n            const response = yield fetch(requestUrl, {\n                method: 'POST',\n                headers: {\n                    Authorization: this._apiKeyHeader,\n                    'Content-Type': 'application/json',\n                    'X-Relewise-Version': version.tag,\n                },\n                body: JSON.stringify(data),\n                signal: options === null || options === void 0 ? void 0 : options.abortSignal,\n            });\n            if (!response.ok) {\n                let responseMessage = null;\n                try {\n                    responseMessage = yield response.json();\n                }\n                catch (_) {\n                }\n                throw new ProblemDetailsError('Error when calling the Relewise API. Read more in the details property if there is error response or look in the network tab.', responseMessage);\n            }\n            try {\n                const responseMessage = yield response.json();\n                return responseMessage;\n            }\n            catch (err) {\n                return undefined;\n            }\n        });\n    }\n    createRequestUrl(baseUrl, ...segments) {\n        const joinedSegments = segments.join('/');\n        return baseUrl.endsWith('/')\n            ? baseUrl.concat(joinedSegments)\n            : baseUrl.concat('/', joinedSegments);\n    }\n}\n\nclass Tracker extends RelewiseClient {\n    constructor(datasetId, apiKey, options) {\n        super(datasetId, apiKey, options);\n        this.datasetId = datasetId;\n        this.apiKey = apiKey;\n    }\n    trackOrder({ user, subtotal, orderNumber, lineItems, cartName = 'default', trackingNumber }, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('TrackOrderRequest', {\n                $type: 'Relewise.Client.Requests.Tracking.TrackOrderRequest, Relewise.Client',\n                order: {\n                    $type: 'Relewise.Client.DataTypes.Order, Relewise.Client',\n                    lineItems: lineItems.map(l => (Object.assign(Object.assign({ product: {\n                            id: l.productId,\n                        } }, (l.variantId && { variant: { id: l.variantId } })), { lineTotal: l.lineTotal, quantity: l.quantity }))),\n                    subtotal: { amount: subtotal.amount, currency: { value: subtotal.currency } },\n                    orderNumber: orderNumber,\n                    trackingNumber: trackingNumber,\n                    cartName: cartName,\n                    user: user,\n                },\n            }, options);\n        });\n    }\n    trackCart({ user, subtotal, lineItems, data, cartName = 'default' }, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('TrackCartRequest', {\n                $type: 'Relewise.Client.Requests.Tracking.TrackCartRequest, Relewise.Client',\n                cart: {\n                    $type: 'Relewise.Client.DataTypes.Cart, Relewise.Client',\n                    lineItems: lineItems.map(l => (Object.assign(Object.assign({ product: {\n                            id: l.productId,\n                        } }, (l.variantId && { variant: { id: l.variantId } })), { lineTotal: l.lineTotal, quantity: l.quantity }))),\n                    subtotal: { amount: subtotal.amount, currency: { value: subtotal.currency } },\n                    name: cartName,\n                    user: user,\n                    data: data,\n                },\n            }, options);\n        });\n    }\n    trackProductView({ productId, variantId, user }, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('TrackProductViewRequest', {\n                $type: 'Relewise.Client.Requests.Tracking.TrackProductViewRequest, Relewise.Client',\n                productView: Object.assign(Object.assign({ $type: 'Relewise.Client.DataTypes.ProductView, Relewise.Client', product: {\n                        id: productId,\n                    } }, (variantId && { variant: { id: variantId } })), { user: user }),\n            }, options);\n        });\n    }\n    trackProductCategoryView({ idPath, user }, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('TrackProductCategoryViewRequest', {\n                $type: 'Relewise.Client.Requests.Tracking.TrackProductCategoryViewRequest, Relewise.Client',\n                productCategoryView: {\n                    $type: 'Relewise.Client.DataTypes.ProductCategoryView, Relewise.Client',\n                    idPath: idPath,\n                    user: user,\n                },\n            }, options);\n        });\n    }\n    trackContentView({ contentId, user }, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('TrackContentViewRequest', {\n                $type: 'Relewise.Client.Requests.Tracking.TrackContentViewRequest, Relewise.Client',\n                contentView: {\n                    $type: 'Relewise.Client.DataTypes.ContentView, Relewise.Client',\n                    content: {\n                        id: contentId,\n                    },\n                    user: user,\n                },\n            }, options);\n        });\n    }\n    trackContentCategoryView({ idPath, user }, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('TrackContentCategoryViewRequest', {\n                $type: 'Relewise.Client.Requests.Tracking.TrackContentCategoryViewRequest, Relewise.Client',\n                contentCategoryView: {\n                    $type: 'Relewise.Client.DataTypes.ContentCategoryView, Relewise.Client',\n                    idPath: idPath,\n                    user: user,\n                },\n            }, options);\n        });\n    }\n    trackBrandView({ brandId, user }, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('TrackBrandViewRequest', {\n                $type: 'Relewise.Client.Requests.Tracking.TrackBrandViewRequest, Relewise.Client',\n                brandView: {\n                    $type: 'Relewise.Client.DataTypes.BrandView, Relewise.Client',\n                    brand: {\n                        id: brandId,\n                    },\n                    user: user,\n                },\n            }, options);\n        });\n    }\n    trackSearchTerm({ term, language, user }, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('TrackSearchTermRequest', {\n                $type: 'Relewise.Client.Requests.Tracking.TrackSearchTermRequest, Relewise.Client',\n                searchTerm: {\n                    $type: 'Relewise.Client.DataTypes.SearchTerm, Relewise.Client',\n                    language: {\n                        value: language,\n                    },\n                    term: term,\n                    user: user,\n                },\n            }, options);\n        });\n    }\n    trackUserUpdate({ user, updateKind = 'UpdateAndAppend' }, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('TrackUserUpdateRequest', {\n                $type: 'Relewise.Client.Requests.Tracking.TrackUserUpdateRequest, Relewise.Client',\n                userUpdate: {\n                    $type: 'Relewise.Client.DataTypes.UserUpdate, Relewise.Client',\n                    user: user,\n                    kind: updateKind,\n                },\n            }, options);\n        });\n    }\n}\n\nclass Searcher extends RelewiseClient {\n    constructor(datasetId, apiKey, options) {\n        super(datasetId, apiKey, options);\n        this.datasetId = datasetId;\n        this.apiKey = apiKey;\n    }\n    searchProducts(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ProductSearchRequest', request, options);\n        });\n    }\n    searchProductCategories(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ProductCategorySearchRequest', request, options);\n        });\n    }\n    searchContents(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ContentSearchRequest', request, options);\n        });\n    }\n    searchTermPrediction(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('SearchTermPredictionRequest', request, options);\n        });\n    }\n    batch(requestCollections, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('SearchRequestCollection', requestCollections, options);\n        });\n    }\n}\n\nclass Recommender extends RelewiseClient {\n    constructor(datasetId, apiKey, options) {\n        super(datasetId, apiKey, options);\n        this.datasetId = datasetId;\n        this.apiKey = apiKey;\n    }\n    recommendPopularSearchTerms(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PopularSearchTermsRecommendationRequest', request, options);\n        });\n    }\n    //#region Brands\n    recommendPersonalBrands(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PersonalBrandRecommendationRequest', request, options);\n        });\n    }\n    recommendPopularBrands(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PopularBrandsRecommendationRequest', request, options);\n        });\n    }\n    //#endregion\n    //#region Content Categories\n    recommendPersonalContentCategories(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PersonalContentCategoryRecommendationRequest', request, options);\n        });\n    }\n    recommendPopularContentCategories(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PopularContentCategoriesRecommendationRequest', request, options);\n        });\n    }\n    //#endregion\n    //#region Product Categories\n    recommendPersonalProductCategories(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PersonalProductCategoryRecommendationRequest', request, options);\n        });\n    }\n    recommendPopularProductCategories(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PopularProductCategoriesRecommendationRequest', request, options);\n        });\n    }\n    //#endregion\n    //#region Products\n    recommendPurchasedWithProduct(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PurchasedWithProductRequest', request, options);\n        });\n    }\n    recommendPurchasedWithMultipleProducts(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PurchasedWithMultipleProductsRequest', request, options);\n        });\n    }\n    sortVariants(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('SortVariantsRequest', request, options);\n        });\n    }\n    sortProducts(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('SortProductsRequest', request, options);\n        });\n    }\n    recommendSimilarProducts(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('SimilarProductsRequest', request, options);\n        });\n    }\n    recommendSearchTermBasedProducts(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('SearchTermBasedProductRecommendationRequest', request, options);\n        });\n    }\n    recentlyViewedProducts(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('RecentlyViewedProductsRequest', request, options);\n        });\n    }\n    recommendPurchasedWithCurrentCart(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PurchasedWithCurrentCartRequest', request, options);\n        });\n    }\n    recommendProductsViewedAfterViewingProduct(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ProductsViewedAfterViewingProductRequest', request, options);\n        });\n    }\n    recommendProductsViewedAfterViewingContent(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ProductsViewedAfterViewingContentRequest', request, options);\n        });\n    }\n    recommendPopularProducts(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PopularProductsRequest', request, options);\n        });\n    }\n    recommendPersonalProducts(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PersonalProductRecommendationRequest', request, options);\n        });\n    }\n    //#endregion\n    //#region Content\n    recommendPopularContents(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PopularContentsRequest', request, options);\n        });\n    }\n    recommendPersonalContents(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PopularContentsRequest', request, options);\n        });\n    }\n    recommendContentsViewedAfterViewingProduct(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ContentsViewedAfterViewingProductRequest', request, options);\n        });\n    }\n    recommendContentsViewedAfterViewingMultipleProducts(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ContentsViewedAfterViewingProductRequest', request, options);\n        });\n    }\n    recommendContentsViewedAfterViewingMultipleContents(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ContentsViewedAfterViewingMultipleContentsRequest', request, options);\n        });\n    }\n    recommendContentsViewedAfterViewingContent(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ContentsViewedAfterViewingContentRequest', request, options);\n        });\n    }\n    //#endregion\n    //#region Batching \n    batchProductRecommendations(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ProductRecommendationRequestCollection', request, options);\n        });\n    }\n    batchContentRecommendations(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ContentRecommendationRequestCollection', request, options);\n        });\n    }\n    batchContentCategoryRecommendations(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ContentCategoryRecommendationRequestCollection', request, options);\n        });\n    }\n    batchProductCategoryRecommendations(request, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('ProductCategoryRecommendationRequestCollection', request, options);\n        });\n    }\n}\n\nclass UserFactory {\n    static anonymous(user) {\n        return Object.assign({}, user);\n    }\n    static byAuthenticatedId(authenticatedId, temporaryId, user) {\n        return Object.assign(Object.assign({ authenticatedId }, (temporaryId && { temporaryId })), user);\n    }\n    static byTemporaryId(temporaryId, user) {\n        return Object.assign(Object.assign({}, user), { temporaryId });\n    }\n    static byIdentifier(key, value, user) {\n        return Object.assign(Object.assign({}, user), { identifiers: { [key]: value } });\n    }\n    static byIdentifiers(identifiers, user) {\n        return Object.assign({ identifiers }, user);\n    }\n    static byEmail(email, user) {\n        return Object.assign({ email }, user);\n    }\n    static byFingerprint(fingerprint, user) {\n        return Object.assign({ fingerprint }, user);\n    }\n}\n\nclass DataValueFactory {\n    static string(value) {\n        return new StringDataValue(value);\n    }\n    static stringCollection(collection) {\n        return new StringCollectionDataValue(collection);\n    }\n    static number(value) {\n        return new NumberDataValue(value);\n    }\n    static doubleCollection(collection) {\n        return new DoubleCollectionDataValue(collection);\n    }\n    static boolean(value) {\n        return new BooleanDataValue(value);\n    }\n    static booleanCollection(collection) {\n        return new BooleanCollectionDataValue(collection);\n    }\n    static multiCurrency(values) {\n        return new MultiCurrencyDataValue(values);\n    }\n    static multilingual(values) {\n        return new MultilingualDataValue(values);\n    }\n    static multilingualCollection(values) {\n        return new MultilingualCollectionDataValue(values);\n    }\n    static object(data) {\n        return new ObjectDataValue(data);\n    }\n    static objectCollection(objects) {\n        return new ObjectCollectionDataValue(objects);\n    }\n}\n\nclass ValueSelectorFactory {\n    static dataDoubleSelector(key) {\n        return {\n            $type: 'Relewise.Client.Requests.ValueSelectors.DataDoubleSelector, Relewise.Client',\n            key: key,\n        };\n    }\n    static fixedDoubleValueSelector(value) {\n        return {\n            $type: 'Relewise.Client.Requests.ValueSelectors.FixedDoubleValueSelector, Relewise.Client',\n            value: value,\n        };\n    }\n}\n\nexport { BooleanCollectionDataValue, BooleanDataValue, BrandSettingsRecommendationBuilder, BySingleProductRecommendationBuilder, ConditionBuilder, ContentCategoriesRecommendationCollectionBuilder, ContentCategorySettingsRecommendationBuilder, ContentSearchBuilder, ContentSettingsRecommendationBuilder, ContentSortingBuilder, ContentsRecommendationCollectionBuilder, ContentsViewedAfterViewingContentBuilder, ContentsViewedAfterViewingMultipleContentsBuilder, ContentsViewedAfterViewingMultipleProductsBuilder, ContentsViewedAfterViewingProductBuilder, DataObjectFacetBuilder, DataObjectFilterConditionBuilder, DataObjectValueSelectorBuilder, DataValueBase, DataValueFactory, DoubleCollectionDataValue, FacetBuilder, FilterBuilder, FilterScopesBuilder, FilterSettingsBuilder, MultiCurrencyDataValue, MultilingualCollectionDataValue, MultilingualDataValue, NumberDataValue, ObjectCollectionDataValue, ObjectDataValue, PaginationBuilder, PersonalBrandRecommendationBuilder, PersonalContentCategoryRecommendationBuilder, PersonalContentRecommendationBuilder, PersonalProductCategoryRecommendationBuilder, PersonalProductRecommendationBuilder, PopularBrandsRecommendationBuilder, PopularContentCategoriesRecommendationBuilder, PopularContentsBuilder, PopularProductCategoriesRecommendationBuilder, PopularProductsBuilder, PopularSearchTermsRecommendationBuilder, ProblemDetailsError, ProductCategoriesRecommendationCollectionBuilder, ProductCategorySearchBuilder, ProductCategorySettingsRecommendationBuilder, ProductCategorySortingBuilder, ProductSearchBuilder, ProductSettingsRecommendationBuilder, ProductSortingBuilder, ProductsRecommendationCollectionBuilder, ProductsViewedAfterViewingContentBuilder, ProductsViewedAfterViewingProductBuilder, PurchasedWithCurrentCartBuilder, PurchasedWithMultipleProductsBuilder, PurchasedWithProductBuilder, RecentlyViewedProductsBuilder, RecommendationRequestBuilder, Recommender, RelevanceModifierBuilder, RelewiseClient, SearchCollectionBuilder, SearchRequestBuilder, SearchTermBasedProductRecommendationBuilder, SearchTermPredictionBuilder, Searcher, SimilarProductsProductBuilder, SortProductsBuilder, SortVariantsBuilder, StringCollectionDataValue, StringDataValue, Tracker, UserFactory, ValueSelectorFactory };\n//# sourceMappingURL=relewise-client.js.map\n","import { RelewiseClient, RelewiseClientOptions, ProductUpdate, RelewiseRequestOptions, TrackProductUpdateRequest, ProductAdministrativeAction, TrackProductAdministrativeActionRequest, Trackable, SearchResponseCollection, BatchedTrackingRequest, ProductCategoryUpdate, TrackProductCategoryUpdateRequest, TrackProductCategoryAdministrativeActionRequest, ProductCategoryAdministrativeAction, ContentCategoryAdministrativeAction, ContentCategoryUpdate, TrackContentCategoryAdministrativeActionRequest, TrackContentCategoryUpdateRequest, ContentUpdate, TrackContentUpdateRequest, ContentAdministrativeAction, TrackContentAdministrativeActionRequest, BrandUpdate, BrandAdministrativeAction, TrackBrandAdministrativeActionRequest, TrackBrandUpdateRequest, CompanyUpdate, TrackCompanyUpdateRequest, CompanyAdministrativeAction, TrackCompanyAdministrativeActionRequest } from '@relewise/client';\n\nexport class Integrator extends RelewiseClient {\n\n    public batchSize: number = 1_000;\n\n    constructor(protected readonly datasetId: string, protected readonly apiKey: string, options?: RelewiseClientOptions) {\n        super(datasetId, apiKey, options);\n    }\n\n    public async updateProduct(request: ProductUpdate, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackProductUpdateRequest, void>(\n            'TrackProductUpdateRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackProductUpdateRequest, Relewise.Client',\n                productUpdate: request,\n            },\n            options);\n    }\n\n    public async executeProductAdministrativeAction(request: ProductAdministrativeAction, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackProductAdministrativeActionRequest, void>(\n            'TrackProductAdministrativeActionRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackProductAdministrativeActionRequest, Relewise.Client',\n                administrativeAction: request,\n            },\n            options);\n    }\n\n    public async updateProductCategory(request: ProductCategoryUpdate, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackProductCategoryUpdateRequest, void>(\n            'TrackProductCategoryUpdateRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackProductCategoryUpdateRequest, Relewise.Client',\n                productCategoryUpdate: request,\n            },\n            options);\n    }\n\n    public async executeProductCategoryAdministrativeAction(request: ProductCategoryAdministrativeAction, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackProductCategoryAdministrativeActionRequest, void>(\n            'TrackProductCategoryAdministrativeActionRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackProductCategoryAdministrativeActionRequest, Relewise.Client',\n                administrativeAction: request,\n            },\n            options);\n    }\n\n    public async updateContentCategory(request: ContentCategoryUpdate, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackContentCategoryUpdateRequest, void>(\n            'TrackContentCategoryUpdateRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackContentCategoryUpdateRequest, Relewise.Client',\n                contentCategoryUpdate: request,\n            },\n            options);\n    }\n\n    public async executeContentCategoryAdministrativeAction(request: ContentCategoryAdministrativeAction, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackContentCategoryAdministrativeActionRequest, void>(\n            'TrackContentCategoryAdministrativeActionRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackContentCategoryAdministrativeActionRequest, Relewise.Client',\n                administrativeAction: request,\n            },\n            options);\n    }\n\n    public async updateContent(request: ContentUpdate, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackContentUpdateRequest, void>(\n            'TrackContentUpdateRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackContentUpdateRequest, Relewise.Client',\n                contentUpdate: request,\n            },\n            options);\n    }\n\n    public async executeContentAdministrativeAction(request: ContentAdministrativeAction, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackContentAdministrativeActionRequest, void>(\n            'TrackContentAdministrativeActionRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackContentAdministrativeActionRequest, Relewise.Client',\n                administrativeAction: request,\n            },\n            options);\n    }\n\n    public async updateBrand(request: BrandUpdate, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackBrandUpdateRequest, void>(\n            'TrackBrandUpdateRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackBrandUpdateRequest, Relewise.Client',\n                brandUpdate: request,\n            },\n            options);\n    }\n\n    public async executeBrandAdministrativeAction(request: BrandAdministrativeAction, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackBrandAdministrativeActionRequest, void>(\n            'TrackBrandAdministrativeActionRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackBrandAdministrativeActionRequest, Relewise.Client',\n                administrativeAction: request,\n            },\n            options);\n    }\n\n    public async updateCompany(request: CompanyUpdate, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackCompanyUpdateRequest, void>(\n            'TrackCompanyUpdateRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackCompanyUpdateRequest, Relewise.Client',\n                companyUpdate: request,\n            },\n            options);\n    }\n\n    public async executeCompanyAdministrativeAction(request: CompanyAdministrativeAction, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackCompanyAdministrativeActionRequest, void>(\n            'TrackCompanyAdministrativeActionRequest',\n            {\n                $type: 'Relewise.Client.Requests.Tracking.TrackCompanyAdministrativeActionRequest, Relewise.Client',\n                administrativeAction: request,\n            },\n            options);\n    }\n\n    public async batch(trackable: Trackable[], options?: RelewiseRequestOptions): Promise<SearchResponseCollection | undefined> {\n        if (!trackable) {\n            throw new Error('No trackable items was provided');\n        }\n\n        if (trackable.length === 0) {\n            return;\n        }\n\n        const chuncks = trackable.length > this.batchSize\n            ? this.chunk(trackable, this.batchSize)\n            : [trackable];\n\n        for (const chunck of chuncks) {\n            await this.request<BatchedTrackingRequest, SearchResponseCollection>(\n                'BatchedTrackingRequest',\n                {\n                    $type: 'Relewise.Client.Requests.Tracking.BatchedTrackingRequest, Relewise.Client',\n                    items: chunck,\n                },\n                options);\n        }\n    }\n\n    private chunk(trackable: Trackable[], chunk: number) {\n        const result = [];\n        for (let i = 0; i < trackable.length; i += chunk) {\n            result.push(trackable.slice(i, i + chunk));\n        }\n        return result;\n    }\n}","import { CategoryNameAndId, CategoryPath } from '@relewise/client';\n\nexport type ProductCategoryPath = {\n    path: PathNode[]\n};\n\nexport type PathNode = {\n    id: string;\n    displayName: {\n        value: string;\n        language: string;\n    }[]\n}\n\nexport class CategoryPathBuilder {\n    private paths: CategoryPath[] = [];\n\n    path(builder: (builder: PathBuilder) => void): this {\n        const b = new PathBuilder();\n        builder(b);\n        this.paths.push({ breadcrumbPathStartingFromRoot: b.build() });\n\n        return this;    \n    }\n\n    build(): CategoryPath[] {\n        return this.paths;\n    }\n}\n\nexport class PathBuilder {\n    private path: PathNode[] = [];\n\n    category(categoryIdAndName: {\n        id: string;\n        displayName: {\n            value: string;\n            language: string;\n        }[]\n    }): this {\n\n        this.path.push(categoryIdAndName);\n        \n        return this;    \n    }\n\n    build(): CategoryNameAndId[] {\n        return this.path.map(x=> ({\n            id: x.id, \n            displayName: { values: x.displayName.map(d => ({ text: d.value, language: { value: d.language } })) },\n        }));\n    }\n}","import { Product, DataValue, ProductVariant, Brand, ProductUpdate } from '@relewise/client';\nimport { CategoryPathBuilder } from '../categoryPathBuilder';\n\nexport class ProductUpdateBuilder {\n    private product: Product;\n    private productUpdateKind: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace';\n    private variantUpdateKind: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace';\n    private brandUpdateKind: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace' | null | undefined;\n    private replaceExistingVariants: boolean;\n    private productVariants: ProductVariant[] | null | undefined;\n\n    constructor({ id, productUpdateKind, brandUpdateKind, variantUpdateKind = 'UpdateAndAppend', replaceExistingVariants = false }: {\n        id: string,\n        productUpdateKind: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace',\n        variantUpdateKind?: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace',\n        replaceExistingVariants?: boolean,\n        brandUpdateKind?: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace' | null\n    }) {\n        this.product = { id: id };\n        this.productUpdateKind = productUpdateKind;\n        this.variantUpdateKind = variantUpdateKind;\n        this.replaceExistingVariants = replaceExistingVariants;\n        this.brandUpdateKind = brandUpdateKind;\n    }\n\n    displayName(values: {\n        value: string;\n        language: string;\n    }[]): this {\n        this.product.displayName = {\n            values: values.map(x => ({ text: x.value, language: { value: x.language } })),\n        };\n\n        return this;\n    }\n\n    data(data: Record<string, DataValue | null>): this {\n        this.product.data = data as Record<string, DataValue>; // TODO remove dirty hack\n\n        return this;\n    }\n\n    variants(variants: ProductVariant[]): this {\n        this.productVariants = variants;\n\n        return this;\n    }\n\n    /**\n     * Add multiple category paths to a product. Start from the root to the lowest child. Example: Tools -> Outdoor -> Shovel\n     * @param paths \n     * @returns \n     */\n    categoryPaths(builder: (b: CategoryPathBuilder) => void): this {\n        const b = new CategoryPathBuilder();\n        builder(b);\n        this.product.categoryPaths = b.build();\n        \n        return this;\n    }\n\n    assortments(assortments: number[]): this {\n        this.product.assortments = assortments;\n\n        return this;\n    }\n\n    listPrice(values: { amount: number;  currency: string; }[]): this {\n        this.product.listPrice = { values: values.map(x => ({ amount: x.amount, currency: { value: x.currency } })) };\n\n        return this;\n    }\n\n    salesPrice(values: { amount: number; currency: string; }[]): this {\n        this.product.salesPrice = { values: values.map(x => ({ amount: x.amount, currency: { value: x.currency } })) };\n\n        return this;\n    }\n\n    brand(brand: Brand): this {\n        this.product.brand = brand;\n\n        return this;\n    }\n\n    build(): ProductUpdate {\n        return {\n            $type: 'Relewise.Client.DataTypes.ProductUpdate, Relewise.Client',\n            product: this.product,\n            variants: this.productVariants,\n            productUpdateKind: this.productUpdateKind,\n            variantUpdateKind: this.variantUpdateKind,\n            brandUpdateKind: this.brandUpdateKind,\n            replaceExistingVariants: this.replaceExistingVariants,\n        };\n    }\n}","import { ProductAdministrativeAction, FilterBuilder } from '@relewise/client';\n\nexport class ProductAdministrativeActionBuilder {\n    private filterBuilder = new FilterBuilder();\n    private productUpdateKind: 'None' | 'Disable' | 'Enable' | 'PermanentlyDelete' | 'Delete';\n    private variantUpdateKind: 'None' | 'Disable' | 'Enable' | 'PermanentlyDelete' | 'Delete';\n    language: string | null | undefined;\n    currency: string | null | undefined;\n\n    constructor({ language, currency, productUpdateKind, variantUpdateKind = 'None', filters }: {\n        currency?: string | null,\n        language?: string | null,\n        productUpdateKind: 'None' | 'Disable' | 'Enable' | 'PermanentlyDelete' | 'Delete',\n        variantUpdateKind?: 'None' | 'Disable' | 'Enable' | 'PermanentlyDelete' | 'Delete',\n        filters: (filterBuilder: FilterBuilder) => void\n    }) {\n        this.language = language;\n        this.currency = currency;\n        this.productUpdateKind = productUpdateKind;\n        this.variantUpdateKind = variantUpdateKind;\n\n        filters(this.filterBuilder);\n    }\n\n    filters(filters: (filterBuilder: FilterBuilder) => void): this {\n        filters(this.filterBuilder);\n\n        return this;\n    }\n\n    build(): ProductAdministrativeAction {\n        const filters = this.filterBuilder.build();\n\n        if (!filters || !filters.items || filters.items.length === 0) {\n            throw new Error('No filters were provided for the product administrative action');\n        }\n\n        return {\n            $type: 'Relewise.Client.DataTypes.ProductAdministrativeAction, Relewise.Client',\n            ...(this.language && { language: { value: this.language } }),\n            ...(this.currency && { currency: { value: this.currency } }),\n            filters: filters,\n            productUpdateKind: this.productUpdateKind,\n            variantUpdateKind: this.variantUpdateKind,\n        };\n    }\n}","import { DataValue, ProductVariant } from '@relewise/client';\n\nexport class ProductVariantBuilder {\n    private variant: ProductVariant;\n\n    constructor({ id }: {\n        id: string,\n    }) {\n        this.variant = { id: id };\n    }\n\n    displayName(values: {\n        value: string;\n        language: string;\n    }[]): this {\n        this.variant.displayName = { \n            values: values.map(x => ({ text: x.value, language: { value: x.language } })), \n        };\n\n        return this;\n    }\n\n    data(data: Record<string, DataValue | null>): this {\n        this.variant.data = data as Record<string, DataValue>; // TODO remove dirty hack\n\n        return this;\n    }\n\n    assortments(assortments: number[]): this {\n        this.variant.assortments = assortments;\n\n        return this;\n    }\n\n    listPrice(values: {\n        amount: number;\n        currency: string;\n    }[]): this {\n        this.variant.listPrice = { values: values.map(x => ({ amount: x.amount, currency: { value: x.currency } })) };\n\n        return this;\n    }\n\n    salesPrice(values: {\n        amount: number;\n        currency: string;\n    }[]): this {\n        this.variant.salesPrice = { values: values.map(x => ({ amount: x.amount, currency: { value: x.currency } })) };\n\n        return this;\n    }\n\n    specifications(specifications: Record<string, string>): this {\n        this.variant.specification = specifications;\n\n        return this;\n    }\n\n    build(): ProductVariant {\n        return this.variant;\n    }\n}","import { DataValue, ProductCategoryUpdate, ProductCategory } from '@relewise/client';\nimport { CategoryPathBuilder } from '../categoryPathBuilder';\n\nexport class ProductCategoryUpdateBuilder {\n    private productCategory: ProductCategory;\n    private kind: 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace';\n\n    constructor({ id, kind }: {\n        id: string,\n        kind: 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace'\n    }) {\n        this.productCategory = { \n            $type: 'Relewise.Client.DataTypes.ProductCategory, Relewise.Client',\n            id: id,\n        };\n        this.kind = kind;\n    }\n\n    displayName(values: {\n        value: string;\n        language: string;\n    }[]): this {\n        this.productCategory.displayName = {\n            values: values.map(x => ({ text: x.value, language: { value: x.language } })),\n        };\n\n        return this;\n    }\n\n    data(data: Record<string, DataValue | null>): this {\n        this.productCategory.data = data as Record<string, DataValue>; // TODO remove dirty hack\n\n        return this;\n    }\n\n    /**\n     * Add multiple category paths to a product category. Start from the root to the lowest child. Example: Tools -> Outdoor -> Shovel\n     * @param paths \n     * @returns \n     */\n    categoryPaths(builder: (b: CategoryPathBuilder) => void): this {\n        const b = new CategoryPathBuilder();\n        builder(b);\n        this.productCategory.categoryPaths = b.build();\n        \n        return this;\n    }\n\n    assortments(assortments: number[]): this {\n        this.productCategory.assortments = assortments;\n\n        return this;\n    }\n\n    build(): ProductCategoryUpdate {\n        return {\n            $type: 'Relewise.Client.DataTypes.ProductCategoryUpdate, Relewise.Client',\n            category: this.productCategory,\n            kind: this.kind,\n        };\n    }\n}","import { FilterBuilder, ProductCategoryAdministrativeAction } from '@relewise/client';\n\nexport class ProductCategoryAdministrativeActionBuilder {\n    private filterBuilder = new FilterBuilder();\n    private kind: 'Disable' | 'Enable' | 'Delete';\n\n    language: string | null | undefined;\n    currency: string | null | undefined;\n\n    constructor({ language, currency, kind, filters }: {\n        currency?: string | null,\n        language?: string | null,\n        kind: 'Disable' | 'Enable' | 'Delete',\n        filters: (filterBuilder: FilterBuilder) => void\n    }) {\n        this.language = language;\n        this.currency = currency;\n        this.kind = kind;\n\n        filters(this.filterBuilder);\n    }\n\n    filters(filters: (filterBuilder: FilterBuilder) => void): this {\n        filters(this.filterBuilder);\n\n        return this;\n    }\n\n    build(): ProductCategoryAdministrativeAction {\n        const filters = this.filterBuilder.build();\n\n        if (!filters || !filters.items || filters.items.length === 0) {\n            throw new Error('No filters were provided for the product category administrative action');\n        }\n\n        return {\n            $type: 'Relewise.Client.DataTypes.ProductCategoryAdministrativeAction, Relewise.Client',\n            ...(this.language && { language: { value: this.language } }),\n            ...(this.currency && { currency: { value: this.currency } }),\n            filters: filters,\n            kind: this.kind,\n        };\n    }\n}","import { DataValue, ContentCategoryUpdate, ContentCategory } from '@relewise/client';\nimport { CategoryPathBuilder } from '../categoryPathBuilder';\n\nexport class ContentCategoryUpdateBuilder {\n    private contentCategory: ContentCategory;\n    private kind: 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace';\n\n    constructor({ id, kind }: {\n        id: string,\n        kind: 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace'\n    }) {\n        this.contentCategory = { \n            $type: 'Relewise.Client.DataTypes.ContentCategory, Relewise.Client',\n            id: id,\n        };\n        this.kind = kind;\n    }\n\n    displayName(values: {\n        value: string;\n        language: string;\n    }[]): this {\n        this.contentCategory.displayName = {\n            values: values.map(x => ({ text: x.value, language: { value: x.language } })),\n        };\n\n        return this;\n    }\n\n    data(data: Record<string, DataValue | null>): this {\n        this.contentCategory.data = data as Record<string, DataValue>; // TODO remove dirty hack\n\n        return this;\n    }\n\n    /**\n     * Add multiple category paths to a content category. Start from the root to the lowest child. Example: Tools -> Outdoor -> Shovel\n     * @param paths \n     * @returns \n     */\n    categoryPaths(builder: (b: CategoryPathBuilder) => void): this {\n        const b = new CategoryPathBuilder();\n        builder(b);\n        this.contentCategory.categoryPaths = b.build();\n        \n        return this;\n    }\n\n    assortments(assortments: number[]): this {\n        this.contentCategory.assortments = assortments;\n\n        return this;\n    }\n\n    build(): ContentCategoryUpdate {\n        return {\n            $type: 'Relewise.Client.DataTypes.ContentCategoryUpdate, Relewise.Client',\n            category: this.contentCategory,\n            kind: this.kind,\n        };\n    }\n}","import { ContentCategoryAdministrativeAction, FilterBuilder } from '@relewise/client';\n\nexport class ContentCategoryAdministrativeActionBuilder {\n    private filterBuilder = new FilterBuilder();\n    private kind: 'Disable' | 'Enable' | 'Delete';\n\n    language: string | null | undefined;\n    currency: string | null | undefined;\n\n    constructor({ language, currency, kind, filters }: {\n        currency?: string | null,\n        language?: string | null,\n        kind: 'Disable' | 'Enable' | 'Delete',\n        filters: (filterBuilder: FilterBuilder) => void\n    }) {\n        this.language = language;\n        this.currency = currency;\n        this.kind = kind;\n\n        filters(this.filterBuilder);\n    }\n\n    filters(filters: (filterBuilder: FilterBuilder) => void): this {\n        filters(this.filterBuilder);\n\n        return this;\n    }\n\n    build(): ContentCategoryAdministrativeAction {\n        const filters = this.filterBuilder.build();\n\n        if (!filters || !filters.items || filters.items.length === 0) {\n            throw new Error('No filters were provided for the product category administrative action');\n        }\n\n        return {\n            $type: 'Relewise.Client.DataTypes.ContentCategoryAdministrativeAction, Relewise.Client',\n            ...(this.language && { language: { value: this.language } }),\n            ...(this.currency && { currency: { value: this.currency } }),\n            filters: filters,\n            kind: this.kind,\n        };\n    }\n}","import { DataValue,Content, ContentUpdate } from '@relewise/client';\nimport { CategoryPathBuilder } from '../categoryPathBuilder';\n\nexport class ContentUpdateBuilder {\n    private content: Content;\n    private updateKind: 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace';\n\n    constructor({ id, updateKind }: {\n        id: string,\n        updateKind: 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace',\n    }) {\n        this.content = { id: id };\n        this.updateKind = updateKind;\n    }\n\n    displayName(values: {\n        value: string;\n        language: string;\n    }[]): this {\n        this.content.displayName = {\n            values: values.map(x => ({ text: x.value, language: { value: x.language } })),\n        };\n\n        return this;\n    }\n\n    data(data: Record<string, DataValue | null>): this {\n        this.content.data = data as Record<string, DataValue>; // TODO remove dirty hack\n\n        return this;\n    }\n\n    /**\n     * Add multiple category paths to a content. Start from the root to the lowest child. Example: Tools -> Outdoor -> Shovel\n     * @param paths \n     * @returns \n     */\n    categoryPaths(builder: (b: CategoryPathBuilder) => void): this {\n        const b = new CategoryPathBuilder();\n        builder(b);\n        this.content.categoryPaths = b.build();\n        \n        return this;\n    }\n\n    assortments(assortments: number[]): this {\n        this.content.assortments = assortments;\n\n        return this;\n    }\n\n\n    build(): ContentUpdate {\n        return {\n            $type: 'Relewise.Client.DataTypes.ContentUpdate, Relewise.Client',\n            content: this.content,\n            kind: this.updateKind,\n        };\n    }\n}","import { ContentAdministrativeAction, FilterBuilder } from '@relewise/client';\n\nexport class ContentAdministrativeActionBuilder {\n    private filterBuilder = new FilterBuilder();\n    private kind: 'Disable' |  'Enable'  | 'Delete';\n\n    language: string | null | undefined;\n    currency: string | null | undefined;\n\n    constructor({ language, currency, kind, filters }: {\n        currency?: string | null,\n        language?: string | null,\n        kind: 'Disable' | 'Enable' | 'Delete',\n        filters: (filterBuilder: FilterBuilder) => void\n    }) {\n        this.language = language;\n        this.currency = currency;\n        this.kind = kind;\n\n        filters(this.filterBuilder);\n    }\n\n    filters(filters: (filterBuilder: FilterBuilder) => void): this {\n        filters(this.filterBuilder);\n\n        return this;\n    }\n\n    build(): ContentAdministrativeAction {\n        const filters = this.filterBuilder.build();\n\n        if (!filters || !filters.items || filters.items.length === 0) {\n            throw new Error('No filters were provided for the content administrative action');\n        }\n\n        return {\n            $type: 'Relewise.Client.DataTypes.ContentAdministrativeAction, Relewise.Client',\n            ...(this.language && { language: { value: this.language } }),\n            ...(this.currency && { currency: { value: this.currency } }),\n            filters: filters,\n            kind: this.kind,\n        };\n    }\n}","import { DataValue, Brand, BrandUpdate } from '@relewise/client';\n\nexport class BrandUpdateBuilder {\n    private brand: Brand;\n    private updateKind: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace';\n\n    constructor({ id, updateKind }: {\n        id: string,\n        updateKind: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace',\n    }) {\n        this.brand = { id: id };\n        this.updateKind = updateKind;\n    }\n\n    displayName(name: string): this {\n        this.brand.displayName = name;\n\n        return this;\n    }\n\n    data(data: Record<string, DataValue | null>): this {\n        this.brand.data = data as Record<string, DataValue>; // TODO remove dirty hack\n\n        return this;\n    }\n\n    assortments(assortments: number[]): this {\n        this.brand.assortments = assortments;\n\n        return this;\n    }\n\n    build(): BrandUpdate {\n        return {\n            $type: 'Relewise.Client.DataTypes.BrandUpdate, Relewise.Client',\n            brand: this.brand,\n            kind: this.updateKind,\n        };\n    }\n}","import { BrandAdministrativeAction, FilterBuilder } from '@relewise/client';\n\nexport class BrandAdministrativeActionBuilder {\n    private filterBuilder = new FilterBuilder();\n    private kind: 'Disable' |  'Enable'  | 'Delete';\n\n    language: string | null | undefined;\n    currency: string | null | undefined;\n\n    constructor({ language, currency, kind, filters }: {\n        currency?: string | null,\n        language?: string | null,\n        kind: 'Disable' | 'Enable' | 'Delete',\n        filters: (filterBuilder: FilterBuilder) => void\n    }) {\n        this.language = language;\n        this.currency = currency;\n        this.kind = kind;\n\n        filters(this.filterBuilder);\n    }\n\n    filters(filters: (filterBuilder: FilterBuilder) => void): this {\n        filters(this.filterBuilder);\n\n        return this;\n    }\n\n    build(): BrandAdministrativeAction {\n        const filters = this.filterBuilder.build();\n\n        if (!filters || !filters.items || filters.items.length === 0) {\n            throw new Error('No filters were provided for the brand administrative action');\n        }\n\n        return {\n            $type: 'Relewise.Client.DataTypes.BrandAdministrativeAction, Relewise.Client',\n            ...(this.language && { language: { value: this.language } }),\n            ...(this.currency && { currency: { value: this.currency } }),\n            filters: filters,\n            kind: this.kind,\n        };\n    }\n}","import { DataValue, CompanyUpdate, Company } from '@relewise/client';\n\nexport class CompanyUpdateBuilder {\n    private company: Company;\n    private updateKind: 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace';\n    private parentCompanies: Company[] | null | undefined;\n    private replaceExistingParents: boolean;\n\n    constructor({ id, updateKind, replaceExistingParents }: {\n        id: string,\n        updateKind: 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace',\n        replaceExistingParents: boolean\n    }) {\n        this.company = { id: id };\n        this.updateKind = updateKind;\n        this.replaceExistingParents = replaceExistingParents;\n    }\n\n    data(data: Record<string, DataValue | null>): this {\n        this.company.data = data as Record<string, DataValue>; // TODO remove dirty hack\n\n        return this;\n    }\n\n    parents(parents: Company[]): this {\n        this.parentCompanies = parents;\n\n        return this;\n    }\n\n    build(): CompanyUpdate {\n        return {\n            $type: 'Relewise.Client.DataTypes.CompanyUpdate, Relewise.Client',\n            company: this.company,\n            kind: this.updateKind,\n            replaceExistingParents: this.replaceExistingParents,\n            parents: this.parentCompanies,\n        };\n    }\n}","import { CompanyAdministrativeAction, FilterBuilder } from '@relewise/client';\n\nexport class CompanyAdministrativeActionBuilder {\n    private filterBuilder = new FilterBuilder();\n    private kind: 'Disable' |  'Enable'  | 'Delete';\n\n    language: string | null | undefined;\n    currency: string | null | undefined;\n\n    constructor({ language, currency, kind, filters }: {\n        currency?: string | null,\n        language?: string | null,\n        kind: 'Disable' | 'Enable' | 'Delete',\n        filters: (filterBuilder: FilterBuilder) => void\n    }) {\n        this.language = language;\n        this.currency = currency;\n        this.kind = kind;\n\n        filters(this.filterBuilder);\n    }\n\n    filters(filters: (filterBuilder: FilterBuilder) => void): this {\n        filters(this.filterBuilder);\n\n        return this;\n    }\n\n    build(): CompanyAdministrativeAction {\n        const filters = this.filterBuilder.build();\n\n        if (!filters || !filters.items || filters.items.length === 0) {\n            throw new Error('No filters were provided for the brand administrative action');\n        }\n\n        return {\n            $type: 'Relewise.Client.DataTypes.CompanyAdministrativeAction, Relewise.Client',\n            ...(this.language && { language: { value: this.language } }),\n            ...(this.currency && { currency: { value: this.currency } }),\n            filters: filters,\n            kind: this.kind,\n        };\n    }\n}"],"names":["__awaiter"],"mappings":"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"}