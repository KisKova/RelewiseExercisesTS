{"version":3,"file":"relewise-client.js","sources":["../../src/models/dataValue.ts","../../src/builders/filterScopesBuilder.ts","../../src/builders/filterSettingsBuilder.ts","../../src/builders/dataObjectFilterConditionBuilder.ts","../../src/builders/filters/filterBuilderBase.ts","../../src/builders/conditionBuilder.ts","../../src/builders/filters/brandFilterBuilder.ts","../../src/builders/filters/companyFilterBuilder.ts","../../src/builders/filters/contentFilterBuilder.ts","../../src/builders/filters/productFilterBuilder.ts","../../src/builders/filters/variantFilterBuilder.ts","../../src/builders/filterBuilder.ts","../../src/builders/paginationBuilder.ts","../../src/builders/relevanceModifierBuilder.ts","../../src/builders/search/dataObjectFacetBuilder.ts","../../src/builders/search/facetBuilder.ts","../../src/builders/search/dataObjectValueSelectorBuilder.ts","../../src/builders/search/productSortingBuilder.ts","../../src/builders/search/contentSortingBuilder.ts","../../src/builders/search/productCategorySortingBuilder.ts","../../src/builders/search/searchRequestBuilder.ts","../../src/builders/search/contentSearchBuilder.ts","../../src/builders/search/productCategorySearchBuilder.ts","../../src/builders/search/searchConstraintBuilder.ts","../../src/builders/search/productSearchBuilder.ts","../../src/builders/search/searchCollectionBuilder.ts","../../src/builders/search/searchTermPredictionBuilder.ts","../../src/builders/search/getProductFacet.ts","../../src/builders/search/getContentFacet.ts","../../src/builders/search/getProductCategoryFacet.ts","../../src/builders/recommendation/recommendationRequestBuilder.ts","../../src/builders/recommendation/contents/contentSettingsRecommendationBuilder.ts","../../src/builders/recommendation/contents/contentsRecommendationCollectionBuilder.ts","../../src/builders/recommendation/contents/contentsViewedAfterViewingContentBuilder.ts","../../src/builders/recommendation/contents/contentsViewedAfterViewingMultipleContentsBuilder.ts","../../src/builders/recommendation/contents/contentsViewedAfterViewingMultipleProductsBuilder.ts","../../src/builders/recommendation/contents/contentsViewedAfterViewingProductBuilder.ts","../../src/builders/recommendation/contents/personalContentRecommendationBuilder.ts","../../src/builders/recommendation/contents/popularContentsBuilder.ts","../../src/builders/recommendation/content-categories/contentCategoriesRecommendationCollectionBuilder.ts","../../src/builders/recommendation/content-categories/contentCategorySettingsRecommendationBuilder.ts","../../src/builders/recommendation/content-categories/personalContentCategoryRecommendationBuilder.ts","../../src/builders/recommendation/content-categories/popularContentCategoriesRecommendationBuilder.ts","../../src/builders/recommendation/brands/brandSettingsRecommendationBuilder.ts","../../src/builders/recommendation/brands/personalBrandRecommendationBuilder.ts","../../src/builders/recommendation/brands/popularBrandsRecommendationBuilder.ts","../../src/builders/recommendation/product-categories/productCategorySettingsRecommendationBuilder.ts","../../src/builders/recommendation/product-categories/personalProductCategoryRecommendationBuilder.ts","../../src/builders/recommendation/product-categories/popularProductCategoriesRecommendationBuilder.ts","../../src/builders/recommendation/product-categories/productCategoriesRecommendationCollectionBuilder.ts","../../src/builders/recommendation/products/productSettingsRecommendationBuilder.ts","../../src/builders/recommendation/products/purchasedWithCurrentCartBuilder.ts","../../src/builders/recommendation/products/bySingleProductRecommendationBuilder.ts","../../src/builders/recommendation/products/productsViewedAfterViewingProductBuilder.ts","../../src/builders/recommendation/products/productsViewedAfterViewingContentBuilder.ts","../../src/builders/recommendation/products/personalProductRecommendationBuilder.ts","../../src/builders/recommendation/products/popularityMultiplierBuilder.ts","../../src/builders/recommendation/products/popularProductsBuilder.ts","../../src/builders/recommendation/products/recentlyViewedProductsBuilder.ts","../../src/builders/recommendation/products/sortVariantsBuilder.ts","../../src/builders/recommendation/products/productsRecommendationCollectionBuilder.ts","../../src/builders/recommendation/products/purchasedWithMultipleProductsBuilder.ts","../../src/builders/recommendation/products/purchasedWithProductBuilder.ts","../../src/builders/recommendation/products/searchTermBasedProductRecommendationBuilder.ts","../../src/builders/recommendation/products/sortProductsBuilder.ts","../../src/builders/recommendation/products/similarProductsProductBuilder.ts","../../src/builders/recommendation/search-terms/popularSearchTermsRecommendationBuilder.ts","../../node_modules/tslib/tslib.es6.js","../../src/version.ts","../../src/relewise.client.ts","../../src/tracker.ts","../../src/searcher.ts","../../src/recommender.ts","../../src/factory/user.factory.ts","../../src/factory/dataValue.factory.ts","../../src/factory/valueSelector.factory.ts"],"sourcesContent":["import { DataObject, DataValue, MultiCurrency, Multilingual, MultilingualCollectionValue } from './data-contracts';\n\nexport type DataValueTypes = 'String' | 'Double' | 'Boolean' | 'Multilingual' | 'Money' | 'MultiCurrency' | 'StringList' | 'DoubleList' | 'BooleanList' | 'MultilingualCollection' | 'Object' | 'ObjectList';\n\nexport abstract class DataValueBase<T> implements DataValue {\n    constructor(type: DataValueTypes, value: T) {\n        this.type = type;\n        this.value = value;\n    }\n\n    type: DataValueTypes;\n    value: T;\n\n    readonly abstract isCollection: boolean;\n}\n\nexport interface CollectionWithType<T> {\n    $type: string;\n    $values: T[];\n}\n\nexport interface MultilingualCollectionWithType<T> {\n    $type: string;\n    values: T[];\n}\n\nexport interface MultiCurrencyWithType extends MultiCurrency {\n    $type: string;\n}\n\nexport interface MultilingualWithType extends Multilingual {\n    $type: string;\n}\n\nexport interface DataObjectWithType extends DataObject {\n    $type: string;\n}\n\nexport class StringDataValue extends DataValueBase<string> {\n    constructor(value: string) {\n        super('String', value);\n    }\n\n    readonly isCollection = false;\n}\n\nexport class StringCollectionDataValue extends DataValueBase<CollectionWithType<string>> {\n    constructor(value: string[]) {\n        super('StringList',\n            {\n                $type: 'System.Collections.Generic.List`1[[System.String, System.Private.CoreLib]], System.Private.CoreLib',\n                $values: value,\n            });\n    }\n\n    readonly isCollection = true;\n}\n\nexport class MultilingualCollectionDataValue extends DataValueBase<MultilingualCollectionWithType<MultilingualCollectionValue>> {\n    constructor(values: { values: string[], language: string }[]) {\n        super('MultilingualCollection',\n            {\n                $type: 'Relewise.Client.DataTypes.MultilingualCollection, Relewise.Client',\n                values: values.map(x => ({ values: x.values, language: { value: x.language } })),\n            });\n    }\n\n    readonly isCollection = true;\n}\n\nexport class NumberDataValue extends DataValueBase<number> {\n    constructor(value: number) {\n        super('Double', value);\n    }\n\n    readonly isCollection = false;\n}\n\nexport class DoubleCollectionDataValue extends DataValueBase<CollectionWithType<number>> {\n    constructor(value: number[]) {\n        super('DoubleList',\n            {\n                $type: 'System.Collections.Generic.List`1[[System.Double, System.Private.CoreLib]], System.Private.CoreLib',\n                $values: value,\n            });\n    }\n\n    readonly isCollection = true;\n}\n\nexport class BooleanDataValue extends DataValueBase<boolean> {\n    constructor(value: boolean) {\n        super('Boolean', value);\n    }\n\n    readonly isCollection = false;\n}\n\nexport class BooleanCollectionDataValue extends DataValueBase<CollectionWithType<boolean>> {\n    constructor(value: boolean[]) {\n        super('BooleanList',\n            {\n                $type: 'System.Collections.Generic.List`1[[System.Boolean, System.Private.CoreLib]], System.Private.CoreLib',\n                $values: value,\n            });\n    }\n\n    readonly isCollection = true;\n}\n\nexport class MultiCurrencyDataValue extends DataValueBase<MultiCurrencyWithType> {\n    constructor(values: { amount: number, currency: string }[]) {\n        super('MultiCurrency',\n            {\n                $type: 'Relewise.Client.DataTypes.MultiCurrency, Relewise.Client',\n                values: values.map(x => ({ amount: x.amount, currency: { value: x.currency } })),\n            });\n    }\n\n    readonly isCollection = false;\n}\n\nexport class MultilingualDataValue extends DataValueBase<MultilingualWithType> {\n    constructor(values: { value: string, language: string }[]) {\n        super('Multilingual',\n            {\n                $type: 'Relewise.Client.DataTypes.Multilingual, Relewise.Client',\n                values: values.map(x => ({ text: x.value, language: { value: x.language } })),\n            });\n    }\n\n    readonly isCollection = false;\n}\n\nexport class ObjectDataValue extends DataValueBase<DataObjectWithType> {\n    constructor(dataObject: { [key: string]: DataValue }) {\n        super('Object',\n            {\n                $type: 'Relewise.Client.DataTypes.DataObject, Relewise.Client',\n                data: dataObject,\n            });\n    }\n\n    readonly isCollection = false;\n}\n\nexport class ObjectCollectionDataValue extends DataValueBase<CollectionWithType<DataObjectWithType>> {\n    constructor(dataObjects: { [key: string]: DataValue }[]) {\n        super('ObjectList',\n            {\n                $type: 'System.Collections.Generic.List`1[[Relewise.Client.DataTypes.DataObject, Relewise.Client]], System.Private.CoreLib',\n                $values: dataObjects.map(x => ({ $type: 'Relewise.Client.DataTypes.DataObject, Relewise.Client', data: x })),\n            });\n    }\n\n    readonly isCollection = true;\n}","import { ApplyFilterSettings, FilterScopes } from '../models/data-contracts';\n\nexport class FilterScopesBuilder {\n\n    private fillScope: ApplyFilterSettings | undefined = undefined;\n    private defaultScope: ApplyFilterSettings | undefined = undefined;\n\n    public fill({ apply }: { apply: boolean; }): this {\n        this.fillScope = {\n            $type: 'Relewise.Client.Requests.Filters.Settings.ApplyFilterSettings, Relewise.Client',\n            apply,\n        };\n\n        return this;\n    }\n\n    public default({ apply }: { apply: boolean; }): this {\n        this.defaultScope = {\n            $type: 'Relewise.Client.Requests.Filters.Settings.ApplyFilterSettings, Relewise.Client',\n            apply,\n        };\n\n        return this;\n    }\n\n    public build(): FilterScopes | null {\n        return this.fillScope || this.defaultScope\n            ? {\n                fill: this.fillScope,\n                default: this.defaultScope,\n            }\n            : null;\n    }\n}","import { FilterSettings } from '../models/data-contracts';\nimport { FilterScopesBuilder } from './filterScopesBuilder';\n\nexport class FilterSettingsBuilder {\n    private scopesBuilder: FilterScopesBuilder = new FilterScopesBuilder();\n\n    public scopes(builder: (builder: FilterScopesBuilder) => void): this {\n        builder(this.scopesBuilder);\n\n        return this;\n    }\n\n    public build(): FilterSettings | null {\n        const scopes = this.scopesBuilder.build();\n        return scopes\n            ? { scopes: scopes }\n            : null;\n    }\n}","import { DoubleRange, DataValueBase, ObjectValueMinByCondition, ObjectValueMaxByCondition, ObjectValueContainsCondition, ObjectValueEqualsCondition, ObjectValueGreaterThanCondition, ObjectValueLessThanCondition, ObjectValueInRangeCondition, ObjectValueCondition, ObjectValueIsSubsetOfCondition } from '..';\n\nexport type DataObjectFilterConditions =\n    | ObjectValueContainsCondition\n    | ObjectValueEqualsCondition\n    | ObjectValueGreaterThanCondition\n    | ObjectValueInRangeCondition\n    | ObjectValueLessThanCondition\n    | ObjectValueMaxByCondition\n    | ObjectValueMinByCondition;\n\nexport class DataObjectFilterConditionBuilder {\n    conditions: DataObjectFilterConditions[] = [];\n\n    public addContainsCondition<T>(key: string, value: DataValueBase<T>, mode: 'All' | 'Any' = 'All', objectPath?: string[], negated: boolean = false): this {\n        const condition: ObjectValueContainsCondition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueContainsCondition, Relewise.Client',\n            key: key,\n            value: value,\n            objectPath: objectPath,\n            mode: mode,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addEqualsCondition<T>(key: string, value: DataValueBase<T>, objectPath?: string[], negated: boolean = false): this {\n        const condition: ObjectValueEqualsCondition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueEqualsCondition, Relewise.Client',\n            value: value,\n            objectPath: objectPath,\n            negated: negated,\n            key: key,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addInRangeCondition(key: string, range: DoubleRange, objectPath?: string[], negated: boolean = false): this {\n        const condition: ObjectValueInRangeCondition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueInRangeCondition, Relewise.Client',\n            range: range,\n            key: key,\n            objectPath: objectPath,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addGreaterThanCondition(key: string, value: number, objectPath?: string[], negated: boolean = false): this {\n        const condition: ObjectValueGreaterThanCondition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueGreaterThanCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n            key: key,\n            objectPath: objectPath,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addLessThanCondition(key: string, value: number, objectPath?: string[], negated: boolean = false): this {\n        const condition: ObjectValueLessThanCondition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueLessThanCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n            key: key,\n            objectPath: objectPath,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addMinByCondition(key: string, objectPath?: string[], negated: boolean = false): this {\n        const condition: ObjectValueMinByCondition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueMinByCondition, Relewise.Client',\n            negated: negated,\n            key: key,\n            objectPath: objectPath,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addMaxByCondition(key: string, objectPath?: string[], negated: boolean = false): this {\n        const condition: ObjectValueMaxByCondition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueMaxByCondition, Relewise.Client',\n            negated: negated,\n            key: key,\n            objectPath: objectPath,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addObjectValueIsSubsetOfCondition<T>(key: string, value: DataValueBase<T>, objectPath?: string[], negated: boolean = false): this {\n        const condition: ObjectValueIsSubsetOfCondition = {\n            $type: 'Relewise.Client.Requests.Filters.DataObjects.Conditions.ObjectValueIsSubsetOfCondition, Relewise.Client',\n            value: value,\n            key: key,\n            objectPath: objectPath,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public build(): DataObjectFilterConditions[] | null {\n        return this.conditions.length === 0\n            ? null\n            : this.conditions\n    }\n}","import { AndFilter, FilterCollection, OrFilter } from '../../models/data-contracts';\nimport { FilterSettingsBuilder } from '../filterSettingsBuilder';\nimport { AllFilters, FilterOptions } from './filters.types.shared';\n\nexport type Constructor<T> = new () => T;\n\nexport abstract class FilterBuilderBase<TFilterBuilder extends FilterBuilderBase<any>> {\n    constructor(private TFilterBuilderCtor: Constructor<TFilterBuilder>) { }\n\n    protected filters: AllFilters[] = [];\n\n    /**\n     * Adds an AND filter to the request.\n     * @param filterBuilder - Function to build the AND filter.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilderBase instance for chaining.\n     */\n    public and(filterBuilder: (builder: TFilterBuilder) => void, negated: boolean = false, options?: FilterOptions): this {\n        const builder = new this.TFilterBuilderCtor();\n        filterBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filters = builder.build();\n        if (filters === null || !filters.items || filters.items.length <= 0) {\n            throw new Error('And-filters must contain at least 1 filter');\n        }\n\n        const filter: AndFilter = {\n            $type: 'Relewise.Client.Requests.Filters.AndFilter, Relewise.Client',\n            filters: filters.items,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds an OR filter to the request.\n     * @param filterBuilder - Function to build the OR filter.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilderBase instance for chaining.\n     */\n    public or(filterBuilder: (builder: TFilterBuilder) => void, negated: boolean = false, options?: FilterOptions): this {\n        const builder = new this.TFilterBuilderCtor();\n        filterBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filters = builder.build();\n        if (filters === null || !filters.items || filters.items.length <= 0) {\n            throw new Error('Or-filters must contain at least 1 filter');\n        }\n\n        const filter: OrFilter = {\n            $type: 'Relewise.Client.Requests.Filters.OrFilter, Relewise.Client',\n            filters: filters.items,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Resets the filters.\n     * @returns The FilterBuilderBase instance for chaining.\n     */\n    public reset(): this {\n        this.filters = [];\n        return this;\n    }\n\n    /**\n     * Builds the filter collection.\n     * @returns The FilterCollection or null if no filters are added.\n     */\n    public build(): FilterCollection | null {\n        return this.filters.length === 0 ? null : { items: this.filters };\n    }\n}\n","import { ContainsCondition, DistinctCondition, EqualsCondition, GreaterThanCondition, LessThanCondition, HasValueCondition, RelativeDateTimeCondition, ValueConditionCollection } from '../models/data-contracts';\nimport { DataValueBase } from '../models/dataValue';\nimport { DataObjectFilterConditionBuilder } from './dataObjectFilterConditionBuilder';\n\nexport type Conditions = ContainsCondition | DistinctCondition | EqualsCondition | GreaterThanCondition | LessThanCondition | HasValueCondition | RelativeDateTimeCondition;\n\nexport class ConditionBuilder {\n    conditions: Conditions[] = [];\n\n    public addContainsCondition<T>(value: DataValueBase<T>, valueCollectionEvaluationMode: 'All' | 'Any' = 'All', negated: boolean = false): this {\n        const condition: ContainsCondition = {\n            $type: 'Relewise.Client.Requests.Conditions.ContainsCondition, Relewise.Client',\n            value: value,\n            valueCollectionEvaluationMode: valueCollectionEvaluationMode,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addDistinctCondition(numberOfOccurrencesAllowedWithTheSameValue: number, negated: boolean = false): this {\n        const condition: DistinctCondition = {\n            $type: 'Relewise.Client.Requests.Conditions.DistinctCondition, Relewise.Client',\n            numberOfOccurrencesAllowedWithTheSameValue: numberOfOccurrencesAllowedWithTheSameValue,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addEqualsCondition<T>(value: DataValueBase<T>, negated: boolean = false): this {\n        const condition: EqualsCondition = {\n            $type: 'Relewise.Client.Requests.Conditions.EqualsCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addGreaterThanCondition(value: number, negated: boolean = false): this {\n        const condition: GreaterThanCondition = {\n            $type: 'Relewise.Client.Requests.Conditions.GreaterThanCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addLessThanCondition(value: number, negated: boolean = false): this {\n        const condition: LessThanCondition = {\n            $type: 'Relewise.Client.Requests.Conditions.LessThanCondition, Relewise.Client',\n            value: value,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addDataObjectCondition(conditions: (builder: DataObjectFilterConditionBuilder) => void, skip?: number, take?: number, negated: boolean = false): this {\n        const conditionsBuilder = new DataObjectFilterConditionBuilder();\n        conditions(conditionsBuilder);\n\n        const condition: ContainsCondition = {\n            $type: 'Relewise.Client.Requests.Conditions.ContainsCondition, Relewise.Client',\n            objectFilter: {\n                conditions: conditionsBuilder.build(),\n                skip: skip,\n                take: take,\n            },\n            valueCollectionEvaluationMode: 'All',\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addHasValueCondition(negated: boolean = false) {\n        const condition: HasValueCondition = {\n            $type: 'Relewise.Client.Requests.Conditions.HasValueCondition, Relewise.Client',\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public addRelativeDateTimeCondition(comparison: 'Before' | 'After', unit: 'UnixMilliseconds' | 'UnixSeconds' | 'UnixMinutes', currentTimeOffset: number = 0, negated: boolean = false) {\n        const condition: RelativeDateTimeCondition = {\n            $type: 'Relewise.Client.Requests.Conditions.RelativeDateTimeCondition, Relewise.Client',\n            comparison: comparison,\n            currentTimeOffset: currentTimeOffset,\n            unit: unit,\n            negated: negated,\n        };\n        this.conditions.push(condition);\n\n        return this;\n    }\n\n    public build(): ValueConditionCollection | null {\n        return this.conditions.length === 0\n            ? null\n            : { items: this.conditions }\n    }\n}","import { BrandAssortmentFilter, BrandDataFilter, BrandDataHasKeyFilter, BrandDisabledFilter, BrandIdFilter } from '../../models/data-contracts';\n\nimport { ConditionBuilder } from '../conditionBuilder';\nimport { EntityDataFilterOptions, FilterOptions } from './filters.types.shared';\nimport { FilterSettingsBuilder } from '../filterSettingsBuilder';\nimport { FilterBuilderBase } from './filterBuilderBase';\n\nexport class BrandFilterBuilder extends FilterBuilderBase<BrandFilterBuilder> {\n    constructor() { super(BrandFilterBuilder); }\n\n    /**\n     * Adds a brand assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The BrandFilterBuilder instance for chaining.\n     */\n    public addBrandAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        const assortments: number[] = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: BrandAssortmentFilter = {\n            $type: 'Relewise.Client.Requests.Filters.BrandAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return the specified brands.\n     * @param brandIds - Array of brand IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The BrandFilterBuilder instance for chaining.\n     */\n    public addBrandIdFilter(brandIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const ids: string[] = Array.isArray(brandIds)\n            ? brandIds\n            : [brandIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: BrandIdFilter = {\n            $type: 'Relewise.Client.Requests.Filters.BrandIdFilter, Relewise.Client',\n            brandIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a brand data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out brands without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The BrandFilterBuilder instance for chaining.\n     */\n    public addBrandDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: BrandDataFilter = {\n            $type: 'Relewise.Client.Requests.Filters.BrandDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options?.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a brand has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The BrandFilterBuilder instance for chaining.\n     */\n    public addBrandDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: BrandDataHasKeyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.BrandDataHasKeyFilter, Relewise.Client',\n            key: key,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a brand is disabled filter to the request. Only works for brand queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The BrandFilterBuilder instance for chaining.\n     */\n    public addBrandDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: BrandDisabledFilter = {\n            $type: 'Relewise.Client.Requests.Filters.BrandDisabledFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n}\n","import { CompanyDataFilter, CompanyDataHasKeyFilter, CompanyDisabledFilter, CompanyIdFilter } from '../../models/data-contracts';\nimport { ConditionBuilder } from '../conditionBuilder';\nimport { FilterSettingsBuilder } from '../filterSettingsBuilder';\nimport { FilterBuilderBase } from './filterBuilderBase';\nimport { EntityDataFilterOptions, FilterOptions } from './filters.types.shared';\n\nexport class CompanyFilterBuilder extends FilterBuilderBase<CompanyFilterBuilder> {\n    constructor() { super(CompanyFilterBuilder); }\n\n    /**\n     * Filters the request to only return the specified companies.\n     * @param companyIds - Array of company IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The CompanyFilterBuilder instance for chaining.\n     */\n    public addCompanyIdFilter(companyIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const ids: string[] = Array.isArray(companyIds)\n            ? companyIds\n            : [companyIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: CompanyIdFilter = {\n            $type: 'Relewise.Client.Requests.Filters.CompanyIdFilter, Relewise.Client',\n            companyIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a company data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out companies without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The CompanyFilterBuilder instance for chaining.\n     */\n    public addCompanyDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: CompanyDataFilter = {\n            $type: 'Relewise.Client.Requests.Filters.CompanyDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options?.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a company has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The CompanyFilterBuilder instance for chaining.\n     */\n    public addCompanyDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: CompanyDataHasKeyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.CompanyDataHasKeyFilter, Relewise.Client',\n            key: key,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a company is disabled filter to the request. Only works for company queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The CompanyFilterBuilder instance for chaining.\n     */\n    public addCompanyDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: CompanyDisabledFilter = {\n            $type: 'Relewise.Client.Requests.Filters.CompanyDisabledFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n}\n","import { ContentAssortmentFilter, ContentCategoryAssortmentFilter, ContentCategoryHasAncestorFilter, ContentCategoryHasChildFilter, ContentCategoryHasContentsFilter, ContentCategoryHasParentFilter, ContentCategoryIdFilter, ContentCategoryLevelFilter, ContentCategoryDataFilter, ContentDataFilter, ContentIdFilter, ContentCategoryDataHasKeyFilter, ContentCategoryDisabledFilter, ContentCategoryRecentlyViewedByUserFilter, ContentDataHasKeyFilter, ContentDisabledFilter, ContentRecentlyViewedByUserFilter, ContentHasCategoriesFilter } from '../../models/data-contracts';\nimport { ConditionBuilder } from '../conditionBuilder';\nimport { EntityDataFilterOptions, FilterOptions } from './filters.types.shared';\nimport { FilterSettingsBuilder } from '../filterSettingsBuilder';\nimport { FilterBuilderBase } from './filterBuilderBase';\n\nexport class ContentFilterBuilder extends FilterBuilderBase<ContentFilterBuilder> {\n    constructor() { super(ContentFilterBuilder); }\n\n    /**\n     * Adds a content assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        const assortments: number[] = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentAssortmentFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        const assortments: number[] = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryAssortmentFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return contents within the specified categories.\n     * @param evaluationScope - Scope of the category evaluation (ImmediateParent, ImmediateParentOrItsParent, Ancestor).\n     * @param categoryIds - Array of category IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryIdFilter(evaluationScope: 'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor', categoryIds: string[] | string, negated: boolean = false, options?: FilterOptions): this {\n        const ids: string[] = Array.isArray(categoryIds)\n            ? categoryIds\n            : [categoryIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryIdFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryIdFilter, Relewise.Client',\n            evaluationScope: evaluationScope,\n            categoryIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return the specified contents.\n     * @param contentIds - Array of content IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentIdFilter(contentIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const ids: string[] = Array.isArray(contentIds)\n            ? contentIds\n            : [contentIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentIdFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentIdFilter, Relewise.Client',\n            contentIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category level filter to the request.\n     * @param levels - Array of category levels or a single level.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryLevelFilter(levels: number | number[], negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryLevelFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryLevelFilter, Relewise.Client',\n            levels: Array.isArray(levels) ? levels : [levels],\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category has parent filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryHasParentFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryHasParentFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryHasParentFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category has child filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryHasChildFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryHasChildFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryHasChildFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category has ancestor filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryHasAncestorFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryHasAncestorFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryHasAncestorFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category has contents filter to the request ensuring that only categories with content in them are returned.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryHasContentsFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryHasContentsFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryHasContentsFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out categories without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryDataFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options?.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out contents without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentDataFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options?.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryDataHasKeyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryDataHasKeyFilter, Relewise.Client',\n            key: key,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category is disabled filter to the request. Only works for content queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryDisabledFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryDisabledFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return content categories recently viewed by the user.\n     * @param sinceMinutesAgo - Time in minutes since the category was viewed.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentCategoryRecentlyViewedByUserFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentCategoryRecentlyViewedByUserFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentCategoryRecentlyViewedByUserFilter, Relewise.Client',\n            sinceMinutesAgo: sinceMinutesAgo,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentDataHasKeyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentDataHasKeyFilter, Relewise.Client',\n            key: key,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content is disabled filter to the request. Only works for content queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentDisabledFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentDisabledFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return content recently viewed by the user.\n     * @param sinceMinutesAgo - Time in minutes since the content was viewed.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentRecentlyViewedByUserFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentRecentlyViewedByUserFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentRecentlyViewedByUserFilter, Relewise.Client',\n            sinceMinutesAgo: sinceMinutesAgo,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content has categories filter to the request.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ContentFilterBuilder instance for chaining.\n     */\n    public addContentHasCategoriesFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ContentHasCategoriesFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ContentHasCategoriesFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n}\n","import { ProductAndVariantIdFilter, ProductAssortmentFilter, ProductCategoryAssortmentFilter, ProductCategoryHasAncestorFilter, ProductCategoryHasChildFilter, ProductCategoryHasParentFilter, ProductCategoryHasProductsFilter, ProductCategoryIdFilter, ProductCategoryLevelFilter, ProductDataFilter, ProductDisplayNameFilter, ProductHasVariantsFilter, ProductIdFilter, ProductListPriceFilter, ProductRecentlyPurchasedByUserFilter, ProductRecentlyViewedByUserFilter, ProductSalesPriceFilter, ProductAndVariantId, ProductCategoryDataFilter, ProductCategoryDataHasKeyFilter, ProductCategoryDisabledFilter, ProductCategoryRecentlyViewedByUserFilter, ProductDataHasKeyFilter, ProductDisabledFilter, ProductHasCategoriesFilter, ProductRecentlyPurchasedByCompanyFilter, ProductRecentlyPurchasedByUserCompanyFilter, ProductRecentlyPurchasedByUserParentCompanyFilter, ProductRecentlyViewedByCompanyFilter, ProductRecentlyViewedByUserCompanyFilter, ProductRecentlyViewedByUserParentCompanyFilter, ProductInCartFilter } from '../../models/data-contracts';\nimport { ConditionBuilder } from '../conditionBuilder';\nimport { EntityDataFilterOptions, FilterOptions } from './filters.types.shared';\nimport { FilterSettingsBuilder } from '../filterSettingsBuilder';\nimport { FilterBuilderBase } from './filterBuilderBase';\n\nexport class ProductFilterBuilder extends FilterBuilderBase<ProductFilterBuilder> {\n    constructor() { super(ProductFilterBuilder); }\n\n    /**\n     * Adds a product assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        const assortments: number[] = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductAssortmentFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        const assortments: number[] = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryAssortmentFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products within the specified categories.\n     * @param evaluationScope - Scope of the category evaluation (ImmediateParent, ImmediateParentOrItsParent, Ancestor).\n     * @param categoryIds - Array of category IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryIdFilter(evaluationScope: 'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor', categoryIds: string[] | string, negated: boolean = false, options?: FilterOptions): this {\n        const ids: string[] = Array.isArray(categoryIds)\n            ? categoryIds\n            : [categoryIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryIdFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryIdFilter, Relewise.Client',\n            evaluationScope: evaluationScope,\n            categoryIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out categories without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryDataFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options?.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return the specified products.\n     * @param productIds - Array of product IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductIdFilter(productIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const ids: string[] = Array.isArray(productIds)\n            ? productIds\n            : [productIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductIdFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductIdFilter, Relewise.Client',\n            productIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a range filter to the request ensuring the product has a certain range of variants.\n     * @param lowerBound - Lower bound of the range (inclusive).\n     * @param upperBound - Upper bound of the range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductHasVariantsFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductHasVariantsFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductHasVariantsFilter, Relewise.Client',\n            numberOfVariants: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products purchased since a certain point in time.\n     * @param sinceUtc - Date-time string indicating the point in time.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductRecentlyPurchasedByUserFilter(sinceUtc: string, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductRecentlyPurchasedByUserFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyPurchasedByUserFilter, Relewise.Client',\n            sinceUtc: sinceUtc,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products viewed since a certain point in time.\n     * @param sinceUtc - Date-time string indicating the point in time.\n     * @param negated - If true\n\n, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductRecentlyViewedByUserFilter(sinceUtc: string, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductRecentlyViewedByUserFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyViewedByUserFilter, Relewise.Client',\n            sinceUtc: sinceUtc,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products within a certain sales price range.\n     * @param lowerBound - Lower bound of the price range (inclusive).\n     * @param upperBound - Upper bound of the price range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductSalesPriceFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductSalesPriceFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductSalesPriceFilter, Relewise.Client',\n            range: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products within a certain list price range.\n     * @param lowerBound - Lower bound of the price range (inclusive).\n     * @param upperBound - Upper bound of the price range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductListPriceFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductListPriceFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductListPriceFilter, Relewise.Client',\n            range: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product display name filter to the request.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductDisplayNameFilter(conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, negated: boolean = false, options?: FilterOptions): this {\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductDisplayNameFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductDisplayNameFilter, Relewise.Client',\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product and variant ID filter to the request.\n     * @param products - Array of product and variant IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductAndVariantIdFilter(products: ProductAndVariantId | ProductAndVariantId[], negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductAndVariantIdFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductAndVariantIdFilter, Relewise.Client',\n            productAndVariantIds: Array.isArray(products) ? products : [products],\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category level filter to the request.\n     * @param levels - Array of category levels or a single level.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryLevelFilter(levels: number | number[], negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryLevelFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryLevelFilter, Relewise.Client',\n            levels: Array.isArray(levels) ? levels : [levels],\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category has parent filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryHasParentFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryHasParentFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryHasParentFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category has child filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryHasChildFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryHasChildFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryHasChildFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category has ancestor filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryHasAncestorFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryHasAncestorFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryHasAncestorFilter, Relewise.Client',\n            categoryIds: categoryIds ? (Array.isArray(categoryIds) ? categoryIds : [categoryIds]) : undefined,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category has products filter to the request ensuring that only categories with products in them are returned.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryHasProductsFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryHasProductsFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryHasProductsFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out products without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductDataFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options?.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryDataHasKeyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryDataHasKeyFilter, Relewise.Client',\n            key: key,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category is disabled filter to the request. Only works for product queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryDisabledFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryDisabledFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product category recently viewed by user filter to the request.\n     * @param sinceMinutesAgo - Time in minutes since the category was viewed.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductCategoryRecentlyViewedByUserFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductCategoryRecentlyViewedByUserFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductCategoryRecentlyViewedByUserFilter, Relewise.Client',\n            sinceMinutesAgo: sinceMinutesAgo,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductDataHasKeyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductDataHasKeyFilter, Relewise.Client',\n            key: key,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product is disabled filter to the request. Only works for product queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductDisabledFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductDisabledFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product has categories filter to the request.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductHasCategoriesFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductHasCategoriesFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductHasCategoriesFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently purchased by a company.\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\n     * @param companyIds - Array of company IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductRecentlyPurchasedByCompanyFilter(sinceMinutesAgo: number, companyIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const companies: string[] = Array.isArray(companyIds)\n            ? companyIds\n            : [companyIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductRecentlyPurchasedByCompanyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyPurchasedByCompanyFilter, Relewise.Client',\n            companyIds: companies,\n            sinceMinutesAgo: sinceMinutesAgo,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently purchased by the user's company.\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductRecentlyPurchasedByUserCompanyFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductRecentlyPurchasedByUserCompanyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyPurchasedByUserCompanyFilter, Relewise.Client',\n            sinceMinutesAgo: sinceMinutesAgo,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently purchased by the user's parent company.\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductRecentlyPurchasedByUserParentCompanyFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductRecentlyPurchasedByUserParentCompanyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyPurchasedByUserParentCompanyFilter, Relewise.Client',\n            sinceMinutesAgo: sinceMinutesAgo,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently viewed by a company.\n     * @param sinceMinutesAgo - Time in minutes since the view.\n     * @param companyIds - Array of company IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductRecentlyViewedByCompanyFilter(sinceMinutesAgo: number, companyIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const companies: string[] = Array.isArray(companyIds)\n            ? companyIds\n            : [companyIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductRecentlyViewedByCompanyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyViewedByCompanyFilter, Relewise.Client',\n            companyIds: companies,\n            sinceMinutesAgo: sinceMinutesAgo,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently viewed by the user's company.\n     * @param sinceMinutesAgo - Time in minutes since the view.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductRecentlyViewedByUserCompanyFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductRecentlyViewedByUserCompanyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyViewedByUserCompanyFilter, Relewise.Client',\n            sinceMinutesAgo: sinceMinutesAgo,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently viewed by the user's parent company.\n     * @param sinceMinutesAgo - Time in minutes since the view.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductRecentlyViewedByUserParentCompanyFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductRecentlyViewedByUserParentCompanyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductRecentlyViewedByUserParentCompanyFilter, Relewise.Client',\n            sinceMinutesAgo: sinceMinutesAgo,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products in the user's cart.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductInCartFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: ProductInCartFilter = {\n            $type: 'Relewise.Client.Requests.Filters.ProductInCartFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n\n        this.filters.push(filter);\n\n        return this;\n    }\n}","import { VariantAssortmentFilter, VariantDataFilter, VariantDataHasKeyFilter, VariantDisabledFilter, VariantIdFilter, VariantListPriceFilter, VariantSalesPriceFilter, VariantSpecificationFilter } from '../../models/data-contracts';\nimport { ConditionBuilder } from '../conditionBuilder';\nimport { EntityDataFilterOptions, FilterOptions } from './filters.types.shared';\nimport { FilterSettingsBuilder } from '../filterSettingsBuilder';\nimport { FilterBuilderBase } from './filterBuilderBase';\n\nexport class VariantFilterBuilder extends FilterBuilderBase<VariantFilterBuilder> {\n    constructor() { super(VariantFilterBuilder); }\n\n    /**\n     * Adds a variant assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The VariantFilterBuilder instance for chaining.\n     */\n    public addVariantAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        const assortments: number[] = Array.isArray(assortmentIds)\n            ? assortmentIds\n            : [assortmentIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: VariantAssortmentFilter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantAssortmentFilter, Relewise.Client',\n            assortments: assortments,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return the specified variants.\n     * @param variantIds - Array of variant IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The VariantFilterBuilder instance for chaining.\n     */\n    public addVariantIdFilter(variantIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        const ids: string[] = Array.isArray(variantIds)\n            ? variantIds\n            : [variantIds];\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: VariantIdFilter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantIdFilter, Relewise.Client',\n            variantIds: ids,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return variants within a certain list price range.\n     * @param lowerBound - Lower bound of the price range (inclusive).\n     * @param upperBound - Upper bound of the price range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The VariantFilterBuilder instance for chaining.\n     */\n    public addVariantListPriceFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: VariantListPriceFilter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantListPriceFilter, Relewise.Client',\n            range: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return variants within a certain sales price range.\n     * @param lowerBound - Lower bound of the price range (inclusive).\n     * @param upperBound - Upper bound of the price range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The VariantFilterBuilder instance for chaining.\n     */\n    public addVariantSalesPriceFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: VariantSalesPriceFilter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantSalesPriceFilter, Relewise.Client',\n            range: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Filters the request to only return variants with a certain specification.\n     * @param key - Specification key.\n     * @param equalTo - Specification value to match.\n     * @param filterOutIfKeyIsNotFound - If true, filters out variants without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The VariantFilterBuilder instance for chaining.\n     */\n    public addVariantSpecificationFilter(key: string, equalTo: string, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: VariantSpecificationFilter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantSpecificationFilter, Relewise.Client',\n            key: key,\n            equalTo: equalTo,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a variant data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out variants without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The VariantFilterBuilder instance for chaining.\n     */\n    public addVariantDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: VariantDataFilter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            objectPath: options?.objectPath,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a variant has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The VariantFilterBuilder instance for chaining.\n     */\n    public addVariantDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: VariantDataHasKeyFilter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantDataHasKeyFilter, Relewise.Client',\n            key: key,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a variant is disabled filter to the request. Only works for product queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The VariantFilterBuilder instance for chaining.\n     */\n    public addVariantDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: VariantDisabledFilter = {\n            $type: 'Relewise.Client.Requests.Filters.VariantDisabledFilter, Relewise.Client',\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n}","import { AndFilter, CartDataFilter, FilterCollection, OrFilter, ProductAndVariantId } from '../models/data-contracts';\nimport { FilterSettingsBuilder } from './filterSettingsBuilder';\nimport { ConditionBuilder } from './conditionBuilder';\nimport { BrandFilterBuilder } from './filters/brandFilterBuilder';\nimport { CompanyFilterBuilder } from './filters/companyFilterBuilder';\nimport { ContentFilterBuilder } from './filters/contentFilterBuilder';\nimport { ProductFilterBuilder } from './filters/productFilterBuilder';\nimport { VariantFilterBuilder } from './filters/variantFilterBuilder';\nimport { AllFilters, FilterOptions, EntityDataFilterOptions } from './filters/filters.types.shared';\n\nexport class FilterBuilder {\n    private filters: AllFilters[] = [];\n\n    private productFilterBuilder: ProductFilterBuilder = new ProductFilterBuilder();\n    private brandFilterBuilder: BrandFilterBuilder = new BrandFilterBuilder();\n    private contentFilterBuilder: ContentFilterBuilder = new ContentFilterBuilder();\n    private variantFilterBuilder: VariantFilterBuilder = new VariantFilterBuilder();\n    private companyFilterBuilder: CompanyFilterBuilder = new CompanyFilterBuilder();\n\n    /**\n     * Adds a product assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductAssortmentFilter(assortmentIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a variant assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addVariantAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        this.variantFilterBuilder.addVariantAssortmentFilter(assortmentIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a brand assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addBrandAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        this.brandFilterBuilder.addBrandAssortmentFilter(assortmentIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentAssortmentFilter(assortmentIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content category assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryAssortmentFilter(assortmentIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product category assortment filter to the request.\n     * @param assortmentIds - Array of assortment IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductCategoryAssortmentFilter(assortmentIds: number[] | number, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductCategoryAssortmentFilter(assortmentIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products within the specified categories.\n     * @param evaluationScope - Scope of the category evaluation (ImmediateParent, ImmediateParentOrItsParent, Ancestor).\n     * @param categoryIds - Array of category IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductCategoryIdFilter(evaluationScope: 'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor', categoryIds: string[] | string, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductCategoryIdFilter(evaluationScope, categoryIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return contents within the specified categories.\n     * @param evaluationScope - Scope of the category evaluation (ImmediateParent, ImmediateParentOrItsParent, Ancestor).\n     * @param categoryIds - Array of category IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryIdFilter(evaluationScope: 'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor', categoryIds: string[] | string, negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryIdFilter(evaluationScope, categoryIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return the specified products.\n     * @param productIds - Array of product IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductIdFilter(productIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductIdFilter(productIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return the specified variants.\n     * @param variantIds - Array of variant IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addVariantIdFilter(variantIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.variantFilterBuilder.addVariantIdFilter(variantIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return the specified brands.\n     * @param brandIds - Array of brand IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addBrandIdFilter(brandIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.brandFilterBuilder.addBrandIdFilter(brandIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return the specified contents.\n     * @param contentIds - Array of content IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentIdFilter(contentIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentIdFilter(contentIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return the specified companies.\n     * @param companyIds - Array of company IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addCompanyIdFilter(companyIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.companyFilterBuilder.addCompanyIdFilter(companyIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a range filter to the request ensuring the product has a certain range of variants.\n     * @param lowerBound - Lower bound of the range (inclusive).\n     * @param upperBound - Upper bound of the range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductHasVariantsFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductHasVariantsFilter(lowerBound, upperBound, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products purchased since a certain point in time.\n     * @param sinceUtc - Date-time string indicating the point in time.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductRecentlyPurchasedByUserFilter(sinceUtc: string, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductRecentlyPurchasedByUserFilter(sinceUtc, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products viewed since a certain point in time.\n     * @param sinceUtc - Date-time string indicating the point in time.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductRecentlyViewedByUserFilter(sinceUtc: string, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductRecentlyViewedByUserFilter(sinceUtc, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products within a certain sales price range.\n     * @param lowerBound - Lower bound of the price range (inclusive).\n     * @param upperBound - Upper bound of the price range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductSalesPriceFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductSalesPriceFilter(lowerBound, upperBound, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return products within a certain list price range.\n     * @param lowerBound - Lower bound of the price range (inclusive).\n     * @param upperBound - Upper bound of the price range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductListPriceFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductListPriceFilter(lowerBound, upperBound, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return variants within a certain sales price range.\n     * @param lowerBound - Lower bound of the price range (inclusive).\n     * @param upperBound - Upper bound of the price range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addVariantSalesPriceFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        this.variantFilterBuilder.addVariantSalesPriceFilter(lowerBound, upperBound, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return variants within a certain list price range.\n     * @param lowerBound - Lower bound of the price range (inclusive).\n     * @param upperBound - Upper bound of the price range (inclusive).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addVariantListPriceFilter(lowerBound?: number, upperBound?: number, negated: boolean = false, options?: FilterOptions): this {\n        this.variantFilterBuilder.addVariantListPriceFilter(lowerBound, upperBound, negated, options);\n        return this;\n    }\n\n    /**\n     * Filters the request to only return variants with a certain specification.\n     * @param key - Specification key.\n     * @param equalTo - Specification value to match.\n     * @param filterOutIfKeyIsNotFound - If true, filters out variants without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addVariantSpecificationFilter(key: string, equalTo: string, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: FilterOptions): this {\n        this.variantFilterBuilder.addVariantSpecificationFilter(key, equalTo, filterOutIfKeyIsNotFound, negated, options);\n        return this;\n    }\n\n    /**\n     * Combines filters using logical AND.\n     * @param filterBuilder - Function to build the AND filter.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     * @throws Error if no filters are provided.\n     */\n    public and(filterBuilder: (builder: FilterBuilder) => void, negated: boolean = false, options?: FilterOptions): this {\n        const builder = new FilterBuilder();\n        filterBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filters = builder.build();\n        if (filters === null || filters.items === undefined || filters.items === null || filters.items.length <= 0) {\n            throw new Error('And-filters must contain at least 1 filter');\n        }\n\n        const filter: AndFilter = {\n            $type: 'Relewise.Client.Requests.Filters.AndFilter, Relewise.Client',\n            filters: filters.items,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Combines filters using logical OR.\n     * @param filterBuilder - Function to build the OR filter.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     * @throws Error if no filters are provided.\n     */\n    public or(filterBuilder: (builder: FilterBuilder) => void, negated: boolean = false, options?: FilterOptions): this {\n        const builder = new FilterBuilder();\n        filterBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filters = builder.build();\n        if (filters === null || filters.items === undefined || filters.items === null || filters.items.length <= 0) {\n            throw new Error('Or-filters must contain at least 1 filter');\n        }\n\n        const filter: OrFilter = {\n            $type: 'Relewise.Client.Requests.Filters.OrFilter, Relewise.Client',\n            filters: filters.items,\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a product data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out products without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        this.productFilterBuilder.addProductDataFilter(key, conditionBuilder, mustMatchAllConditions, filterOutIfKeyIsNotFound, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a variant data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out variants without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addVariantDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        this.variantFilterBuilder.addVariantDataFilter(key, conditionBuilder, mustMatchAllConditions, filterOutIfKeyIsNotFound, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a brand data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out brands without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addBrandDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        this.brandFilterBuilder.addBrandDataFilter(key, conditionBuilder, mustMatchAllConditions, filterOutIfKeyIsNotFound, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a cart data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out carts without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addCartDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: FilterOptions): this {\n        const builder = new ConditionBuilder();\n        conditionBuilder(builder);\n\n        const internalSettingsBuilder = new FilterSettingsBuilder();\n        options?.filterSettings?.(internalSettingsBuilder);\n\n        const filter: CartDataFilter = {\n            $type: 'Relewise.Client.Requests.Filters.CartDataFilter, Relewise.Client',\n            key: key,\n            filterOutIfKeyIsNotFound: filterOutIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: builder.build(),\n            negated: negated,\n            settings: internalSettingsBuilder.build(),\n        };\n        this.filters.push(filter);\n\n        return this;\n    }\n\n    /**\n     * Adds a content category data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out content categories without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryDataFilter(key, conditionBuilder, mustMatchAllConditions, filterOutIfKeyIsNotFound, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out contents without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        this.contentFilterBuilder.addContentDataFilter(key, conditionBuilder, mustMatchAllConditions, filterOutIfKeyIsNotFound, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product category data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out product categories without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductCategoryDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        this.productFilterBuilder.addProductCategoryDataFilter(key, conditionBuilder, mustMatchAllConditions, filterOutIfKeyIsNotFound, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a company data filter to the request.\n     * @param key - Data key.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param filterOutIfKeyIsNotFound - If true, filters out companies without the key (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addCompanyDataFilter(key: string, conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, filterOutIfKeyIsNotFound: boolean = true, negated: boolean = false, options?: EntityDataFilterOptions): this {\n        this.companyFilterBuilder.addCompanyDataFilter(key, conditionBuilder, mustMatchAllConditions, filterOutIfKeyIsNotFound, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product display name filter to the request.\n     * @param conditionBuilder - Function to build the condition.\n     * @param mustMatchAllConditions - If true, all conditions must be met (default is true).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductDisplayNameFilter(conditionBuilder: (builder: ConditionBuilder) => void, mustMatchAllConditions: boolean = true, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductDisplayNameFilter(conditionBuilder, mustMatchAllConditions, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product and variant ID filter to the request.\n     * @param products - Array of product and variant IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductAndVariantIdFilter(products: ProductAndVariantId | ProductAndVariantId[], negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductAndVariantIdFilter(products, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product category level filter to the request.\n     * @param levels - Array of category levels or a single level.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductCategoryLevelFilter(levels: number | number[], negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductCategoryLevelFilter(levels, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product category has parent filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductCategoryHasParentFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductCategoryHasParentFilter(categoryIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product category has child filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductCategoryHasChildFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductCategoryHasChildFilter(categoryIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product category has ancestor filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductCategoryHasAncestorFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductCategoryHasAncestorFilter(categoryIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content category level filter to the request.\n     * @param levels - Array of category levels or a single level.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryLevelFilter(levels: number | number[], negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryLevelFilter(levels, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content category has parent filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryHasParentFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryHasParentFilter(categoryIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content category has child filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryHasChildFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryHasChildFilter(categoryIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content category has ancestor filter to the request.\n     * @param categoryIds - Array of category IDs or a single ID (optional).\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryHasAncestorFilter(categoryIds?: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryHasAncestorFilter(categoryIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product category has products filter to the request ensuring that only categories with products in them are returned.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductCategoryHasProductsFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductCategoryHasProductsFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content category has contents filter to the request ensuring that only categories with content in them are returned.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryHasContentsFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryHasContentsFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a brand data has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addBrandDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        this.brandFilterBuilder.addBrandDataHasKeyFilter(key, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a brand is disabled filter to the request. Only works for brand queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addBrandDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.brandFilterBuilder.addBrandDisabledFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a company data has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addCompanyDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        this.companyFilterBuilder.addCompanyDataHasKeyFilter(key, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a company is disabled filter to the request. Only works for company queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addCompanyDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.companyFilterBuilder.addCompanyDisabledFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a variant data has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addVariantDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        this.variantFilterBuilder.addVariantDataHasKeyFilter(key, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a variant is disabled filter to the request. Only works for product queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addVariantDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.variantFilterBuilder.addVariantDisabledFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content category data has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryDataHasKeyFilter(key, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content category is disabled filter to the request. Only works for content queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryDisabledFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content category recently viewed by user filter to the request.\n     * @param sinceMinutesAgo - Time in minutes since the content category was viewed.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentCategoryRecentlyViewedByUserFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentCategoryRecentlyViewedByUserFilter(sinceMinutesAgo, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content data has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentDataHasKeyFilter(key, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content is disabled filter to the request. Only works for content queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentDisabledFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content recently viewed by user filter to the request.\n     * @param sinceMinutesAgo - Time in minutes since the content was viewed.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentRecentlyViewedByUserFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentRecentlyViewedByUserFilter(sinceMinutesAgo, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a content has categories filter to the request.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addContentHasCategoriesFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.contentFilterBuilder.addContentHasCategoriesFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product is disabled filter to the request. Only works for product queries, not in searches or recommendations.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductDisabledFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductDisabledFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product data has key filter to the request.\n     * @param key - Data key.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductDataHasKeyFilter(key: string, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductDataHasKeyFilter(key, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a product has categories filter to the request.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductHasCategoriesFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductHasCategoriesFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently purchased by a company.\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\n     * @param companyIds - Array of company IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductRecentlyPurchasedByCompanyFilter(sinceMinutesAgo: number, companyIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductRecentlyPurchasedByCompanyFilter(sinceMinutesAgo, companyIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently purchased by the user's company.\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductRecentlyPurchasedByUserCompanyFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductRecentlyPurchasedByUserCompanyFilter(sinceMinutesAgo, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently purchased by the user's parent company.\n     * @param sinceMinutesAgo - Time in minutes since the purchase.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductRecentlyPurchasedByUserParentCompanyFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductRecentlyPurchasedByUserParentCompanyFilter(sinceMinutesAgo, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently viewed by a company.\n     * @param sinceMinutesAgo - Time in minutes since the view.\n     * @param companyIds - Array of company IDs or a single ID.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductRecentlyViewedByCompanyFilter(sinceMinutesAgo: number, companyIds: string | string[], negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductRecentlyViewedByCompanyFilter(sinceMinutesAgo, companyIds, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently viewed by the user's company.\n     * @param sinceMinutesAgo - Time in minutes since the view.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductRecentlyViewedByUserCompanyFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductRecentlyViewedByUserCompanyFilter(sinceMinutesAgo, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products recently viewed by the user's parent company.\n     * @param sinceMinutesAgo - Time in minutes since the view.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public addProductRecentlyViewedByUserParentCompanyFilter(sinceMinutesAgo: number, negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductRecentlyViewedByUserParentCompanyFilter(sinceMinutesAgo, negated, options);\n        return this;\n    }\n\n    /**\n     * Adds a filter to only return products in the user's cart.\n     * @param negated - If true, negates the filter (default is false).\n     * @param options - Optional settings for the filter.\n     * @returns The ProductFilterBuilder instance for chaining.\n     */\n    public addProductInCartFilter(negated: boolean = false, options?: FilterOptions): this {\n        this.productFilterBuilder.addProductInCartFilter(negated, options);\n        return this;\n    }\n\n    /**\n     * Resets all filters and filter builders.\n     * @returns The FilterBuilder instance for chaining.\n     */\n    public reset(): this {\n        this.filters = [];\n        this.productFilterBuilder.reset();\n        this.brandFilterBuilder.reset();\n        this.contentFilterBuilder.reset();\n        this.variantFilterBuilder.reset();\n        this.companyFilterBuilder.reset();\n        return this;\n    }\n\n    /**\n     * Builds and combines all filters into a FilterCollection.\n     * @returns The combined FilterCollection or null if no filters are set.\n     */\n    public build(): FilterCollection | null {\n        const productFilters = this.productFilterBuilder.build();\n        const brandFilters = this.brandFilterBuilder.build();\n        const contentFilters = this.contentFilterBuilder.build();\n        const variantFilters = this.variantFilterBuilder.build();\n        const companyFilters = this.companyFilterBuilder.build();\n\n        const combinedFilters = [\n            ...(this.filters ?? []),\n            ...(productFilters?.items ?? []),\n            ...(brandFilters?.items ?? []),\n            ...(contentFilters?.items ?? []),\n            ...(variantFilters?.items ?? []),\n            ...(companyFilters?.items ?? []),\n        ];\n\n        return combinedFilters.length === 0 ? null : { items: combinedFilters };\n    }\n}\n","export type Pagination = {\n    take: number;\n    skip: number;\n}\n\nexport class PaginationBuilder {\n    private pageNumber: number = 1;\n    private pageSize: number = 10;\n\n    /**\n     * Defines how many results to return\n     * @param pageSize \n     * @returns \n     */\n    public setPageSize(pageSize: number): this {\n        if (pageSize < 0) {\n            throw new Error('pageSize can not be below 0')\n        }\n\n        this.pageSize = pageSize;\n\n        return this;\n    }\n\n    /**\n     * Page starts at 1, so this to skip 'X' pages of results\n     * @param pageNumber \n     * @returns \n     */\n    public setPage(pageNumber: number): this {\n        if (pageNumber < 1) {\n            throw new Error('pageNumber can not be below 1')\n        }\n\n        this.pageNumber = pageNumber;\n\n        return this;\n    }\n\n    build(): Pagination {\n        return {\n            take: this.pageSize,\n            skip: (this.pageNumber - 1) * this.pageSize,\n        }\n    }\n}\n","import { BrandIdRelevanceModifier, ContentCategoryDataRelevanceModifier, ContentCategoryRecentlyViewedByUserRelevanceModifier, ContentDataRelevanceModifier, ContentRecentlyViewedByUserRelevanceModifier, ProductAssortmentRelevanceModifier, ProductCategoryDataRelevanceModifier, ProductCategoryIdRelevanceModifier, ProductCategoryRecentlyViewedByUserRelevanceModifier, ProductDataRelevanceModifier, ProductIdRelevanceModifier, ProductListPriceRelevanceModifier, ProductRecentlyPurchasedByCompanyRelevanceModifier, ProductRecentlyPurchasedByUserCompanyRelevanceModifier, ProductRecentlyPurchasedByUserRelevanceModifier, ProductRecentlyViewedByCompanyRelevanceModifier, ProductRecentlyViewedByUserCompanyRelevanceModifier, ProductRecentlyViewedByUserRelevanceModifier, ProductSalesPriceRelevanceModifier, UserFavoriteProductRelevanceModifier, VariantAssortmentRelevanceModifier, VariantDataRelevanceModifier, VariantIdRelevanceModifier, VariantListPriceRelevanceModifier, VariantSalesPriceRelevanceModifier, VariantSpecificationsInCommonRelevanceModifier, VariantSpecificationValueRelevanceModifier, DataDoubleSelector, FixedDoubleValueSelector, RelevanceModifierCollection } from '../models/data-contracts';\nimport { ConditionBuilder } from './conditionBuilder';\nimport { FilterBuilder } from './filterBuilder';\n\nexport class RelevanceModifierBuilder {\n    private modifiers: (\n        | BrandIdRelevanceModifier\n        | ContentCategoryDataRelevanceModifier\n        | ContentCategoryRecentlyViewedByUserRelevanceModifier\n        | ContentDataRelevanceModifier\n        | ContentRecentlyViewedByUserRelevanceModifier\n        | ProductAssortmentRelevanceModifier\n        | ProductCategoryDataRelevanceModifier\n        | ProductCategoryIdRelevanceModifier\n        | ProductCategoryRecentlyViewedByUserRelevanceModifier\n        | ProductDataRelevanceModifier\n        | ProductIdRelevanceModifier\n        | ProductListPriceRelevanceModifier\n        | ProductRecentlyPurchasedByCompanyRelevanceModifier\n        | ProductRecentlyPurchasedByUserCompanyRelevanceModifier\n        | ProductRecentlyPurchasedByUserRelevanceModifier\n        | ProductRecentlyViewedByCompanyRelevanceModifier\n        | ProductRecentlyViewedByUserCompanyRelevanceModifier\n        | ProductRecentlyViewedByUserRelevanceModifier\n        | ProductSalesPriceRelevanceModifier\n        | UserFavoriteProductRelevanceModifier\n        | VariantAssortmentRelevanceModifier\n        | VariantDataRelevanceModifier\n        | VariantIdRelevanceModifier\n        | VariantListPriceRelevanceModifier\n        | VariantSalesPriceRelevanceModifier\n        | VariantSpecificationsInCommonRelevanceModifier\n        | VariantSpecificationValueRelevanceModifier\n    )[] = [];\n\n    public addBrandIdRelevanceModifier(\n        brandId: string,\n        ifProductIsBrandMultiplyWeightBy: number = 1,\n        ifProductIsNotBrandMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: BrandIdRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.BrandIdRelevanceModifier, Relewise.Client',\n            ifProductIsBrandMultiplyWeightBy: ifProductIsBrandMultiplyWeightBy,\n            ifProductIsNotBrandMultiplyWeightBy: ifProductIsNotBrandMultiplyWeightBy,\n            brandId: brandId,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductAssortmentRelevanceModifier(\n        assortments: number[],\n        multiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductAssortmentRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductAssortmentRelevanceModifier, Relewise.Client',\n            assortments: assortments,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addVariantAssortmentRelevanceModifier(\n        assortments: number[],\n        multiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: VariantAssortmentRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantAssortmentRelevanceModifier, Relewise.Client',\n            assortments: assortments,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductCategoryIdRelevanceModifier(\n        categoryId: string,\n        evaluationScope: 'ImmediateParent' | 'ImmediateParentOrItsParent' | 'Ancestor',\n        multiplyWeightBy: number = 1,\n        negated: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductCategoryIdRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductCategoryIdRelevanceModifier, Relewise.Client',\n            categoryId: categoryId,\n            evaluationScope: evaluationScope,\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductDataRelevanceModifier(\n        key: string,\n        conditions: (builder: ConditionBuilder) => void,\n        multiplierSelector: DataDoubleSelector | FixedDoubleValueSelector,\n        mustMatchAllConditions: boolean = true,\n        considerAsMatchIfKeyIsNotFound: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const conditionBuilder = new ConditionBuilder();\n        conditions(conditionBuilder);\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductDataRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductDataRelevanceModifier, Relewise.Client',\n            key: key,\n            considerAsMatchIfKeyIsNotFound: considerAsMatchIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: conditionBuilder.build()?.items,\n            multiplierSelector: multiplierSelector,\n            multiplyWeightBy: 0, // Obsolete, but required property\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addVariantDataRelevanceModifier(\n        key: string,\n        conditions: (builder: ConditionBuilder) => void,\n        multiplierSelector: DataDoubleSelector | FixedDoubleValueSelector,\n        mustMatchAllConditions: boolean = true,\n        considerAsMatchIfKeyIsNotFound: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const conditionBuilder = new ConditionBuilder();\n        conditions(conditionBuilder);\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: VariantDataRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantDataRelevanceModifier, Relewise.Client',\n            key: key,\n            considerAsMatchIfKeyIsNotFound: considerAsMatchIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: conditionBuilder.build()?.items,\n            multiplierSelector: multiplierSelector,\n            multiplyWeightBy: 0, // Obsolete, but required property\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addContentCategoryDataRelevanceModifier(\n        key: string,\n        conditions: (builder: ConditionBuilder) => void,\n        multiplierSelector: DataDoubleSelector | FixedDoubleValueSelector,\n        mustMatchAllConditions: boolean = true,\n        considerAsMatchIfKeyIsNotFound: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const conditionBuilder = new ConditionBuilder();\n        conditions(conditionBuilder);\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ContentCategoryDataRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ContentCategoryDataRelevanceModifier, Relewise.Client',\n            key: key,\n            considerAsMatchIfKeyIsNotFound: considerAsMatchIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: conditionBuilder.build()?.items,\n            multiplierSelector: multiplierSelector,\n            multiplyWeightBy: 0, // Obsolete, but required property\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addContentDataRelevanceModifier(\n        key: string,\n        conditions: (builder: ConditionBuilder) => void,\n        multiplierSelector: DataDoubleSelector | FixedDoubleValueSelector,\n        mustMatchAllConditions: boolean = true,\n        considerAsMatchIfKeyIsNotFound: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const conditionBuilder = new ConditionBuilder();\n        conditions(conditionBuilder);\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ContentDataRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ContentDataRelevanceModifier, Relewise.Client',\n            key: key,\n            considerAsMatchIfKeyIsNotFound: considerAsMatchIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: conditionBuilder.build()?.items,\n            multiplierSelector: multiplierSelector,\n            multiplyWeightBy: 0, // Obsolete, but required property\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductCategoryDataRelevanceModifier(\n        key: string,\n        conditions: (builder: ConditionBuilder) => void,\n        multiplierSelector: DataDoubleSelector | FixedDoubleValueSelector,\n        mustMatchAllConditions: boolean = true,\n        considerAsMatchIfKeyIsNotFound: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const conditionBuilder = new ConditionBuilder();\n        conditions(conditionBuilder);\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductCategoryDataRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductCategoryDataRelevanceModifier, Relewise.Client',\n            key: key,\n            considerAsMatchIfKeyIsNotFound: considerAsMatchIfKeyIsNotFound,\n            mustMatchAllConditions: mustMatchAllConditions,\n            conditions: conditionBuilder.build()?.items,\n            multiplierSelector: multiplierSelector,\n            multiplyWeightBy: 0, // Obsolete, but required property\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addVariantIdRelevanceModifier(\n        variantIds: string[],\n        multiplyWeightBy: number = 1,\n        negated: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: VariantIdRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantIdRelevanceModifier, Relewise.Client',\n            variantIds: variantIds,\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductIdRelevanceModifier(\n        productIds: string[],\n        multiplyWeightBy: number = 1,\n        negated: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductIdRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductIdRelevanceModifier, Relewise.Client',\n            productIds: productIds,\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductListPriceRelevanceModifier(\n        currency: string,\n        lowerBound: number | null | undefined,\n        upperBound: number | null | undefined,\n        multiplyWeightBy: number = 1,\n        negated: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductListPriceRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductListPriceRelevanceModifier, Relewise.Client',\n            range: { lowerBoundInclusive: lowerBound, upperBoundInclusive: upperBound },\n            currency: { value: currency },\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductSalesPriceRelevanceModifier(\n        currency: string,\n        lowerBound: number | null | undefined,\n        upperBound: number | null | undefined,\n        multiplyWeightBy: number = 1,\n        negated: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductSalesPriceRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductSalesPriceRelevanceModifier, Relewise.Client',\n            range: { lowerBoundInclusive: lowerBound, upperBoundInclusive: upperBound },\n            currency: { value: currency },\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addVariantListPriceRelevanceModifier(\n        currency: string,\n        lowerBound: number | null | undefined,\n        upperBound: number | null | undefined,\n        multiplyWeightBy: number = 1,\n        negated: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: VariantListPriceRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantListPriceRelevanceModifier, Relewise.Client',\n            range: { lowerBoundInclusive: lowerBound, upperBoundInclusive: upperBound },\n            currency: { value: currency },\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addVariantSalesPriceRelevanceModifier(\n        currency: string,\n        lowerBound: number | null | undefined,\n        upperBound: number | null | undefined,\n        multiplyWeightBy: number = 1,\n        negated: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: VariantSalesPriceRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantSalesPriceRelevanceModifier, Relewise.Client',\n            range: { lowerBoundInclusive: lowerBound, upperBoundInclusive: upperBound },\n            currency: { value: currency },\n            negated: negated,\n            multiplyWeightBy: multiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n\n    public addVariantSpecificationsInCommonRelevanceModifier(\n        specificationKeysAndMultipliers: { key: string, multiplier: number }[],\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: VariantSpecificationsInCommonRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantSpecificationsInCommonRelevanceModifier, Relewise.Client',\n            specificationKeysAndMultipliers,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addVariantSpecificationValueRelevanceModifier(\n        key: string,\n        value: string,\n        ifIdenticalMultiplyWeightBy: number = 1,\n        ifNotIdenticalMultiplyWeightBy: number = 0,\n        ifSpecificationKeyNotFoundApplyNotEqualMultiplier: boolean = false,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: VariantSpecificationValueRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.VariantSpecificationValueRelevanceModifier, Relewise.Client',\n            key,\n            value,\n            ifIdenticalMultiplyWeightBy,\n            ifNotIdenticalMultiplyWeightBy,\n            ifSpecificationKeyNotFoundApplyNotEqualMultiplier,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductRecentlyPurchasedByUserRelevanceModifier(\n        sinceUtc: Date,\n        ifNotPreviouslyPurchasedByUserMultiplyWeightBy: number = 1,\n        ifPreviouslyPurchasedByUserMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductRecentlyPurchasedByUserRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductRecentlyPurchasedByUserRelevanceModifier, Relewise.Client',\n            ifNotPreviouslyPurchasedByUserMultiplyWeightBy,\n            ifPreviouslyPurchasedByUserMultiplyWeightBy,\n            sinceUtc: sinceUtc.toJSON(),\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductRecentlyPurchasedByCompanyRelevanceModifier(\n        sinceMinutesAgo: number,\n        companyIds: string[],\n        ifPurchasedByCompanyMultiplyWeightBy: number = 1,\n        elseIfNotPurchasedByCompanyMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductRecentlyPurchasedByCompanyRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductRecentlyPurchasedByCompanyRelevanceModifier, Relewise.Client',\n            sinceMinutesAgo: sinceMinutesAgo,\n            companyIds: companyIds,\n            ifPurchasedByCompanyMultiplyWeightBy,\n            elseIfNotPurchasedByCompanyMultiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductRecentlyPurchasedByUserCompanyRelevanceModifier(\n        sinceMinutesAgo: number,\n        ifPurchasedByCompanyMultiplyWeightBy: number = 1,\n        elseIfPurchasedByParentCompanyMultiplyWeightBy: number = 1,\n        elseIfNotPurchasedByEitherCompanyMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductRecentlyPurchasedByUserCompanyRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductRecentlyPurchasedByUserCompanyRelevanceModifier, Relewise.Client',\n            sinceMinutesAgo: sinceMinutesAgo,\n            ifPurchasedByCompanyMultiplyWeightBy,\n            elseIfPurchasedByParentCompanyMultiplyWeightBy,\n            elseIfNotPurchasedByEitherCompanyMultiplyWeightBy,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductRecentlyViewedByUserRelevanceModifier(\n        sinceUtc: Date,\n        ifNotPreviouslyViewedByUserMultiplyWeightBy: number = 1,\n        ifPreviouslyViewedByUserMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductRecentlyViewedByUserRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductRecentlyViewedByUserRelevanceModifier, Relewise.Client',\n            ifNotPreviouslyViewedByUserMultiplyWeightBy,\n            ifPreviouslyViewedByUserMultiplyWeightBy,\n            sinceUtc: sinceUtc.toJSON(),\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductRecentlyViewedByCompanyRelevanceModifier(\n        sinceMinutesAgo: number,\n        companyIds: string[],\n        ifViewedByCompanyMultiplyWeightBy: number = 1,\n        elseIfNotViewedByCompanyMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductRecentlyViewedByCompanyRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductRecentlyViewedByCompanyRelevanceModifier, Relewise.Client',\n            companyIds,\n            ifViewedByCompanyMultiplyWeightBy,\n            elseIfNotViewedByCompanyMultiplyWeightBy,\n            sinceMinutesAgo: sinceMinutesAgo,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductRecentlyViewedByUserCompanyRelevanceModifier(\n        sinceMinutesAgo: number,\n        ifViewedByUserCompanyMultiplyWeightBy: number = 1,\n        elseIfViewedByUserParentCompanyMultiplyWeightBy: number = 1,\n        elseIfNotViewedByEitherCompanyMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductRecentlyViewedByUserCompanyRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductRecentlyViewedByUserCompanyRelevanceModifier, Relewise.Client',\n            ifViewedByUserCompanyMultiplyWeightBy,\n            elseIfViewedByUserParentCompanyMultiplyWeightBy,\n            elseIfNotViewedByEitherCompanyMultiplyWeightBy,\n            sinceMinutesAgo: sinceMinutesAgo,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addProductCategoryRecentlyViewedByUserRelevanceModifier(\n        sinceUtc: Date,\n        ifNotPreviouslyViewedByUserMultiplyWeightBy: number = 1,\n        ifPreviouslyViewedByUserMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ProductCategoryRecentlyViewedByUserRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ProductCategoryRecentlyViewedByUserRelevanceModifier, Relewise.Client',\n            ifNotPreviouslyViewedByUserMultiplyWeightBy,\n            ifPreviouslyViewedByUserMultiplyWeightBy,\n            sinceUtc: sinceUtc.toJSON(),\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addContentRecentlyViewedByUserRelevanceModifier(\n        sinceUtc: Date,\n        ifNotPreviouslyViewedByUserMultiplyWeightBy: number = 1,\n        ifPreviouslyViewedByUserMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ContentRecentlyViewedByUserRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ContentRecentlyViewedByUserRelevanceModifier, Relewise.Client',\n            ifNotPreviouslyViewedByUserMultiplyWeightBy,\n            ifPreviouslyViewedByUserMultiplyWeightBy,\n            sinceUtc: sinceUtc.toJSON(),\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addContentCategoryRecentlyViewedByUserRelevanceModifier(\n        sinceUtc: Date,\n        ifNotPreviouslyViewedByUserMultiplyWeightBy: number = 1,\n        ifPreviouslyViewedByUserMultiplyWeightBy: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: ContentCategoryRecentlyViewedByUserRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.ContentCategoryRecentlyViewedByUserRelevanceModifier, Relewise.Client',\n            ifNotPreviouslyViewedByUserMultiplyWeightBy,\n            ifPreviouslyViewedByUserMultiplyWeightBy,\n            sinceUtc: sinceUtc.toJSON(),\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public addUserFavoriteProductRelevanceModifier(\n        sinceMinutesAgo: number,\n        ifNotPurchasedBaseWeight: number = 1,\n        mostRecentPurchaseWeight: number = 1,\n        numberOfPurchasesWeight: number = 1,\n        filter?: (builder: FilterBuilder) => void): this {\n\n        const filterBuilder = new FilterBuilder();\n        if (filter) {\n            filter(filterBuilder);\n        }\n\n        const modifier: UserFavoriteProductRelevanceModifier = {\n            $type: 'Relewise.Client.Requests.RelevanceModifiers.UserFavoriteProductRelevanceModifier, Relewise.Client',\n            ifNotPurchasedBaseWeight,\n            mostRecentPurchaseWeight,\n            numberOfPurchasesWeight,\n            sinceMinutesAgo: sinceMinutesAgo,\n            filters: filterBuilder.build(),\n        };\n        this.modifiers.push(modifier);\n\n        return this;\n    }\n\n    public build(): RelevanceModifierCollection | null {\n\n        return this.modifiers.length === 0\n            ? null\n            : { items: this.modifiers };\n    }\n}","import { DataObjectFacet, DataObjectBooleanValueFacet, DataObjectDoubleRangeFacet, DataObjectDoubleRangesFacet, DataObjectDoubleValueFacet, DataObjectStringValueFacet, FacetSettings } from '../../models/data-contracts';\nimport { DataObjectFilterConditionBuilder } from '../dataObjectFilterConditionBuilder';\n\n\nexport class DataObjectFacetBuilder {\n    private facets: (\n        | DataObjectFacet\n        | DataObjectDoubleRangeFacet\n        | DataObjectDoubleRangesFacet\n        | DataObjectStringValueFacet\n        | DataObjectBooleanValueFacet\n        | DataObjectDoubleValueFacet)[] = [];\n\n    public addDataObjectFacet(\n        key: string,\n        builder?: (facets: DataObjectFacetBuilder) => void,\n        filter?: {\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\n            skip?: number,\n            take?: number \n        },\n        facetSettings?: FacetSettings): this {\n\n        const facetBuilder = new DataObjectFacetBuilder();\n        if (builder) {\n            builder(facetBuilder);\n        }\n            \n        const conditionsBuilder = new DataObjectFilterConditionBuilder();\n        if (filter?.conditions) {\n            filter.conditions(conditionsBuilder);\n        }\n\n        const facet: DataObjectFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            items: facetBuilder.build() ?? [],\n            filter: {\n                conditions: conditionsBuilder.build() ?? [],\n                take: filter?.take,\n                skip: filter?.skip,\n            },\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addStringFacet(\n        key: string,\n        selectedValues: string[] | null = null,\n        collectionFilterType?: 'Or' | 'And',\n        facetSettings?: FacetSettings): this {\n\n        const facet: DataObjectStringValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectStringValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addBooleanFacet(\n        key: string,\n        selectedValues: boolean[] | null = null,\n        collectionFilterType?: 'Or' | 'And',\n        facetSettings?: FacetSettings): this {\n\n        const facet: DataObjectBooleanValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectBooleanValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addNumberFacet(\n        key: string,\n        selectedValues: number[] | null = null,\n        collectionFilterType?: 'Or' | 'And',\n        facetSettings?: FacetSettings): this {\n\n        const facet: DataObjectDoubleValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectDoubleValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addNumberRangeFacet(\n        key: string,\n        lowerBound?: number | null, \n        upperBound?: number | null,\n        facetSettings?: FacetSettings): this {\n\n        const facet: DataObjectDoubleRangeFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectDoubleRangeFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            selected: {\n                lowerBoundInclusive: lowerBound,\n                upperBoundInclusive: upperBound,\n            },\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addNumberRangesFacet(\n        key: string,\n        predefinedRanges?: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null,\n        expandedRangeSize?: number | null,\n        selectedValues: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null = null,\n        facetSettings?: FacetSettings): this {\n\n        const facet: DataObjectDoubleRangesFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.DataObjectDoubleRangesFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            settings: facetSettings,\n            predefinedRanges: predefinedRanges?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    build() {\n        return this.facets.length === 0\n            ? null\n            : this.facets;\n    }\n}\n","import { ProductCategoryAssortmentFacet, BrandFacet, CategoryFacet, CategoryPath, CategoryHierarchyFacet, SelectedProductCategoryPropertiesSettings, SelectedContentCategoryPropertiesSettings, ContentAssortmentFacet, ContentDataBooleanValueFacet, ContentDataDoubleRangeFacet, ContentDataDoubleRangesFacet, ContentDataDoubleValueFacet, ContentDataStringValueFacet, FacetSettings, PriceRangeFacet, PriceRangesFacet, ProductAssortmentFacet, ProductCategoryDataBooleanValueFacet, ProductCategoryDataDoubleRangeFacet, ProductCategoryDataDoubleRangesFacet, ProductCategoryDataDoubleValueFacet, ProductCategoryDataStringValueFacet, ProductDataBooleanValueFacet, ProductDataDoubleRangeFacet, ProductDataDoubleRangesFacet, ProductDataDoubleValueFacet, ProductDataStringValueFacet, ProductFacetQuery, VariantSpecificationFacet, ProductDataObjectFacet, DoubleNullableRange, ContentDataObjectFacet, ProductCategoryDataObjectFacet, RecentlyPurchasedFacet, PurchaseQualifiers } from '../../models/data-contracts';\nimport { DataObjectFilterConditionBuilder } from '../dataObjectFilterConditionBuilder';\nimport { DataObjectFacetBuilder } from './dataObjectFacetBuilder';\n\nexport class FacetBuilder {\n    private facets: (\n        | ContentAssortmentFacet\n        | ProductAssortmentFacet\n        | ProductCategoryAssortmentFacet\n        | BrandFacet\n        | CategoryFacet\n        | CategoryHierarchyFacet\n        | ContentDataObjectFacet\n        | ContentDataDoubleRangeFacet\n        | ContentDataDoubleRangesFacet\n        | ContentDataStringValueFacet\n        | ContentDataBooleanValueFacet\n        | ContentDataDoubleValueFacet\n        | PriceRangeFacet\n        | PriceRangesFacet\n        | ProductCategoryDataObjectFacet\n        | ProductCategoryDataDoubleRangeFacet\n        | ProductCategoryDataDoubleRangesFacet\n        | ProductCategoryDataStringValueFacet\n        | ProductCategoryDataBooleanValueFacet\n        | ProductCategoryDataDoubleValueFacet\n        | ProductDataObjectFacet\n        | ProductDataDoubleRangeFacet\n        | ProductDataDoubleRangesFacet\n        | ProductDataStringValueFacet\n        | ProductDataBooleanValueFacet\n        | ProductDataDoubleValueFacet\n        | VariantSpecificationFacet\n        | RecentlyPurchasedFacet)[] = [];\n\n    //#region Product\n    public addCategoryFacet(categorySelectionStrategy: 'ImmediateParent' | 'Ancestors', selectedValues: string[] | null = null, facetSettings?: FacetSettings): this {\n        const facet: CategoryFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.CategoryFacet, Relewise.Client',\n            categorySelectionStrategy: categorySelectionStrategy,\n            field: 'Category',\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductCategoryHierarchyFacet(categorySelectionStrategy: 'ImmediateParent' | 'Ancestors' | 'Descendants', selectedValues: CategoryPath[] | null = null, selectedPropertiesSettings?: Partial<SelectedProductCategoryPropertiesSettings>, facetSettings?: FacetSettings): this {\n        const facet: CategoryHierarchyFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.CategoryHierarchyFacet, Relewise.Client',\n            categorySelectionStrategy: categorySelectionStrategy,\n            field: 'Category',\n            selected: selectedValues,\n            settings: facetSettings,\n            selectedPropertiesSettings: selectedPropertiesSettings ? ({\n                $type: 'Relewise.Client.Requests.Shared.SelectedProductCategoryPropertiesSettings, Relewise.Client',\n                ...selectedPropertiesSettings,\n            } as SelectedProductCategoryPropertiesSettings) : undefined,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addContentCategoryHierarchyFacet(categorySelectionStrategy: 'ImmediateParent' | 'Ancestors' | 'Descendants', selectedValues: CategoryPath[] | null = null, selectedPropertiesSettings?: Partial<SelectedContentCategoryPropertiesSettings>, facetSettings?: FacetSettings): this {\n        const facet: CategoryHierarchyFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.CategoryHierarchyFacet, Relewise.Client',\n            categorySelectionStrategy: categorySelectionStrategy,\n            field: 'Category',\n            selected: selectedValues,\n            settings: facetSettings,\n            selectedPropertiesSettings: selectedPropertiesSettings ? ({\n                $type: 'Relewise.Client.Requests.Shared.SelectedContentCategoryPropertiesSettings, Relewise.Client',\n                ...selectedPropertiesSettings,\n            } as SelectedContentCategoryPropertiesSettings) : undefined,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addBrandFacet(selectedValues: string[] | null = null, facetSettings?: FacetSettings): this {\n        const facet: BrandFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.BrandFacet, Relewise.Client',\n            field: 'Brand',\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductAssortmentFacet(selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant', selectedValues: number[] | null = null, facetSettings?: FacetSettings): this {\n        const facet: ProductAssortmentFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductAssortmentFacet, Relewise.Client',\n            field: 'Assortment',\n            assortmentFilterType: 'Or',\n            assortmentSelectionStrategy: selectionStrategy,\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addVariantSpecificationFacet(key: string, selectedValues: string[] | null = null, facetSettings?: FacetSettings): this {\n        const facet: VariantSpecificationFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.VariantSpecificationFacet, Relewise.Client',\n            field: 'VariantSpecification',\n            key: key,\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductDataDoubleRangeFacet(key: string, selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant', lowerBound?: number, upperBound?: number, facetSettings?: FacetSettings): this {\n        const selected: DoubleNullableRange | null = this.mapSelectedDoubleRange(lowerBound, upperBound);\n\n        const facet: ProductDataDoubleRangeFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleRangeFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            dataSelectionStrategy: selectionStrategy,\n            selected: selected,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductDataDoubleRangesFacet(\n        key: string,\n        selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant',\n        predefinedRanges?: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null,\n        expandedRangeSize?: number | null,\n        selectedValues: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null = null,\n        facetSettings?: FacetSettings): this {\n\n        const facet: ProductDataDoubleRangesFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleRangesFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            predefinedRanges: predefinedRanges?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            dataSelectionStrategy: selectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductDataStringValueFacet(\n        key: string,\n        selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant',\n        selectedValues: string[] | null = null,\n        collectionFilterType?: 'Or' | 'And',\n        facetSettings?: FacetSettings): this {\n\n        const facet: ProductDataStringValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataStringValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            dataSelectionStrategy: selectionStrategy,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductDataBooleanValueFacet(\n        key: string,\n        selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant',\n        selectedValues: boolean[] | null = null,\n        collectionFilterType?: 'Or' | 'And',\n        facetSettings?: FacetSettings): this {\n\n        const facet: ProductDataBooleanValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataBooleanValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            dataSelectionStrategy: selectionStrategy,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductDataDoubleValueFacet(\n        key: string,\n        selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant',\n        selectedValues: number[] | null = null,\n        collectionFilterType?: 'Or' | 'And',\n        facetSettings?: FacetSettings): this {\n\n        const facet: ProductDataDoubleValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleValueFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            dataSelectionStrategy: selectionStrategy,\n            selected: selectedValues,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addSalesPriceRangeFacet(\n        priceSelectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant',\n        lowerBound?: number,\n        upperBound?: number,\n        facetSettings?: FacetSettings): this {\n\n        const selected: DoubleNullableRange | null = this.mapSelectedDoubleRange(lowerBound, upperBound);\n        const facet: PriceRangeFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.PriceRangeFacet, Relewise.Client',\n            field: 'SalesPrice',\n            selected: selected,\n            priceSelectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addSalesPriceRangesFacet(\n        priceSelectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant',\n        predefinedRanges?: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null,\n        expandedRangeSize?: number | null,\n        selectedValues: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null = null,\n        facetSettings?: FacetSettings): this {\n\n        const facet: PriceRangesFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.PriceRangesFacet, Relewise.Client',\n            field: 'SalesPrice',\n            predefinedRanges: predefinedRanges?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            priceSelectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addListPriceRangeFacet(\n        priceSelectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant',\n        lowerBound?: number,\n        upperBound?: number,\n        facetSettings?: FacetSettings): this {\n\n        const selected: DoubleNullableRange | null = this.mapSelectedDoubleRange(lowerBound, upperBound);\n        const facet: PriceRangeFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.PriceRangeFacet, Relewise.Client',\n            field: 'ListPrice',\n            selected: selected,\n            priceSelectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addListPriceRangesFacet(\n        priceSelectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant',\n        predefinedRanges?: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null,\n        expandedRangeSize?: number | null,\n        selectedValues: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null = null,\n        facetSettings?: FacetSettings): this {\n\n        const facet: PriceRangesFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.PriceRangesFacet, Relewise.Client',\n            field: 'ListPrice',\n            predefinedRanges: predefinedRanges?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            priceSelectionStrategy,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductDataObjectFacet(\n        key: string,\n        selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant',\n        builder?: (facets: DataObjectFacetBuilder) => void,\n        filter?: {\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\n            skip?: number,\n            take?: number\n        },\n        facetSettings?: FacetSettings): this {\n\n        const facetBuilder = new DataObjectFacetBuilder();\n        if (builder) {\n            builder(facetBuilder);\n        }\n\n        const conditionsBuilder = new DataObjectFilterConditionBuilder();\n        if (filter?.conditions) {\n            filter.conditions(conditionsBuilder);\n        }\n\n        const facet: ProductDataObjectFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataObjectFacet, Relewise.Client',\n            field: 'Data',\n            items: facetBuilder.build() ?? [],\n            filter: {\n                conditions: conditionsBuilder.build() ?? [],\n                take: filter?.take,\n                skip: filter?.skip,\n            },\n            dataSelectionStrategy: selectionStrategy,\n            settings: facetSettings,\n            key: key,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addRecentlyPurchasedFacet(\n        purchaseQualifiers: PurchaseQualifiers,\n        selectedValues: boolean[] | null = null,\n        facetSettings?: FacetSettings): this {\n\n        const facet: RecentlyPurchasedFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.RecentlyPurchasedFacet, Relewise.Client',\n            field: 'Data',\n            settings: facetSettings,\n            selected: selectedValues,\n            purchaseQualifiers: purchaseQualifiers,\n        };\n\n        this.facets.push(facet);\n\n        return this;\n    }\n    //#endregion\n\n    //#region Content\n    public addContentAssortmentFacet(selectedValues: number[] | null = null, facetSettings?: FacetSettings): this {\n        const facet: ContentAssortmentFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentAssortmentFacet, Relewise.Client',\n            field: 'Assortment',\n            assortmentFilterType: 'Or',\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addContentDataDoubleRangeFacet(key: string, lowerBound?: number | null, upperBound?: number | null, facetSettings?: FacetSettings): this {\n        const selected: DoubleNullableRange | null = this.mapSelectedDoubleRange(lowerBound, upperBound);\n\n        const facet: ContentDataDoubleRangeFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentDataDoubleRangeFacet, Relewise.Client',\n            field: 'Data',\n            selected: selected,\n            key: key,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addContentDataDoubleRangesFacet(\n        key: string,\n        predefinedRanges?: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null,\n        expandedRangeSize?: number | null,\n        selectedValues: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null = null,\n        facetSettings?: FacetSettings): this {\n\n        const facet: ContentDataDoubleRangesFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleRangesFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            predefinedRanges: predefinedRanges?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addContentDataStringValueFacet(key: string, selectedValues: string[] | null = null, collectionFilterType?: 'Or' | 'And', facetSettings?: FacetSettings): this {\n        const facet: ContentDataStringValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentDataStringValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addContentDataBooleanValueFacet(key: string, selectedValues: boolean[] | null = null, collectionFilterType?: 'Or' | 'And', facetSettings?: FacetSettings): this {\n        const facet: ContentDataBooleanValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentDataBooleanValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addContentDataDoubleValueFacet(key: string, selectedValues: number[] | null = null, collectionFilterType?: 'Or' | 'And', facetSettings?: FacetSettings): this {\n        const facet: ContentDataDoubleValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentDataDoubleValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addContentDataObjectFacet(\n        key: string,\n        builder?: (facets: DataObjectFacetBuilder) => void,\n        filter?: {\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\n            skip?: number,\n            take?: number\n        },\n        facetSettings?: FacetSettings): this {\n\n        const facetBuilder = new DataObjectFacetBuilder();\n        if (builder) {\n            builder(facetBuilder);\n        }\n\n        const conditionsBuilder = new DataObjectFilterConditionBuilder();\n        if (filter?.conditions) {\n            filter.conditions(conditionsBuilder);\n        }\n\n        const facet: ContentDataObjectFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ContentDataObjectFacet, Relewise.Client',\n            field: 'Data',\n            items: facetBuilder.build() ?? [],\n            filter: {\n                conditions: conditionsBuilder.build() ?? [],\n                take: filter?.take,\n                skip: filter?.skip,\n            },\n            settings: facetSettings,\n            key: key,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n    //#endregion\n\n    //#region ProductCategories\n    public addProductCategoryAssortmentFacet(selectedValues: number[] | null = null, facetSettings?: FacetSettings): this {\n        const facet: ProductCategoryAssortmentFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryAssortmentFacet, Relewise.Client',\n            field: 'Assortment',\n            assortmentFilterType: 'Or',\n            selected: selectedValues,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductCategoryDataDoubleRangeFacet(key: string, lowerBound?: number | null, upperBound?: number | null, facetSettings?: FacetSettings): this {\n        const selected: DoubleNullableRange | null = this.mapSelectedDoubleRange(lowerBound, upperBound);\n        const facet: ProductCategoryDataDoubleRangeFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryDataDoubleRangeFacet, Relewise.Client',\n            field: 'Data',\n            selected: selected,\n            key: key,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductCategoryDataDoubleRangesFacet(\n        key: string,\n        predefinedRanges?: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null,\n        expandedRangeSize?: number | null,\n        selectedValues: {\n            lowerBound?: number,\n            upperBound?: number\n        }[] | null = null,\n        facetSettings?: FacetSettings): this {\n\n        const facet: ProductCategoryDataDoubleRangesFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductDataDoubleRangesFacet, Relewise.Client',\n            field: 'Data',\n            key: key,\n            predefinedRanges: predefinedRanges?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            expandedRangeSize: expandedRangeSize,\n            selected: selectedValues?.map(x => ({ lowerBoundInclusive: x.lowerBound, upperBoundExclusive: x.upperBound })),\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductCategoryDataStringValueFacet(key: string, selectedValues: string[] | null = null, collectionFilterType?: 'Or' | 'And', facetSettings?: FacetSettings): this {\n        const facet: ProductCategoryDataStringValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryDataStringValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductCategoryDataBooleanValueFacet(key: string, selectedValues: boolean[] | null = null, collectionFilterType?: 'Or' | 'And', facetSettings?: FacetSettings): this {\n        const facet: ProductCategoryDataBooleanValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryDataBooleanValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductCategoryDataDoubleValueFacet(key: string, selectedValues: number[] | null = null, collectionFilterType?: 'Or' | 'And', facetSettings?: FacetSettings): this {\n        const facet: ProductCategoryDataDoubleValueFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryDataDoubleValueFacet, Relewise.Client',\n            field: 'Data',\n            selected: selectedValues,\n            key: key,\n            collectionFilterType: collectionFilterType,\n            settings: facetSettings,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n\n    public addProductCategoryDataObjectFacet(\n        key: string,\n        builder?: (facets: DataObjectFacetBuilder) => void,\n        filter?: {\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\n            skip?: number,\n            take?: number\n        },\n        facetSettings?: FacetSettings): this {\n\n        const facetBuilder = new DataObjectFacetBuilder();\n        if (builder) {\n            builder(facetBuilder);\n        }\n\n        const conditionsBuilder = new DataObjectFilterConditionBuilder();\n        if (filter?.conditions) {\n            filter.conditions(conditionsBuilder);\n        }\n\n        const facet: ProductCategoryDataObjectFacet = {\n            $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.ProductCategoryDataObjectFacet, Relewise.Client',\n            field: 'Data',\n            items: facetBuilder.build() ?? [],\n            filter: {\n                conditions: conditionsBuilder.build() ?? [],\n                take: filter?.take,\n                skip: filter?.skip,\n            },\n            settings: facetSettings,\n            key: key,\n        };\n        this.facets.push(facet);\n\n        return this;\n    }\n    //#endregion\n\n    build(): ProductFacetQuery | null {\n        return this.facets.length === 0\n            ? null\n            : {\n                items: this.facets,\n                $type: 'Relewise.Client.DataTypes.Search.Facets.Queries.FacetQuery, Relewise.Client',\n            }\n    }\n\n    private mapSelectedDoubleRange(lowerBound: number | undefined | null, upperBound: number | undefined | null) {\n        let selected: DoubleNullableRange | null = null;\n        const lowerBoundHasValue = lowerBound !== null && lowerBound !== undefined;\n        const upperBoundHasValue = upperBound !== null && upperBound !== undefined;\n        if (lowerBoundHasValue || upperBoundHasValue) {\n            selected = {};\n            if (lowerBoundHasValue) selected.lowerBoundInclusive = lowerBound;\n            if (upperBoundHasValue) selected.upperBoundInclusive = upperBound;\n        }\n        return selected;\n    }\n}\n\n","import { DataObjectFilter, DataObjectValueSelector } from '../..';\nimport { DataObjectFilterConditionBuilder } from '../dataObjectFilterConditionBuilder';\n\nexport class DataObjectValueSelectorBuilder {\n    private key!: string;\n    private filter?: DataObjectFilter;\n    private childSelector?: DataObjectValueSelector;\n    private fallbackSelector?: DataObjectValueSelector;\n\n    public select(key: string, settings?: {\n        filter?: {\n            conditions?: (builder: DataObjectFilterConditionBuilder) => void,\n            skip?: number,\n            take?: number \n        } | null, \n        childSelector?: (childSelector: DataObjectValueSelectorBuilder) => void | null,\n        fallbackSelector?: (childSelector: DataObjectValueSelectorBuilder) => void | null\n    })\n    {\n        if (!key) \n            throw new Error('DataObjectValueSelector key can\\'t be null or empty')\n\n        this.key = key;\n        \n        if (settings) {\n            if (settings.filter) {\n                const conditionsBuilder = new DataObjectFilterConditionBuilder();\n                if (settings.filter?.conditions) {\n                    settings.filter.conditions(conditionsBuilder);\n                }\n    \n                this.filter = {\n                    skip: settings.filter.skip,\n                    take: settings.filter.take, \n                    conditions: conditionsBuilder.build(),\n                }\n            }\n    \n            if (settings.childSelector) {\n                const childSelector = new DataObjectValueSelectorBuilder();\n                if (settings?.childSelector) {\n                    settings?.childSelector(childSelector);\n                }\n                this.childSelector = childSelector.build();\n            }\n\n            if (settings.fallbackSelector) {\n                const fallbackSelector = new DataObjectValueSelectorBuilder();\n                if (settings?.fallbackSelector) {\n                    settings?.fallbackSelector(fallbackSelector);\n                }\n                this.fallbackSelector = fallbackSelector.build();\n            }\n        }\n    }\n\n    public build(): DataObjectValueSelector {\n        if (!this.key) \n            throw new Error('DataObjectValueSelector key can\\'t be null or empty - did you forget to use .select(\\'key)?\\'')\n    \n        return {\n            key: this.key,\n            filter: this.filter,\n            childSelector: this.childSelector,\n            fallbackSelector: this.fallbackSelector,\n        }\n    }\n}","import { ProductAttributeSorting, ProductDataSorting, ProductDataObjectSorting, ProductPopularitySorting, ProductRelevanceSorting, ProductSortBySpecification, ProductVariantAttributeSorting, ProductVariantSpecificationSorting } from '../../models/data-contracts';\nimport { DataObjectValueSelectorBuilder } from './dataObjectValueSelectorBuilder';\n\nexport class ProductSortingBuilder {\n    private value:\n        | ProductAttributeSorting\n        | ProductDataSorting\n        | ProductPopularitySorting\n        | ProductDataObjectSorting\n        | ProductRelevanceSorting\n        | ProductVariantAttributeSorting\n        | ProductVariantSpecificationSorting\n        | null = null;\n\n    public sortByProductData(key: string, selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant', order: 'Ascending' | 'Descending', thenBy?: (thenBy: ProductSortingBuilder) => void, mode: 'Auto' | 'Alphabetical' | 'Numerical' = 'Auto') {\n        const sort: ProductDataSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductDataSorting, Relewise.Client',\n            dataSelectionStrategy: selectionStrategy,\n            mode,\n            order,\n            key,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByProductDataObject(selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant', order: 'Ascending' | 'Descending', valueSelector: (valueSelector: DataObjectValueSelectorBuilder) => void, thenBy?: (thenBy: ProductSortingBuilder) => void, mode: 'Auto' | 'Alphabetical' | 'Numerical' = 'Auto') {\n        const valueSelectorFactory = new DataObjectValueSelectorBuilder();\n        valueSelector(valueSelectorFactory);\n        \n        const sort: ProductDataObjectSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductDataObjectSorting, Relewise.Client',\n            dataSelectionStrategy: selectionStrategy,\n            mode,\n            order,\n            valueSelector: valueSelectorFactory.build(),\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByProductRelevance(order: 'Ascending' | 'Descending' = 'Descending', thenBy?: (thenBy: ProductSortingBuilder) => void) {\n        const sort: ProductRelevanceSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductRelevanceSorting, Relewise.Client',\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByProductPopularity(order: 'Ascending' | 'Descending' = 'Descending', thenBy?: (thenBy: ProductSortingBuilder) => void) {\n        const sort: ProductPopularitySorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductPopularitySorting, Relewise.Client',\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByProductAttribute(\n        attribute: 'Id' | 'DisplayName' | 'BrandId' | 'BrandName' | 'ListPrice' | 'SalesPrice', \n        order: 'Ascending' | 'Descending', \n        thenBy?: (thenBy: ProductSortingBuilder) => void,\n        mode: 'Auto' | 'Alphabetical' | 'Numerical' = 'Auto' ) {\n\n        const sort: ProductAttributeSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductAttributeSorting, Relewise.Client',\n            attribute,\n            mode,\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByProductVariantAttribute(\n        attribute: 'Id' | 'DisplayName' | 'ListPrice' | 'SalesPrice', \n        order: 'Ascending' | 'Descending', \n        thenBy?: (thenBy: ProductSortingBuilder) => void, \n        mode: 'Auto' | 'Alphabetical' | 'Numerical' = 'Auto') {\n\n        const sort: ProductVariantAttributeSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductVariantAttributeSorting, Relewise.Client',\n            attribute,\n            mode,\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByProductVariantSpecification(key: string, order: 'Ascending' | 'Descending', thenBy?: (thenBy: ProductSortingBuilder) => void, mode: 'Auto' | 'Alphabetical' | 'Numerical' = 'Auto') {\n        const sort: ProductVariantSpecificationSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Product.ProductVariantSpecificationSorting, Relewise.Client',\n            key,\n            mode,\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    private thenBy(thenBy: ((thenBy: ProductSortingBuilder) => void) | undefined) {\n        const thenByBuilder = new ProductSortingBuilder();\n        if (thenBy) {\n            thenBy(thenByBuilder);\n            thenByBuilder.build();\n        }\n        return thenByBuilder;\n    }\n\n    public build(): ProductSortBySpecification | null {\n        return this.value == null \n            ? null\n            : { value: this.value };\n    }\n}\n","import { ContentAttributeSorting, ContentDataSorting, ContentPopularitySorting, ContentRelevanceSorting, ContentSortBySpecification } from '../../models/data-contracts';\n\nexport class ContentSortingBuilder {\n    private value:\n        | ContentAttributeSorting\n        | ContentDataSorting\n        | ContentPopularitySorting\n        | ContentRelevanceSorting\n        | null = null;\n\n    public sortByContentData(key: string, order: 'Ascending' | 'Descending' = 'Descending', mode: 'Auto' | 'Alphabetical' | 'Numerical' = 'Auto', thenBy?: (thenBy: ContentSortingBuilder) => void) {\n        const sort: ContentDataSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Content.ContentDataSorting, Relewise.Client',\n            mode,\n            order,\n            key,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByContentRelevance(order: 'Ascending' | 'Descending' = 'Descending', thenBy?: (thenBy: ContentSortingBuilder) => void) {\n        const sort: ContentRelevanceSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Content.ContentRelevanceSorting, Relewise.Client',\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByContentPopularity(order: 'Ascending' | 'Descending' = 'Descending', thenBy?: (thenBy: ContentSortingBuilder) => void) {\n        const sort: ContentPopularitySorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Content.ContentPopularitySorting, Relewise.Client',\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByContentAttribute(\n        attribute: 'Id' | 'DisplayName',\n        order: 'Ascending' | 'Descending',\n        mode: 'Auto' | 'Alphabetical' | 'Numerical' = 'Auto',\n        thenBy?: (thenBy: ContentSortingBuilder) => void) {\n\n        const sort: ContentAttributeSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.Content.ContentAttributeSorting, Relewise.Client',\n            attribute,\n            mode,\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    private thenBy(thenBy: ((thenBy: ContentSortingBuilder) => void) | undefined) {\n        const thenByBuilder = new ContentSortingBuilder();\n        if (thenBy) {\n            thenBy(thenByBuilder);\n            thenByBuilder.build();\n        }\n        return thenByBuilder;\n    }\n\n    public build(): ContentSortBySpecification | null {\n        return this.value == null\n            ? null\n            : { value: this.value };\n    }\n}\n","import { ProductCategoryAttributeSorting, ProductCategoryDataSorting, ProductCategoryPopularitySorting, ProductCategoryRelevanceSorting, ProductCategorySortBySpecification } from '../../models/data-contracts';\n\nexport class ProductCategorySortingBuilder {\n    private value:\n        | ProductCategoryAttributeSorting\n        | ProductCategoryDataSorting\n        | ProductCategoryPopularitySorting\n        | ProductCategoryRelevanceSorting\n        | null = null;\n\n    public sortByProductCategoryData(key: string, order: 'Ascending' | 'Descending' = 'Descending', mode: 'Auto' | 'Alphabetical' | 'Numerical' = 'Auto', thenBy?: (thenBy: ProductCategorySortingBuilder) => void) {\n        const sort: ProductCategoryDataSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.ProductCategory.ProductCategoryDataSorting, Relewise.Client',\n            mode,\n            order,\n            key,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByProductCategoryRelevance(order: 'Ascending' | 'Descending' = 'Descending', thenBy?: (thenBy: ProductCategorySortingBuilder) => void) {\n        const sort: ProductCategoryRelevanceSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.ProductCategory.ProductCategoryRelevanceSorting, Relewise.Client',\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByProductCategoryPopularity(order: 'Ascending' | 'Descending' = 'Descending', thenBy?: (thenBy: ProductCategorySortingBuilder) => void) {\n        const sort: ProductCategoryPopularitySorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.ProductCategory.ProductCategoryPopularitySorting, Relewise.Client',\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    public sortByProductCategoryAttribute(\n        attribute: 'Id' | 'DisplayName',\n        order: 'Ascending' | 'Descending',\n        mode: 'Auto' | 'Alphabetical' | 'Numerical' = 'Auto',\n        thenBy?: (thenBy: ProductCategorySortingBuilder) => void) {\n\n        const sort: ProductCategoryAttributeSorting = {\n            $type: 'Relewise.Client.DataTypes.Search.Sorting.ProductCategory.ProductCategoryAttributeSorting, Relewise.Client',\n            attribute,\n            mode,\n            order,\n            thenBy: this.thenBy(thenBy)?.value,\n        }\n\n        this.value = sort;\n    }\n\n    private thenBy(thenBy: ((thenBy: ProductCategorySortingBuilder) => void) | undefined) {\n        const thenByBuilder = new ProductCategorySortingBuilder();\n        \n        if (thenBy) { thenBy(thenByBuilder); }\n        \n        return thenByBuilder;\n    }\n\n    public build(): ProductCategorySortBySpecification | null {\n        return this.value == null\n            ? null\n            : { value: this.value };\n    }\n}\n","import { SearchRequest } from '../../models/data-contracts';\nimport { FilterBuilder } from '../filterBuilder';\nimport { RelevanceModifierBuilder } from '../relevanceModifierBuilder';\nimport { Settings } from '../settings';\n\nexport abstract class SearchRequestBuilder {\n    private readonly filterBuilder: FilterBuilder = new FilterBuilder();\n    private readonly postFilterBuilder: FilterBuilder = new FilterBuilder();\n    private readonly relevanceModifiersBuilder: RelevanceModifierBuilder = new RelevanceModifierBuilder();\n    private indexId: string | null | undefined;\n\n    constructor(\n        private readonly settings?: Settings) {\n    }\n\n    /**\n     * Adds filters to the request\n     * @param filterBuilder \n     * @returns \n     */\n    public filters(filterBuilder: (builder: FilterBuilder) => void): this {\n        filterBuilder(this.filterBuilder);\n\n        return this;\n    }\n\n    /**\n     * Adds post filters to the request\n     * @param filterBuilder \n     * @returns \n     */\n    public postFilters(filterBuilder: (builder: FilterBuilder) => void): this {\n        filterBuilder(this.postFilterBuilder);\n\n        return this;\n    }\n\n    public relevanceModifiers(relevanceModifiersBuilder: (builder: RelevanceModifierBuilder) => void): this {\n        relevanceModifiersBuilder(this.relevanceModifiersBuilder);\n\n        return this;\n    }\n\n    /**\n     * Use only when a specific index different from the 'default'-index is needed\n     * @param id \n     * @returns \n     */\n    public setIndex(id?: string | null): this {\n        this.indexId = id;\n\n        return this;\n    }\n\n    protected baseBuild(): Omit<SearchRequest, '$type' | 'currency' |  'language' | 'displayedAtLocation'> {\n        return {\n            ...(this.settings && { \n                currency: { value: this.settings.currency },\n                language: { value: this.settings.language },\n                displayedAtLocation: this.settings.displayedAtLocation,\n                user: this.settings.user,\n            }),\n            filters: this.filterBuilder.build(),\n            postFilters: this.postFilterBuilder.build(),\n            relevanceModifiers: this.relevanceModifiersBuilder.build(),\n            ...(this.indexId && { indexSelector: { id: this.indexId } }),\n        };\n    }\n}","import { ContentSearchRequest, ContentSearchSettings, RecommendationSettings, SelectedContentPropertiesSettings } from '../../models/data-contracts';\nimport { PaginationBuilder } from '../paginationBuilder';\nimport { Settings } from '../settings';\nimport { ContentSortingBuilder } from './contentSortingBuilder';\nimport { FacetBuilder } from './facetBuilder';\nimport { SearchBuilder } from './searchBuilder';\nimport { SearchRequestBuilder } from './searchRequestBuilder';\n\nexport class ContentSearchBuilder extends SearchRequestBuilder implements SearchBuilder {\n    private facetBuilder: FacetBuilder = new FacetBuilder();\n    private paginationBuilder: PaginationBuilder = new PaginationBuilder();\n    private sortingBuilder: ContentSortingBuilder = new ContentSortingBuilder();\n    private term: string | null | undefined;\n\n    private searchSettings: ContentSearchSettings = {\n        $type: 'Relewise.Client.Requests.Search.Settings.ContentSearchSettings, Relewise.Client',\n        recommendations: {},\n    };\n\n    constructor(settings: Settings) {\n        super(settings)\n    }\n\n    public setContentProperties(contentProperties: Partial<SelectedContentPropertiesSettings>): this {\n        this.searchSettings.selectedContentProperties = contentProperties as SelectedContentPropertiesSettings;\n\n        return this;\n    }\n\n    public setRecommendationSettings(settings: RecommendationSettings): this {\n        this.searchSettings.recommendations = settings;\n\n        return this;\n    }\n\n    public setTerm(term: string | null | undefined): this {\n        this.term = term;\n\n        return this;\n    }\n\n    public pagination(paginate: (pagination: PaginationBuilder) => void): this {\n        paginate(this.paginationBuilder);\n\n        return this;\n    }\n\n    public facets(facets: (pagination: FacetBuilder) => void): this {\n        facets(this.facetBuilder);\n\n        return this;\n    }\n\n    public sorting(sorting: (sortingBuilder: ContentSortingBuilder) => void): this {\n        sorting(this.sortingBuilder);\n\n        return this;\n    }\n\n    public build(): ContentSearchRequest {\n        const { take, skip } = this.paginationBuilder.build();\n        return {\n            $type: 'Relewise.Client.Requests.Search.ContentSearchRequest, Relewise.Client', \n            ...this.baseBuild(),\n            \n            settings: this.searchSettings,\n            take,\n            skip,\n\n            term: this.term,\n\n            facets: this.facetBuilder.build(),\n            sorting: this.sortingBuilder.build(),\n        } as ContentSearchRequest;\n    }\n}","import { ProductCategorySearchRequest, ProductCategorySearchSettings, RecommendationSettings, SelectedProductCategoryPropertiesSettings } from '../../models/data-contracts';\nimport { PaginationBuilder } from '../paginationBuilder';\nimport { Settings } from '../settings';\nimport { FacetBuilder } from './facetBuilder';\nimport { ProductCategorySortingBuilder } from './productCategorySortingBuilder';\nimport { SearchBuilder } from './searchBuilder';\nimport { SearchRequestBuilder } from './searchRequestBuilder';\n\nexport class ProductCategorySearchBuilder extends SearchRequestBuilder implements SearchBuilder {\n    private facetBuilder: FacetBuilder = new FacetBuilder();\n    private paginationBuilder: PaginationBuilder = new PaginationBuilder();\n    private sortingBuilder: ProductCategorySortingBuilder = new ProductCategorySortingBuilder();\n    private term: string | null | undefined;\n\n    private searchSettings: ProductCategorySearchSettings = {\n        $type: 'Relewise.Client.Requests.Search.Settings.ProductCategorySearchSettings, Relewise.Client',\n        recommendations: {},\n    };\n\n    constructor(settings: Settings) {\n        super(settings)\n    }\n\n    /**\n     * Select the properties of the product category to be returned, by default only the product category id is returned.\n     * @param productCategoryProperties  \n     */\n    public setSelectedCategoryProperties(productCategoryProperties: Partial<SelectedProductCategoryPropertiesSettings> | null): this {\n        this.searchSettings.selectedCategoryProperties = productCategoryProperties as SelectedProductCategoryPropertiesSettings | null;\n\n        return this;\n    }\n\n    public setRecommendationSettings(settings: RecommendationSettings): this {\n        this.searchSettings.recommendations = settings;\n\n        return this;\n    }\n\n    /**\n     * Set the term used to filter product categories by\n     */\n    public setTerm(term: string | null | undefined): this {\n\n        this.term = term;\n\n        return this;\n    }\n\n    public pagination(paginate: (pagination: PaginationBuilder) => void): this {\n        paginate(this.paginationBuilder);\n\n        return this;\n    }\n\n    public facets(facets: (facets: FacetBuilder) => void): this {\n        facets(this.facetBuilder);\n\n        return this;\n    }\n\n    public sorting(sorting: (sortingBuilder: ProductCategorySortingBuilder) => void): this {\n        sorting(this.sortingBuilder);\n\n        return this;\n    }\n\n    public build(): ProductCategorySearchRequest {\n        const { take, skip } = this.paginationBuilder.build();\n        return {\n            $type: 'Relewise.Client.Requests.Search.ProductCategorySearchRequest, Relewise.Client',\n            ...this.baseBuild(),\n            take,\n            skip,\n\n            term: this.term,\n\n            facets: this.facetBuilder.build(),\n            settings: this.searchSettings,\n            sorting: this.sortingBuilder.build(),\n        };\n    }\n}","import { ProductSearchResultConstraint, ResultMustHaveVariantConstraint } from '../../models/data-contracts';\n\nexport class SearchConstraintBuilder {\n    private resultConstraint: ProductSearchResultConstraint | null = null;\n\n    public setResultMustHaveVariantConstraint(constaint: { exceptWhenProductHasNoVariants: boolean }): this {\n        const constraint: ResultMustHaveVariantConstraint = {\n            $type: 'Relewise.Client.Requests.Search.Settings.ResultMustHaveVariantConstraint, Relewise.Client',\n            ...constaint,\n        };\n\n        this.resultConstraint = constraint;\n        return this;\n    }\n\n    build(): ResultMustHaveVariantConstraint | null {\n        // Do to how the data contracts are generated, resultsConstraints on searchSettings expect this specific type\n        // Once more types are added it will expect the generic type and this cast should be removed and the generic type should be returned\n        return this.resultConstraint as ResultMustHaveVariantConstraint | null;\n    }\n}\n","import { ProductSearchRequest, ProductSearchSettings, RecommendationSettings, ResultMustHaveVariantConstraint, RetailMediaQuery, SelectedBrandPropertiesSettings, SelectedProductPropertiesSettings, SelectedVariantPropertiesSettings, VariantSearchSettings } from '../../models/data-contracts';\nimport { PaginationBuilder } from '../paginationBuilder';\nimport { Settings } from '../settings';\nimport { FacetBuilder } from './facetBuilder';\nimport { ProductSortingBuilder } from './productSortingBuilder';\nimport { SearchBuilder } from './searchBuilder';\nimport { SearchConstraintBuilder } from './searchConstraintBuilder';\nimport { SearchRequestBuilder } from './searchRequestBuilder';\n\nexport class ProductSearchBuilder extends SearchRequestBuilder implements SearchBuilder {\n    private facetBuilder: FacetBuilder = new FacetBuilder();\n    private retailMediaQuery: RetailMediaQuery | null = null;\n    private paginationBuilder: PaginationBuilder = new PaginationBuilder();\n    private sortingBuilder: ProductSortingBuilder = new ProductSortingBuilder();\n    private searchConstraintBuilder: SearchConstraintBuilder = new SearchConstraintBuilder();\n    private term: string | null | undefined;\n\n    private searchSettings: ProductSearchSettings = {\n        $type: 'Relewise.Client.Requests.Search.Settings.ProductSearchSettings, Relewise.Client',\n        recommendations: {},\n    };\n\n    constructor(settings: Settings) {\n        super(settings)\n    }\n\n    /**\n     * Select the properties of the product to be returned, by default only the product id is returned.\n     * @param productProperties  \n     */\n    public setSelectedProductProperties(productProperties: Partial<SelectedProductPropertiesSettings> | null): this {\n        this.searchSettings.selectedProductProperties = productProperties as SelectedProductPropertiesSettings | null;\n\n        return this;\n    }\n\n    /**\n    * Select the properties of the variant to be returned, by default only the variant id is returned.  \n    * @param variantProperties  \n    */\n    public setSelectedVariantProperties(variantProperties: Partial<SelectedVariantPropertiesSettings> | null): this {\n        this.searchSettings.selectedVariantProperties = variantProperties as SelectedVariantPropertiesSettings | null;\n\n        return this;\n    }\n\n    /**\n     * Select the properties of the brand to be returned, by default only the brand id is returned.\n     * @param brandProperties  \n     */\n    public setSelectedBrandProperties(brandProperties: Partial<SelectedBrandPropertiesSettings> | null): this {\n        this.searchSettings.selectedBrandProperties = brandProperties as SelectedBrandPropertiesSettings | null;\n\n        return this;\n    }\n\n    public setVariantSearchSettings(variantSearchSettings: Partial<VariantSearchSettings>): this {\n        this.searchSettings.variantSettings = variantSearchSettings as VariantSearchSettings;\n\n        return this;\n    }\n\n    public setExplodedVariants(count?: number | null): this {\n        this.searchSettings.explodedVariants = count;\n\n        return this;\n    }\n\n    public setRecommendationSettings(settings: RecommendationSettings): this {\n        this.searchSettings.recommendations = settings;\n\n        return this;\n    }\n\n    public setRetailMedia(query: RetailMediaQuery | null): this {\n        this.retailMediaQuery = query;\n\n        return this;\n    }\n\n    /**\n     * Set the term used to filter products by\n     */\n    public setTerm(term: string | null | undefined): this {\n\n        this.term = term;\n\n        return this;\n    }\n\n    public pagination(paginate: (pagination: PaginationBuilder) => void): this {\n        paginate(this.paginationBuilder);\n\n        return this;\n    }\n\n    public facets(facets: (facets: FacetBuilder) => void): this {\n        facets(this.facetBuilder);\n\n        return this;\n    }\n\n    public sorting(sorting: (sortingBuilder: ProductSortingBuilder) => void): this {\n        sorting(this.sortingBuilder);\n\n        return this;\n    }\n\n    public searchConstraints(searchConstraintbuilder: (searchConstraintBuilder: SearchConstraintBuilder) => void): this {\n        searchConstraintbuilder(this.searchConstraintBuilder);\n\n        this.searchSettings.resultConstraint = this.searchConstraintBuilder.build();\n\n        return this;\n    }\n\n    public build(): ProductSearchRequest {\n        const { take, skip } = this.paginationBuilder.build();\n        return {\n            $type: 'Relewise.Client.Requests.Search.ProductSearchRequest, Relewise.Client',\n            ...this.baseBuild(),\n            take,\n            skip,\n\n            term: this.term,\n\n            facets: this.facetBuilder.build(),\n            settings: this.searchSettings,\n            sorting: this.sortingBuilder.build(),\n            retailMedia: this.retailMediaQuery,\n        } as ProductSearchRequest;\n    }\n}","import { ContentSearchRequest, ProductSearchRequest, ProductCategorySearchRequest, SearchRequestCollection, SearchTermPredictionRequest } from '../../models/data-contracts';\nimport { Settings } from '../settings';\nimport { SearchRequestBuilder } from './searchRequestBuilder';\n\nexport class SearchCollectionBuilder extends SearchRequestBuilder {\n    private requests: (ProductSearchRequest | ContentSearchRequest | ProductCategorySearchRequest | SearchTermPredictionRequest)[] = [];\n\n    constructor(settings?: Settings) {\n        super(settings)\n    }\n\n    public addRequest(request: ProductSearchRequest | ContentSearchRequest | ProductCategorySearchRequest  | SearchTermPredictionRequest): this {\n        this.requests.push(request);\n\n        return this;\n    }\n\n    public build(): SearchRequestCollection {\n        return {\n            $type: 'Relewise.Client.Requests.Search.SearchRequestCollection, Relewise.Client',\n            ...this.baseBuild(),\n            requests: this.requests,\n        };\n    }\n}","import { SearchTermPredictionRequest } from '../../models/data-contracts';\nimport { Settings } from '../settings';\nimport { SearchRequestBuilder } from './searchRequestBuilder';\n\nexport class SearchTermPredictionBuilder extends SearchRequestBuilder {\n    private count: number = 0;\n    private term: string = '';\n    private targetEntityTypes: ('Product' | 'Variant' | 'ProductCategory' | 'Brand' | 'Content' | 'ContentCategory')[] | null = null;\n\n    constructor(settings: Settings) {\n        super(settings)\n    }\n\n    public take(count: number): this {\n        this.count = count;\n\n        return this;\n    }\n\n    public setTerm(term: string): this {\n        this.term = term;\n\n        return this;\n    }\n\n    public addEntityType(...types: ('Product' | 'Variant' | 'ProductCategory' | 'Brand' | 'Content' | 'ContentCategory')[]): this {\n        this.targetEntityTypes = types;\n\n        return this;\n    }\n\n    public build(): SearchTermPredictionRequest {\n        return {\n            $type: 'Relewise.Client.Requests.Search.SearchTermPredictionRequest, Relewise.Client',\n            ...this.baseBuild(),\n\n            term: this.term,\n            take: this.count,\n            settings: {\n                $type: 'Relewise.Client.Requests.Search.Settings.SearchTermPredictionSettings, Relewise.Client',\n                targetEntityTypes: this.targetEntityTypes,\n            },\n        } as SearchTermPredictionRequest;\n    }\n}","import { BrandFacetResult, CategoryFacetResult, CategoryHierarchyFacetResult, PriceRangeFacetResult, PriceRangesFacetResult, ProductAssortmentFacetResult, ProductDataBooleanValueFacetResult, ProductDataDoubleRangeFacetResult, ProductDataDoubleRangesFacetResult, ProductDataDoubleValueFacetResult, ProductDataObjectFacetResult, ProductDataStringValueFacetResult, ProductFacetResult, VariantSpecificationFacetResult } from '../../models/data-contracts';\n\nexport type DataSelectionStrategy = ProductDataDoubleRangeFacetResult['dataSelectionStrategy'];\nexport type PriceSelectionStrategy = PriceRangeFacetResult['priceSelectionStrategy'];\n\nexport class GetProductFacet {\n    public static productAssortment(facets: ProductFacetResult, selectionStrategy: 'Product' | 'Variant' | 'VariantWithFallbackToProduct' | 'ProductWithFallbackToVariant'): ProductAssortmentFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets\n            .items\n            .find((item): item is ProductAssortmentFacetResult =>\n                '$type' in item &&\n                item.$type === 'Relewise.Client.DataTypes.Search.items.Result.ProductAssortmentFacetResult, Relewise.Client' &&\n                'field' in item &&\n                item.field === 'Assortment' &&\n                'assortmentSelectionStrategy' in item &&\n                item.assortmentSelectionStrategy === selectionStrategy) || null;\n    }\n\n    public static brand(facets: ProductFacetResult): BrandFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets\n            .items\n            .find((item): item is BrandFacetResult =>\n                '$type' in item &&\n                item.$type === 'Relewise.Client.DataTypes.Search.items.Result.BrandFacetResult, Relewise.Client' &&\n                'field' in item &&\n                item.field === 'Brand') || null;\n    }\n\n    public static category(facets: ProductFacetResult, selectionStrategy: 'ImmediateParent' | 'Ancestors' | 'Descendants'): CategoryFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets\n            .items\n            .find((item): item is CategoryFacetResult =>\n                '$type' in item &&\n                item.$type === 'Relewise.Client.DataTypes.Search.items.Result.CategoryFacetResult, Relewise.Client' &&\n                'categorySelectionStrategy' in item\n                && item.categorySelectionStrategy === selectionStrategy) || null;\n    }\n\n    public static categoryHierarchy(facets: ProductFacetResult, selectionStrategy: 'ImmediateParent' | 'Ancestors' | 'Descendants'): CategoryHierarchyFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets\n            .items\n            .find((item): item is CategoryHierarchyFacetResult =>\n                '$type' in item &&\n                item.$type === 'Relewise.Client.DataTypes.Search.items.Result.CategoryHierarchyFacet, Relewise.Client' &&\n                'categorySelectionStrategy' in item &&\n                item.categorySelectionStrategy === selectionStrategy) || null;\n    }\n\n    public static listPriceRange(\n        facets: ProductFacetResult,\n        selectionStrategy: PriceSelectionStrategy,\n    ): PriceRangeFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is PriceRangeFacetResult =>\n            item.field === 'ListPrice' &&\n            item.$type === 'Relewise.Client.DataTypes.Search.items.Result.PriceRangeFacetResult, Relewise.Client' &&\n            'priceSelectionStrategy' in item &&\n            item.priceSelectionStrategy === selectionStrategy,\n        ) || null;\n    }\n\n    public static salesPriceRange(\n        facets: ProductFacetResult,\n        selectionStrategy: PriceSelectionStrategy,\n    ): PriceRangeFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is PriceRangeFacetResult =>\n            item.field === 'SalesPrice' &&\n            item.$type === 'Relewise.Client.DataTypes.Search.items.Result.PriceRangeFacetResult, Relewise.Client' &&\n            'priceSelectionStrategy' in item &&\n            item.priceSelectionStrategy === selectionStrategy,\n        ) || null;\n    }\n\n    public static listPriceRanges(\n        facets: ProductFacetResult,\n        selectionStrategy: PriceSelectionStrategy,\n    ): PriceRangesFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is PriceRangesFacetResult =>\n            item.field === 'ListPrice' &&\n            item.$type === 'Relewise.Client.DataTypes.Search.items.Result.PriceRangesFacetResult, Relewise.Client' &&\n            'priceSelectionStrategy' in item &&\n            item.priceSelectionStrategy === selectionStrategy,\n        ) || null;\n    }\n\n    public static listPriceRangesWithRange(\n        facets: ProductFacetResult,\n        selectionStrategy: PriceSelectionStrategy,\n        expandedRangeSize: number | null,\n    ): PriceRangesFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is PriceRangesFacetResult =>\n            item.field === 'ListPrice' &&\n            item.$type === 'Relewise.Client.DataTypes.Search.items.Result.PriceRangesFacetResult, Relewise.Client' &&\n            'priceSelectionStrategy' in item &&\n            item.priceSelectionStrategy === selectionStrategy &&\n            'expandedRangeSize' in item &&\n            item.expandedRangeSize === expandedRangeSize,\n        ) || null;\n    }\n\n    public static salesPriceRanges(\n        facets: ProductFacetResult,\n        selectionStrategy: PriceSelectionStrategy,\n    ): PriceRangesFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is PriceRangesFacetResult =>\n            item.field === 'SalesPrice' &&\n            item.$type === 'Relewise.Client.DataTypes.Search.items.Result.PriceRangesFacetResult, Relewise.Client' &&\n            'priceSelectionStrategy' in item &&\n            item.priceSelectionStrategy === selectionStrategy,\n        ) || null;\n    }\n\n    public static salesPriceRangesWithRange(\n        facets: ProductFacetResult,\n        selectionStrategy: PriceSelectionStrategy,\n        expandedRangeSize: number | null,\n    ): PriceRangesFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is PriceRangesFacetResult =>\n            item.field === 'SalesPrice' &&\n            item.$type === 'Relewise.Client.DataTypes.Search.items.Result.PriceRangesFacetResult, Relewise.Client' &&\n            'priceSelectionStrategy' in item &&\n            item.priceSelectionStrategy === selectionStrategy &&\n            'expandedRangeSize' in item &&\n            item.expandedRangeSize === expandedRangeSize,\n        ) || null;\n    }\n\n    public static dataDoubleRange(\n        facets: ProductFacetResult,\n        selectionStrategy: DataSelectionStrategy,\n        key: string,\n    ): ProductDataDoubleRangeFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ProductDataDoubleRangeFacetResult =>\n            item.field === 'Data' &&\n            item.$type === 'Relewise.Client.DataTypes.Search.items.Result.ProductDataDoubleRangeFacetResult, Relewise.Client' &&\n            'dataSelectionStrategy' in item &&\n            item.dataSelectionStrategy === selectionStrategy &&\n            'key' in item &&\n            item.key === key,\n        ) || null;\n    }\n\n    public static dataDoubleRanges(\n        facets: ProductFacetResult,\n        selectionStrategy: DataSelectionStrategy,\n        key: string,\n    ): ProductDataDoubleRangesFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ProductDataDoubleRangesFacetResult =>\n            item.field === 'Data' &&\n            item.$type === 'Relewise.Client.DataTypes.Search.items.Result.ProductDataDoubleRangesFacetResult, Relewise.Client' &&\n            'dataSelectionStrategy' in item &&\n            item.dataSelectionStrategy === selectionStrategy &&\n            'key' in item &&\n            item.key === key,\n        ) || null;\n    }\n\n    public static variantSpecification(facets: ProductFacetResult, key: string): VariantSpecificationFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets\n            .items\n            .find((item): item is VariantSpecificationFacetResult =>\n                '$type' in item &&\n                item.$type === 'Relewise.Client.DataTypes.Search.items.Result.VariantSpecificationFacetResult, Relewise.Client' &&\n                'field' in item &&\n                item.field === 'VariantSpecification' &&\n                'key' in item && item.key === key) || null;\n    }\n\n    public static dataString(\n        facets: ProductFacetResult,\n        key: string,\n        selectionStrategy: DataSelectionStrategy,\n    ): ProductDataStringValueFacetResult | null {\n        return this.data<ProductDataStringValueFacetResult>(facets, 'Relewise.Client.DataTypes.Search.Facets.Result.ProductDataStringValueFacetResult, Relewise.Client', selectionStrategy, key);\n    }\n\n    public static dataBoolean(\n        facets: ProductFacetResult,\n        key: string,\n        selectionStrategy: DataSelectionStrategy,\n    ): ProductDataBooleanValueFacetResult | null {\n        return this.data<ProductDataBooleanValueFacetResult>(facets, 'Relewise.Client.DataTypes.Search.Facets.Result.ProductDataBooleanValueFacetResult, Relewise.Client', selectionStrategy, key);\n    }\n\n    public static dataNumber(\n        facets: ProductFacetResult,\n        key: string,\n        selectionStrategy: DataSelectionStrategy,\n    ): ProductDataDoubleValueFacetResult | null {\n        return this.data<ProductDataDoubleValueFacetResult>(facets, 'Relewise.Client.DataTypes.Search.Facets.Result.ProductDataDoubleValueFacetResult, Relewise.Client', selectionStrategy, key);\n    }\n\n    public static dataObject(\n        facets: ProductFacetResult,\n        selectionStrategy: DataSelectionStrategy,\n        key: string,\n    ): ProductDataObjectFacetResult | null {\n        if (!facets?.items) return null;\n\n        return (facets.items.find((a): a is ProductDataObjectFacetResult =>\n            a.$type === 'Relewise.Client.DataTypes.Search.Facets.Result.ProductDataObjectFacetResult, Relewise.Client' &&\n            a.field === 'Data' &&\n            (a as ProductDataObjectFacetResult).key === key &&\n            (a as ProductDataObjectFacetResult).dataSelectionStrategy === selectionStrategy,\n        ) || null) as ProductDataObjectFacetResult;\n    }\n\n    private static data<TFacetResult>(\n        facets: ProductFacetResult,\n        $type: string,\n        selectionStrategy: DataSelectionStrategy,\n        key: string,\n    ): TFacetResult | null {\n        if (!facets?.items) return null;\n\n        return (facets.items.find((a: any) =>\n            a.$type === $type &&\n            a.field === 'Data' &&\n            'dataSelectionStrategy' in a && a.dataSelectionStrategy === selectionStrategy &&\n            'key' in a && a.key === key,\n        ) || null) as TFacetResult | null;\n    }\n};","import { \n    ContentAssortmentFacetResult, \n    CategoryFacetResult, \n    CategoryHierarchyFacetResult, \n    ContentDataDoubleRangeFacetResult, \n    ContentDataDoubleRangesFacetResult, \n    ContentDataStringValueFacetResult, \n    ContentDataBooleanValueFacetResult, \n    ContentDataDoubleValueFacetResult, \n    ContentDataObjectFacetResult, \n    FacetResult,\n    ContentFacetResult, \n} from '../../models/data-contracts';\n\nexport class GetContentFacet {\n    items: FacetResult[] | null;\n\n    constructor(items: FacetResult[] | null) {\n        this.items = items;\n    }\n\n    public static category(\n        facets: ContentFacetResult, \n        selectionStrategy: string,\n    ): CategoryFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is CategoryFacetResult =>\n            item.field === 'Category' && \n            item.$type === 'CategoryFacetResult' && \n            'categorySelectionStrategy' in item &&\n            item.categorySelectionStrategy === selectionStrategy,\n        ) || null;\n    }\n\n    public static categoryHierarchy(\n        facets: ContentFacetResult, \n        selectionStrategy: string,\n    ): CategoryHierarchyFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is CategoryHierarchyFacetResult =>\n            item.field === 'Category' && \n            item.$type === 'CategoryHierarchyFacetResult' && \n            'categorySelectionStrategy' in item &&\n            item.categorySelectionStrategy === selectionStrategy,\n        ) || null;\n    }\n\n    public static assortment(\n        facets: ContentFacetResult,\n    ): ContentAssortmentFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ContentAssortmentFacetResult =>\n            item.field === 'Assortment' && \n            item.$type === 'ContentAssortmentFacetResult',\n        ) || null;\n    }\n\n    public static dataDoubleRange(\n        facets: ContentFacetResult, \n        key: string,\n    ): ContentDataDoubleRangeFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ContentDataDoubleRangeFacetResult =>\n            item.field === 'Data' && \n            item.$type === 'ContentDataDoubleRangeFacetResult' && \n            'key' in item &&\n            item.key === key,\n        ) || null;\n    }\n\n    public static dataDoubleRanges(\n        facets: ContentFacetResult, \n        key: string,\n    ): ContentDataDoubleRangesFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ContentDataDoubleRangesFacetResult =>\n            item.field === 'Data' && \n            item.$type === 'ContentDataDoubleRangesFacetResult' && \n            'key' in item &&\n            item.key === key,\n        ) || null;\n    }\n\n    public static dataString(\n        facets: ContentFacetResult, \n        key: string,\n    ): ContentDataStringValueFacetResult | null {\n        return this.data(facets, 'Relewise.Client.DataTypes.Search.Facets.Result.ContentDataStringValueFacetResult, Relewise.Client', key);\n    }\n\n    public static dataBoolean(\n        facets: ContentFacetResult, \n        key: string,\n    ): ContentDataBooleanValueFacetResult | null {\n        return this.data(facets, 'Relewise.Client.DataTypes.Search.Facets.Result.ContentDataBooleanValueFacetResult, Relewise.Client', key);\n    }\n\n    public static dataNumber(\n        facets: ContentFacetResult, \n        key: string,\n    ): ContentDataDoubleValueFacetResult | null {\n        return this.data(facets, 'Relewise.Client.DataTypes.Search.Facets.Result.ContentDataDoubleValueFacetResult, Relewise.Client', key);\n    }\n\n    public static dataObject(\n        facets: ContentFacetResult, \n        key: string,\n    ): ContentDataObjectFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ContentDataObjectFacetResult =>\n            item.field === 'Data' && \n            item.$type === 'ContentDataObjectFacetResult' && \n            'key' in item &&\n            item.key === key,\n        ) || null;\n    }\n\n    private static data<TFacetResult>(\n        facets: ContentFacetResult,\n        $type: string,\n        key: string,\n    ): TFacetResult | null {\n        if (!facets?.items) return null;\n\n        return (facets.items.find((a: any) =>\n            a.$type === $type &&\n            a.field === 'Data' &&\n            'key' in a && a.key === key,\n        ) || null) as TFacetResult | null;\n    }\n};\n","import { \n    ProductCategoryAssortmentFacetResult, \n    CategoryFacetResult, \n    CategoryHierarchyFacetResult, \n    ProductCategoryDataDoubleRangeFacetResult, \n    ProductCategoryDataDoubleRangesFacetResult, \n    ProductCategoryDataStringValueFacetResult, \n    ProductCategoryDataBooleanValueFacetResult, \n    ProductCategoryDataDoubleValueFacetResult, \n    ProductCategoryDataObjectFacetResult, \n    FacetResult,\n    ProductCategoryFacetResult, \n} from '../../models/data-contracts';\n\nexport class GetProductCategoryFacet {\n    items: FacetResult[] | null;\n\n    constructor(items: FacetResult[] | null) {\n        this.items = items;\n    }\n\n    public static assortment(\n        facets: ProductCategoryFacetResult,\n    ): ProductCategoryAssortmentFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ProductCategoryAssortmentFacetResult =>\n            item.field === 'Assortment' && \n            item.$type === 'ProductCategoryAssortmentFacetResult',\n        ) || null;\n    }\n\n    public static dataDoubleRange(\n        facets: ProductCategoryFacetResult, \n        key: string,\n    ): ProductCategoryDataDoubleRangeFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ProductCategoryDataDoubleRangeFacetResult =>\n            item.field === 'Data' && \n            item.$type === 'ProductCategoryDataDoubleRangeFacetResult' && \n            'key' in item &&\n            item.key === key,\n        ) || null;\n    }\n\n    public static dataDoubleRanges(\n        facets: ProductCategoryFacetResult, \n        key: string,\n    ): ProductCategoryDataDoubleRangesFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ProductCategoryDataDoubleRangesFacetResult =>\n            item.field === 'Data' && \n            item.$type === 'ProductCategoryDataDoubleRangesFacetResult' && \n            'key' in item &&\n            item.key === key,\n        ) || null;\n    }\n\n    public static dataString(\n        facets: ProductCategoryFacetResult, \n        key: string,\n    ): ProductCategoryDataStringValueFacetResult | null {\n        return this.data(facets, 'Relewise.Client.DataTypes.Search.Facets.Result.ProductCategoryDataStringValueFacetResult, Relewise.Client', key);\n    }\n\n    public static dataBoolean(\n        facets: ProductCategoryFacetResult, \n        key: string,\n    ): ProductCategoryDataBooleanValueFacetResult | null {\n        return this.data(facets, 'Relewise.Client.DataTypes.Search.Facets.Result.ProductCategoryDataBooleanValueFacetResult, Relewise.Client', key);\n    }\n\n    public static dataNumber(\n        facets: ProductCategoryFacetResult, \n        key: string,\n    ): ProductCategoryDataDoubleValueFacetResult | null {\n        return this.data(facets, 'Relewise.Client.DataTypes.Search.Facets.Result.ProductCategoryDataDoubleValueFacetResult, Relewise.Client', key);\n    }\n\n    public static dataObject(\n        facets: ProductCategoryFacetResult, \n        key: string,\n    ): ProductCategoryDataObjectFacetResult | null {\n        if (!facets?.items) return null;\n\n        return facets.items.find((item): item is ProductCategoryDataObjectFacetResult =>\n            item.field === 'Data' && \n            item.$type === 'ProductCategoryDataObjectFacetResult' && \n            'key' in item &&\n            item.key === key,\n        ) || null;\n    }\n\n    private static data<TFacetResult>(\n        facets: ProductCategoryFacetResult,\n        $type: string,\n        key: string,\n    ): TFacetResult | null {\n        if (!facets?.items) return null;\n\n        return (facets.items.find((a: any) =>\n            a.$type === $type &&\n            a.field === 'Data' &&\n            'key' in a && a.key === key,\n        ) || null) as TFacetResult | null;\n    }\n};\n","import { RecommendationRequest } from '../../models/data-contracts';\nimport { FilterBuilder } from '../filterBuilder';\nimport { RelevanceModifierBuilder } from '../relevanceModifierBuilder';\nimport { Settings } from '../settings';\n\nexport abstract class RecommendationRequestBuilder {\n    private readonly filterBuilder: FilterBuilder = new FilterBuilder();\n    private readonly relevanceModifiersBuilder: RelevanceModifierBuilder = new RelevanceModifierBuilder();\n\n    constructor(\n        private readonly settings: Settings) {\n    }\n\n    /**\n     * Adds filters to the request\n     * @param filterBuilder \n     * @returns \n     */\n    public filters(filterBuilder: (builder: FilterBuilder) => void): this {\n        filterBuilder(this.filterBuilder);\n\n        return this;\n    }\n\n    public relevanceModifiers(relevanceModifiersBuilder: (builder: RelevanceModifierBuilder) => void): this {\n        relevanceModifiersBuilder(this.relevanceModifiersBuilder);\n\n        return this;\n    }\n\n    protected baseBuild(): Omit<RecommendationRequest, '$type'> {\n        return {\n            currency: { value: this.settings.currency },\n            user: this.settings.user,\n            language: { value: this.settings.language },\n            displayedAtLocationType: this.settings.displayedAtLocation,\n            filters: this.filterBuilder.build() ?? {},\n            relevanceModifiers: this.relevanceModifiersBuilder.build() ?? {},\n        };\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { ContentRecommendationRequestSettings, SelectedContentPropertiesSettings } from '../../../models/data-contracts';\nimport { RecommendationRequestBuilder } from '../recommendationRequestBuilder';\n\nexport class ContentSettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    protected recommendationSettings: ContentRecommendationRequestSettings = {\n        allowFillIfNecessaryToReachNumberOfRecommendations: true,\n        allowReplacingOfRecentlyShownRecommendations: true,\n        numberOfRecommendations: 10,\n        prioritizeDiversityBetweenRequests: false,\n    };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    /**\n     * Select the properties of the content to be returned, by default only the content id is returned.\n     * @param contentProperties  \n     */\n    public setSelectedContentProperties(contentProperties: Partial<SelectedContentPropertiesSettings> | null): this {\n        this.recommendationSettings.selectedContentProperties = contentProperties as SelectedContentPropertiesSettings | null;\n\n        return this;\n    }\n\n    public setNumberOfRecommendations(count: number): this {\n        this.recommendationSettings.numberOfRecommendations = count;\n\n        return this;\n    }\n\n    public allowFillIfNecessaryToReachNumberOfRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n\n        return this;\n    }\n\n    public allowReplacingOfRecentlyShownRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n\n        return this;\n    }\n\n    public prioritizeDiversityBetweenRequests(prioritize: boolean = true): this {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n\n        return this;\n    }\n}","import { ContentsViewedAfterViewingContentRequest, ContentsViewedAfterViewingMultipleContentsRequest, ContentsViewedAfterViewingMultipleProductsRequest, ContentsViewedAfterViewingProductRequest, PersonalContentRecommendationRequest, PopularContentsRequest, ContentRecommendationRequestCollection } from '../../../models/data-contracts';\n\nexport class ContentsRecommendationCollectionBuilder {\n    private requests: (ContentsViewedAfterViewingContentRequest\n        | ContentsViewedAfterViewingMultipleContentsRequest\n        | ContentsViewedAfterViewingMultipleProductsRequest\n        | ContentsViewedAfterViewingProductRequest\n        | PersonalContentRecommendationRequest\n        | PopularContentsRequest)[] = [];\n\n    private distinctContentsAcrossResults: boolean = true;\n\n    public addRequest(request: ContentsViewedAfterViewingContentRequest\n        | ContentsViewedAfterViewingMultipleContentsRequest\n        | ContentsViewedAfterViewingMultipleProductsRequest\n        | ContentsViewedAfterViewingProductRequest\n        | PersonalContentRecommendationRequest\n        | PopularContentsRequest): this {\n        this.requests.push(request);\n\n        return this;\n    }\n\n    public requireDistinctContentsAcrossResults(distinctContentsAcrossResults: boolean = true): this {\n        this.distinctContentsAcrossResults = distinctContentsAcrossResults;\n\n        return this;\n    }\n\n    public build(): ContentRecommendationRequestCollection {\n        return {\n            $type: 'Relewise.Client.Requests.Recommendations.ContentRecommendationRequestCollection, Relewise.Client',\n            requireDistinctContentsAcrossResults: this.distinctContentsAcrossResults,\n            requests: this.requests,\n        };\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { ContentsViewedAfterViewingContentRequest } from '../../../models/data-contracts';\nimport { ContentSettingsRecommendationBuilder } from './contentSettingsRecommendationBuilder';\nimport { ContentsRecommendationBuilder } from './contentsRecommendationBuilder';\n\nexport class ContentsViewedAfterViewingContentBuilder extends ContentSettingsRecommendationBuilder implements ContentsRecommendationBuilder<ContentsViewedAfterViewingContentRequest> {\n    private id: string = '';\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    setContentId(contentId: string): this {\n        this.id = contentId;\n\n        return this;\n    }\n\n    public build() {\n        const request: ContentsViewedAfterViewingContentRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.ContentsViewedAfterViewingContentRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            contentId: this.id,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { ContentsViewedAfterViewingMultipleContentsRequest } from '../../../models/data-contracts';\nimport { ContentSettingsRecommendationBuilder } from './contentSettingsRecommendationBuilder';\nimport { ContentsRecommendationBuilder } from './contentsRecommendationBuilder';\n\nexport class ContentsViewedAfterViewingMultipleContentsBuilder extends ContentSettingsRecommendationBuilder implements ContentsRecommendationBuilder<ContentsViewedAfterViewingMultipleContentsRequest> {\n    private ids: string[] = [];\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    setContentIds(...ids: string[]): this {\n        this.ids = ids;\n\n        return this;\n    }\n\n    public build() {\n        const request: ContentsViewedAfterViewingMultipleContentsRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.ContentsViewedAfterViewingMultipleContentsRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            contentIds: this.ids,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { ContentsViewedAfterViewingMultipleProductsRequest, ProductAndVariantId } from '../../../models/data-contracts';\nimport { ContentSettingsRecommendationBuilder } from './contentSettingsRecommendationBuilder';\nimport { ContentsRecommendationBuilder } from './contentsRecommendationBuilder';\n\nexport class ContentsViewedAfterViewingMultipleProductsBuilder extends ContentSettingsRecommendationBuilder implements ContentsRecommendationBuilder<ContentsViewedAfterViewingMultipleProductsRequest> {\n    private products: ProductAndVariantId[] = [];\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public addProduct(product: { productId: string; variantId?: string; }): this {\n        this.products.push(product);\n\n        return this;\n    }\n\n    public addProducts(products: { productId: string; variantId?: string; }[]): this {\n        products.forEach(x => this.products.push(x));\n\n        return this;\n    }\n\n    public build() {\n        const request: ContentsViewedAfterViewingMultipleProductsRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.ContentsViewedAfterViewingMultipleProductsRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            productAndVariantIds: this.products,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { ContentsViewedAfterViewingProductRequest, ProductAndVariantId } from '../../../models/data-contracts';\nimport { ContentSettingsRecommendationBuilder } from './contentSettingsRecommendationBuilder';\nimport { ContentsRecommendationBuilder } from './contentsRecommendationBuilder';\n\nexport class ContentsViewedAfterViewingProductBuilder extends ContentSettingsRecommendationBuilder implements ContentsRecommendationBuilder<ContentsViewedAfterViewingProductRequest> {\n    private productAndVariantId: ProductAndVariantId = {\n        productId: '',\n    };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public product(product: { productId: string; variantId?: string; }): this {\n        this.productAndVariantId = product;\n\n        return this;\n    }\n\n    public build() {\n        const request: ContentsViewedAfterViewingProductRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.ContentsViewedAfterViewingProductRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            productAndVariantId: this.productAndVariantId,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { PersonalContentRecommendationRequest } from '../../../models/data-contracts';\nimport { ContentSettingsRecommendationBuilder } from './contentSettingsRecommendationBuilder';\nimport { ContentsRecommendationBuilder } from './contentsRecommendationBuilder';\n\nexport class PersonalContentRecommendationBuilder extends ContentSettingsRecommendationBuilder implements ContentsRecommendationBuilder<PersonalContentRecommendationRequest> {\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public build() {\n        const request: PersonalContentRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PersonalContentRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { PopularContentsRequest } from '../../../models/data-contracts';\nimport { ContentSettingsRecommendationBuilder } from './contentSettingsRecommendationBuilder';\nimport { ContentsRecommendationBuilder } from './contentsRecommendationBuilder';\n\nexport class PopularContentsBuilder extends ContentSettingsRecommendationBuilder implements ContentsRecommendationBuilder<PopularContentsRequest> {\n    private since: number = 0;\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public sinceMinutesAgo(sinceMinutesAgo: number): this {\n        this.since = sinceMinutesAgo;\n\n        return this;\n    }\n\n    public build() {\n        const request: PopularContentsRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PopularContentsRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            sinceMinutesAgo: this.since,\n        };\n\n        return request;\n    }\n}\n","import { PersonalContentCategoryRecommendationRequest, PopularContentCategoriesRecommendationRequest, ContentCategoryRecommendationRequestCollection } from '../../../models/data-contracts';\n\nexport class ContentCategoriesRecommendationCollectionBuilder {\n    private requests: (PersonalContentCategoryRecommendationRequest | PopularContentCategoriesRecommendationRequest)[] = [];\n    private distinctCategoriesAcrossResults: boolean = true;\n\n    public addRequest(request: (PersonalContentCategoryRecommendationRequest | PopularContentCategoriesRecommendationRequest)): this {\n        this.requests.push(request);\n\n        return this;\n    }\n\n    public requireDistinctCategoriesAcrossResults(distinctCategoriesAcrossResults: boolean = true): this {\n        this.distinctCategoriesAcrossResults = distinctCategoriesAcrossResults;\n\n        return this;\n    }\n\n    public build(): ContentCategoryRecommendationRequestCollection {\n        return {\n            $type: 'Relewise.Client.Requests.Recommendations.ContentRecommendationRequestCollection, Relewise.Client',\n            requireDistinctCategoriesAcrossResults: this.distinctCategoriesAcrossResults,\n            requests: this.requests,\n        }\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { ContentCategoryRecommendationRequestSettings, SelectedContentCategoryPropertiesSettings } from '../../../models/data-contracts';\nimport { RecommendationRequestBuilder } from '../recommendationRequestBuilder';\n\nexport class ContentCategorySettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    protected recommendationSettings: ContentCategoryRecommendationRequestSettings = {\n        allowFillIfNecessaryToReachNumberOfRecommendations: true,\n        allowReplacingOfRecentlyShownRecommendations: true,\n        numberOfRecommendations: 10,\n        prioritizeDiversityBetweenRequests: false,\n    };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    /**\n     * Select the properties of the content category to be returned, by default only the content category id is returned.\n     * @param contentCategoryProperties  \n     */\n    public setSelectedContentCategoryProperties(contentCategoryProperties: Partial<SelectedContentCategoryPropertiesSettings> | null): this {\n        this.recommendationSettings.selectedContentCategoryProperties = contentCategoryProperties as SelectedContentCategoryPropertiesSettings | null;\n\n        return this;\n    }\n    \n    public setNumberOfRecommendations(count: number): this {\n        this.recommendationSettings.numberOfRecommendations = count;\n\n        return this;\n    }\n\n    public allowFillIfNecessaryToReachNumberOfRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n\n        return this;\n    }\n\n    public allowReplacingOfRecentlyShownRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n\n        return this;\n    }\n\n    public prioritizeDiversityBetweenRequests(prioritize: boolean = true): this {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n\n        return this;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { PersonalContentCategoryRecommendationRequest, ContentCategoryRecommendationWeights } from '../../../models/data-contracts';\nimport { ContentCategoriesRecommendationBuilder } from './contentCategoriesRecommendationBuilder';\nimport { ContentCategorySettingsRecommendationBuilder } from './contentCategorySettingsRecommendationBuilder';\n\nexport class PersonalContentCategoryRecommendationBuilder extends ContentCategorySettingsRecommendationBuilder implements ContentCategoriesRecommendationBuilder<PersonalContentCategoryRecommendationRequest> {\n    private since: number = 0;\n    private weights: ContentCategoryRecommendationWeights = { categoryViews: 1.0, contentViews: 1.0 };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public sinceMinutesAgo(sinceMinutesAgo: number): this {\n        this.since = sinceMinutesAgo;\n\n        return this;\n    }\n\n    public setWeights(weights: ContentCategoryRecommendationWeights): this {\n        this.weights = weights;\n\n        return this;\n    }\n\n    public build() {\n        const request: PersonalContentCategoryRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PersonalContentCategoryRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),\n            sinceMinutesAgo: this.since,\n            weights: this.weights,\n\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { PopularContentCategoriesRecommendationRequest, ContentCategoryRecommendationWeights } from '../../../models/data-contracts';\nimport { ContentCategoriesRecommendationBuilder } from './contentCategoriesRecommendationBuilder';\nimport { ContentCategorySettingsRecommendationBuilder } from './contentCategorySettingsRecommendationBuilder';\n\nexport class PopularContentCategoriesRecommendationBuilder extends ContentCategorySettingsRecommendationBuilder implements ContentCategoriesRecommendationBuilder<PopularContentCategoriesRecommendationRequest> {\n    private since: number = 0;\n    private weights: ContentCategoryRecommendationWeights = { categoryViews: 1.0, contentViews: 1.0 };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public sinceMinutesAgo(sinceMinutesAgo: number): this {\n        this.since = sinceMinutesAgo;\n\n        return this;\n    }\n\n    public setWeights(weights: ContentCategoryRecommendationWeights): this {\n        this.weights = weights;\n\n        return this;\n    }\n\n    public build() {\n        const request: PopularContentCategoriesRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PopularContentCategoriesRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),         \n            sinceMinutesAgo: this.since,\n            weights: this.weights,\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { BrandRecommendationRequestSettings, SelectedBrandPropertiesSettings } from '../../../models/data-contracts';\nimport { RecommendationRequestBuilder } from '../recommendationRequestBuilder';\n\nexport class BrandSettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    protected recommendationSettings: BrandRecommendationRequestSettings = {\n        allowFillIfNecessaryToReachNumberOfRecommendations: true,\n        allowReplacingOfRecentlyShownRecommendations: true,\n        numberOfRecommendations: 10,\n        prioritizeDiversityBetweenRequests: false,\n    };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    /**\n     * Select the properties of the brand to be returned, by default only the brand id is returned.\n     * @param brandProperties  \n     */\n    public setSelectedBrandProperties(brandProperties: Partial<SelectedBrandPropertiesSettings> | null): this {\n        this.recommendationSettings.selectedBrandProperties = brandProperties as SelectedBrandPropertiesSettings | null;\n\n        return this;\n    }\n\n    public setNumberOfRecommendations(count: number): this {\n        this.recommendationSettings.numberOfRecommendations = count;\n\n        return this;\n    }\n\n    public allowFillIfNecessaryToReachNumberOfRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n\n        return this;\n    }\n\n    public allowReplacingOfRecentlyShownRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n\n        return this;\n    }\n\n    public prioritizeDiversityBetweenRequests(prioritize: boolean = true): this {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n\n        return this;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { PersonalBrandRecommendationRequest, BrandRecommendationWeights } from '../../../models/data-contracts';\nimport { BrandSettingsRecommendationBuilder } from './brandSettingsRecommendationBuilder';\nimport { BrandsRecommendationBuilder } from './brandsRecommendationBuilder';\n\nexport class PersonalBrandRecommendationBuilder extends BrandSettingsRecommendationBuilder implements BrandsRecommendationBuilder<PersonalBrandRecommendationRequest> {\n    private since: number = 0;\n    private weights: BrandRecommendationWeights = { brandViews: 1.0, productViews: 1.0, productPurchases: 1.0 };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public sinceMinutesAgo(sinceMinutesAgo: number): this {\n        this.since = sinceMinutesAgo;\n\n        return this;\n    }\n\n    public setWeights(weights: BrandRecommendationWeights): this {\n        this.weights = weights;\n\n        return this;\n    }\n\n    public build() {\n        const request: PersonalBrandRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PersonalBrandRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),\n            sinceMinutesAgo: this.since,\n            weights: this.weights,\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { PopularBrandsRecommendationRequest, BrandRecommendationWeights } from '../../../models/data-contracts';\nimport { BrandSettingsRecommendationBuilder } from './brandSettingsRecommendationBuilder';\nimport { BrandsRecommendationBuilder } from './brandsRecommendationBuilder';\n\nexport class PopularBrandsRecommendationBuilder extends BrandSettingsRecommendationBuilder implements BrandsRecommendationBuilder<PopularBrandsRecommendationRequest> {\n    private since: number = 0;\n    private weights: BrandRecommendationWeights = { brandViews: 1.0, productViews: 1.0, productPurchases: 1.0 };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public sinceMinutesAgo(sinceMinutesAgo: number): this {\n        this.since = sinceMinutesAgo;\n\n        return this;\n    }\n\n    public setWeights(weights: BrandRecommendationWeights): this {\n        this.weights = weights;\n\n        return this;\n    }\n\n    public build() {\n        const request: PopularBrandsRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PopularBrandsRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),\n            sinceMinutesAgo: this.since,\n            weights: this.weights,\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { ProductCategoryRecommendationRequestSettings, SelectedProductCategoryPropertiesSettings } from '../../../models/data-contracts';\nimport { RecommendationRequestBuilder } from '../recommendationRequestBuilder';\n\nexport class ProductCategorySettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    protected recommendationSettings: ProductCategoryRecommendationRequestSettings = {\n        allowFillIfNecessaryToReachNumberOfRecommendations: true,\n        allowReplacingOfRecentlyShownRecommendations: true,\n        numberOfRecommendations: 10,\n        prioritizeDiversityBetweenRequests: false,\n    };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public setProductCategoryProperties(ProductCategoryProperties: Partial<SelectedProductCategoryPropertiesSettings>): this {\n        this.recommendationSettings.selectedProductCategoryProperties = ProductCategoryProperties as SelectedProductCategoryPropertiesSettings;\n\n        return this;\n    }\n\n    public setNumberOfRecommendations(count: number): this {\n        this.recommendationSettings.numberOfRecommendations = count;\n\n        return this;\n    }\n\n    public allowFillIfNecessaryToReachNumberOfRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n\n        return this;\n    }\n\n    public allowReplacingOfRecentlyShownRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n\n        return this;\n    }\n\n    public prioritizeDiversityBetweenRequests(prioritize: boolean = true): this {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n\n        return this;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { PersonalProductCategoryRecommendationRequest, ProductCategoryRecommendationWeights } from '../../../models/data-contracts';\nimport { ProductCategoriesRecommendationBuilder } from './productCategoriesRecommendationBuilder';\nimport { ProductCategorySettingsRecommendationBuilder } from './productCategorySettingsRecommendationBuilder';\n\nexport class PersonalProductCategoryRecommendationBuilder extends ProductCategorySettingsRecommendationBuilder implements ProductCategoriesRecommendationBuilder<PersonalProductCategoryRecommendationRequest> {\n    private since: number = 0;\n    private weights: ProductCategoryRecommendationWeights = { categoryViews: 1.0, productViews: 1.0, productPurchases: 1.0 };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public sinceMinutesAgo(sinceMinutesAgo: number): this {\n        this.since = sinceMinutesAgo;\n\n        return this;\n    }\n\n    public setWeights(weights: ProductCategoryRecommendationWeights): this {\n        this.weights = weights;\n\n        return this;\n    }\n\n    public build() {\n        const request: PersonalProductCategoryRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PersonalProductCategoryRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),\n            sinceMinutesAgo: this.since,\n            weights: this.weights,\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { PopularProductCategoriesRecommendationRequest, ProductCategoryRecommendationWeights } from '../../../models/data-contracts';\nimport { ProductCategoriesRecommendationBuilder } from './productCategoriesRecommendationBuilder';\nimport { ProductCategorySettingsRecommendationBuilder } from './productCategorySettingsRecommendationBuilder';\n\nexport class PopularProductCategoriesRecommendationBuilder extends ProductCategorySettingsRecommendationBuilder implements ProductCategoriesRecommendationBuilder<PopularProductCategoriesRecommendationRequest> {\n    private since: number = 0;\n    private weights: ProductCategoryRecommendationWeights = { categoryViews: 1.0, productViews: 1.0, productPurchases: 1.0 };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public sinceMinutesAgo(sinceMinutesAgo: number): this {\n        this.since = sinceMinutesAgo;\n\n        return this;\n    }\n\n    public setWeights(weights: ProductCategoryRecommendationWeights): this {\n        this.weights = weights;\n\n        return this;\n    }\n\n    public build() {\n        const request: PopularProductCategoriesRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PopularProductCategoriesRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),         \n            sinceMinutesAgo: this.since,\n            weights: this.weights,\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}","import { PersonalProductCategoryRecommendationRequest, PopularProductCategoriesRecommendationRequest, ProductCategoryRecommendationRequestCollection } from '../../../models/data-contracts';\n\nexport class ProductCategoriesRecommendationCollectionBuilder {\n    private requests: (PersonalProductCategoryRecommendationRequest | PopularProductCategoriesRecommendationRequest)[] = [];\n    private distinctCategoriesAcrossResults: boolean = true;\n\n    public addRequest(request: (PersonalProductCategoryRecommendationRequest | PopularProductCategoriesRecommendationRequest)): this {\n        this.requests.push(request);\n\n        return this;\n    }\n\n    public requireDistinctCategoriesAcrossResults(distinctCategoriesAcrossResults: boolean = true): this {\n        this.distinctCategoriesAcrossResults = distinctCategoriesAcrossResults;\n\n        return this;\n    }\n\n    public build(): ProductCategoryRecommendationRequestCollection {\n        return {\n            $type: 'Relewise.Client.Requests.Recommendations.ProductCategoryRecommendationRequestCollection, Relewise.Client',\n            requireDistinctCategoriesAcrossResults: this.distinctCategoriesAcrossResults,\n            requests: this.requests,\n        }\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { ProductRecommendationRequestSettings, SelectedProductPropertiesSettings, SelectedVariantPropertiesSettings, SelectedBrandPropertiesSettings } from '../../../models/data-contracts';\nimport { RecommendationRequestBuilder } from '../recommendationRequestBuilder';\n\nexport class ProductSettingsRecommendationBuilder extends RecommendationRequestBuilder {\n    protected recommendationSettings: ProductRecommendationRequestSettings = {\n        allowFillIfNecessaryToReachNumberOfRecommendations: true,\n        allowReplacingOfRecentlyShownRecommendations: true,\n        recommendVariant: true,\n        numberOfRecommendations: 10,\n        prioritizeDiversityBetweenRequests: false,\n    };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    /**\n     * Select the properties of the product to be returned, by default only the product id is returned.\n     * @param productProperties  \n     */\n    public setSelectedProductProperties(productProperties: Partial<SelectedProductPropertiesSettings> | null): this {\n        this.recommendationSettings.selectedProductProperties = productProperties as SelectedProductPropertiesSettings | null;\n\n        return this;\n    }\n\n    /**\n    * Select the properties of the variant to be returned, by default only the variant id is returned.  \n    * @param variantProperties  \n    */\n    public setSelectedVariantProperties(variantProperties: Partial<SelectedVariantPropertiesSettings> | null): this {\n        this.recommendationSettings.selectedVariantProperties = variantProperties as SelectedVariantPropertiesSettings | null;\n\n        return this;\n    }\n\n    /**\n     * Select the properties of the brand to be returned, by default only the brand id is returned.\n     * @param brandProperties  \n     */\n    public setSelectedBrandProperties(brandProperties: Partial<SelectedBrandPropertiesSettings> | null): this {\n        this.recommendationSettings.selectedBrandProperties = brandProperties as SelectedBrandPropertiesSettings | null;\n\n        return this;\n    }\n\n    public setNumberOfRecommendations(count: number): this {\n        this.recommendationSettings.numberOfRecommendations = count;\n\n        return this;\n    }\n\n    public allowFillIfNecessaryToReachNumberOfRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowFillIfNecessaryToReachNumberOfRecommendations = allowed;\n\n        return this;\n    }\n\n    public allowReplacingOfRecentlyShownRecommendations(allowed: boolean = true): this {\n        this.recommendationSettings.allowReplacingOfRecentlyShownRecommendations = allowed;\n\n        return this;\n    }\n\n    public allowProductsCurrentlyInCart(allowed: boolean = true): this {\n        this.recommendationSettings.allowProductsCurrentlyInCart = allowed;\n\n        return this;\n    }\n\n    public prioritizeDiversityBetweenRequests(prioritize: boolean = true): this {\n        this.recommendationSettings.prioritizeDiversityBetweenRequests = prioritize;\n\n        return this;\n    }\n\n    public recommendVariant(recommend: boolean = true): this {\n        this.recommendationSettings.recommendVariant = recommend;\n\n        return this;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { PurchasedWithCurrentCartRequest } from '../../../models/data-contracts';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class PurchasedWithCurrentCartBuilder extends ProductSettingsRecommendationBuilder implements ProductsRecommendationBuilder<PurchasedWithCurrentCartRequest> {\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public build() {\n        const request: PurchasedWithCurrentCartRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PurchasedWithCurrentCartRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { ProductAndVariantId } from '../../../models/data-contracts';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\n\nexport class BySingleProductRecommendationBuilder extends ProductSettingsRecommendationBuilder {\n    protected productAndVariantId: ProductAndVariantId | null = null;\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public product(product: { productId: string; variantId?: string; }): this {\n        this.productAndVariantId = product;\n\n        return this;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { ProductsViewedAfterViewingProductRequest } from '../../../models/data-contracts';\nimport { BySingleProductRecommendationBuilder } from './bySingleProductRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class ProductsViewedAfterViewingProductBuilder extends BySingleProductRecommendationBuilder implements ProductsRecommendationBuilder<ProductsViewedAfterViewingProductRequest> {\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public build() {\n        if (this.productAndVariantId === null) {\n            throw new Error('Must specificy a product');\n        }\n\n        const request: ProductsViewedAfterViewingProductRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.ProductsViewedAfterViewingProductRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            productAndVariantId: this.productAndVariantId,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { ProductsViewedAfterViewingContentRequest } from '../../../models/data-contracts';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class ProductsViewedAfterViewingContentBuilder extends ProductSettingsRecommendationBuilder implements ProductsRecommendationBuilder<ProductsViewedAfterViewingContentRequest> {\n    private id: string = '';\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    setContentId(contentId: string): this {\n        this.id = contentId;\n\n        return this;\n    }\n\n    public build() {\n        const request: ProductsViewedAfterViewingContentRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.ProductsViewedAfterViewingContentRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            contentId: this.id,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { PersonalProductRecommendationRequest } from '../../../models/data-contracts';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class PersonalProductRecommendationBuilder extends ProductSettingsRecommendationBuilder implements ProductsRecommendationBuilder<PersonalProductRecommendationRequest> {\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public build() {\n        const request: PersonalProductRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PersonalProductRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}\n","import { DataKeyPopularityMultiplierSelector, PopularityMultiplierSelector } from '../../../models/data-contracts';\n\nexport class PopularityMultiplierBuilder {\n    private popularityMultiplierSelector: PopularityMultiplierSelector | null = null;\n\n    public setDataKeyPopularityMultiplierSelector(selector: { key?: string | null }): this {\n        const dataKeyPopularityMultiplierSelector: DataKeyPopularityMultiplierSelector = {\n            $type: 'Relewise.Client.Requests.PopularityMultiplierSelectors.DataKeyPopularityMultiplierSelector, Relewise.Client',\n            ...selector,\n        }\n\n        this.popularityMultiplierSelector = dataKeyPopularityMultiplierSelector;\n        return this;\n    }\n\n    build(): PopularityMultiplierSelector | null {\n        return this.popularityMultiplierSelector;\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { PopularProductsRequest } from '../../../models/data-contracts';\nimport { PopularityMultiplierBuilder } from './popularityMultiplierBuilder';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class PopularProductsBuilder extends ProductSettingsRecommendationBuilder implements ProductsRecommendationBuilder<PopularProductsRequest> {\n    private since: number = 0;\n    private basedOnSelection: 'MostPurchased' | 'MostViewed' = 'MostPurchased';\n    private popularityMultiplierBuilder: PopularityMultiplierBuilder = new PopularityMultiplierBuilder();\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public basedOn(basedOn: 'MostPurchased' | 'MostViewed'): this {\n        this.basedOnSelection = basedOn;\n\n        return this;\n    }\n\n    public sinceMinutesAgo(sinceMinutesAgo: number): this {\n        this.since = sinceMinutesAgo;\n\n        return this;\n    }\n\n    public setPopularityMultiplier(popularityMultiplierBuilder: (popularityMultiplierBuilder: PopularityMultiplierBuilder) => void) {\n        popularityMultiplierBuilder(this.popularityMultiplierBuilder);\n\n        return this;\n    }\n\n    public build() {\n        const request: PopularProductsRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PopularProductsRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            basedOn: this.basedOnSelection,\n            sinceMinutesAgo: this.since,\n            popularityMultiplier: this.popularityMultiplierBuilder.build(),\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { RecentlyViewedProductsRequest } from '../../../models/data-contracts';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class RecentlyViewedProductsBuilder extends ProductSettingsRecommendationBuilder implements ProductsRecommendationBuilder<RecentlyViewedProductsRequest> {\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public build() {\n        const request: RecentlyViewedProductsRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.RecentlyViewedProductsRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}\n","\nimport { Settings } from '../../settings';\nimport { SortVariantsRequest } from '../../../models/data-contracts';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class SortVariantsBuilder extends ProductSettingsRecommendationBuilder implements ProductsRecommendationBuilder<SortVariantsRequest> {\n    private id: string = '';\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public setProductId(productId: string): this {\n        this.id = productId;\n\n        return this;\n    }\n\n    public build() {\n        const request: SortVariantsRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.SortVariantsRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            productId: this.id,\n        };\n\n        return request;\n    }\n}\n","import { CustomProductRecommendationRequest, PersonalProductRecommendationRequest, PopularProductsRequest, ProductsViewedAfterViewingContentRequest, ProductsViewedAfterViewingProductRequest, PurchasedWithCurrentCartRequest, PurchasedWithMultipleProductsRequest, PurchasedWithProductRequest, RecentlyViewedProductsRequest, SearchTermBasedProductRecommendationRequest, SimilarProductsRequest, SortProductsRequest, SortVariantsRequest, ProductRecommendationRequestCollection } from '../../../models/data-contracts';\n\nexport class ProductsRecommendationCollectionBuilder {\n    private requests: (CustomProductRecommendationRequest\n        | PersonalProductRecommendationRequest\n        | PopularProductsRequest\n        | ProductsViewedAfterViewingContentRequest\n        | ProductsViewedAfterViewingProductRequest\n        | PurchasedWithCurrentCartRequest\n        | PurchasedWithMultipleProductsRequest\n        | PurchasedWithProductRequest\n        | RecentlyViewedProductsRequest\n        | SearchTermBasedProductRecommendationRequest\n        | SimilarProductsRequest\n        | SortProductsRequest\n        | SortVariantsRequest)[] = [];\n\n    private distinctProductsAcrossResults: boolean = true;\n\n    public addRequest(request: CustomProductRecommendationRequest\n        | PersonalProductRecommendationRequest\n        | PopularProductsRequest\n        | ProductsViewedAfterViewingContentRequest\n        | ProductsViewedAfterViewingProductRequest\n        | PurchasedWithCurrentCartRequest\n        | PurchasedWithMultipleProductsRequest\n        | PurchasedWithProductRequest\n        | RecentlyViewedProductsRequest\n        | SearchTermBasedProductRecommendationRequest\n        | SimilarProductsRequest\n        | SortProductsRequest\n        | SortVariantsRequest): this {\n        this.requests.push(request);\n\n        return this;\n    }\n\n    public requireDistinctProductsAcrossResults(distinctProductsAcrossResults: boolean = true): this {\n        this.distinctProductsAcrossResults = distinctProductsAcrossResults;\n\n        return this;\n    }\n\n    public build(): ProductRecommendationRequestCollection {\n        return {\n            $type: 'Relewise.Client.Requests.Recommendations.ProductRecommendationRequestCollection, Relewise.Client',\n            requireDistinctProductsAcrossResults: this.distinctProductsAcrossResults,\n            requests: this.requests,\n        };\n    }\n}","import { Settings } from '../../../builders/settings';\nimport { PurchasedWithMultipleProductsRequest, ProductAndVariantId } from '../../../models/data-contracts';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class PurchasedWithMultipleProductsBuilder extends ProductSettingsRecommendationBuilder implements ProductsRecommendationBuilder<PurchasedWithMultipleProductsRequest> {\n    private products: ProductAndVariantId[] = [];\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public addProduct(product: { productId: string; variantId?: string; }): this {\n        this.products.push(product);\n\n        return this;\n    }\n\n    public addProducts(products: { productId: string; variantId?: string; }[]): this {\n        products.forEach(x => this.products.push(x));\n\n        return this;\n    }\n\n    public build() {\n        const request: PurchasedWithMultipleProductsRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PurchasedWithMultipleProductsRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            productAndVariantIds: this.products,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { PurchasedWithProductRequest } from '../../../models/data-contracts';\nimport { BySingleProductRecommendationBuilder } from './bySingleProductRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class PurchasedWithProductBuilder extends BySingleProductRecommendationBuilder implements ProductsRecommendationBuilder<PurchasedWithProductRequest> {\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public build() {\n        if (this.productAndVariantId === null) {\n            throw new Error('Must specificy a product');\n        }\n\n        const request: PurchasedWithProductRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PurchasedWithProductRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            productAndVariantId: this.productAndVariantId!,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { SearchTermBasedProductRecommendationRequest } from '../../../models/data-contracts';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class SearchTermBasedProductRecommendationBuilder extends ProductSettingsRecommendationBuilder implements ProductsRecommendationBuilder<SearchTermBasedProductRecommendationRequest> {\n    private term: string = '';\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    setTerm(term: string): this {\n        this.term = term;\n\n        return this;\n    }\n\n    public build() {\n        const request: SearchTermBasedProductRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.SearchTermBasedProductRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            term: this.term,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { SortProductsRequest } from '../../../models/data-contracts';\nimport { ProductSettingsRecommendationBuilder } from './productSettingsRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class SortProductsBuilder extends ProductSettingsRecommendationBuilder implements ProductsRecommendationBuilder<SortProductsRequest> {\n    private ids: string[] = [];\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public setProductIds(productIds: string[]): this {\n        this.ids = productIds;\n\n        return this;\n    }\n\n    public build() {\n        const request: SortProductsRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.SortProductsRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            productIds: this.ids,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { SimilarProductsRequest, SimilarProductsEvaluationSettings, Product } from '../../../models/data-contracts';\nimport { BySingleProductRecommendationBuilder } from './bySingleProductRecommendationBuilder';\nimport { ProductsRecommendationBuilder } from './productsRecommendationBuilder';\n\nexport class SimilarProductsProductBuilder extends BySingleProductRecommendationBuilder implements ProductsRecommendationBuilder<SimilarProductsRequest> {\n    private evaluationSettings: SimilarProductsEvaluationSettings | null = null;\n    private considerAlreadyKnownInformationAboutProduct: boolean = false;\n    private productData: Product | null = null;\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    /** @deprecated\n     * Use setEvaluationSettings instead\n     */\n    public setSimilarProductsEvaluationSettings(settings: SimilarProductsEvaluationSettings): this {\n        this.evaluationSettings = settings as SimilarProductsEvaluationSettings;\n\n        return this;\n    }\n\n    public setEvaluationSettings(builder: (settings: Partial<SimilarProductsEvaluationSettings>) => void): this {\n        const cleanSettings: SimilarProductsEvaluationSettings = {\n            significanceOfSimilaritiesInDisplayName: 0,\n            productDisplayNameTransformer: null,\n            significanceOfSimilarListPrice: 0,\n            significanceOfCommonImmediateParentCategories: 0,\n            significanceOfCommonParentsParentCategories: 0,\n            significanceOfCommonAncestorCategories: 0,\n            significanceOfCommonProductDataKeys: 0,\n            significanceOfIdenticalProductDataValues: 0,\n            significantProductDataFields: null,\n            significanceOfSimilarSalesPrice: 0,\n            significanceOfSimilarBrand: 0,\n            variantEvaluationSettings: null,\n        };\n\n        builder(cleanSettings);\n        this.evaluationSettings = cleanSettings;\n\n        return this;\n    }\n\n    public build() {\n        const request: SimilarProductsRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.SimilarProductsRequest, Relewise.Client',\n            ...this.baseBuild(),\n            settings: this.recommendationSettings,\n            existingProductId: this.productAndVariantId,\n            considerAlreadyKnownInformationAboutProduct: this.considerAlreadyKnownInformationAboutProduct,\n            productData: this.productData,\n            evaluationSettings: this.evaluationSettings,\n        };\n\n        return request;\n    }\n}\n","import { Settings } from '../../../builders/settings';\nimport { RecommendPopularSearchTermSettings, PopularSearchTermsRecommendationRequest } from '../../../models/data-contracts';\nimport { RecommendationRequestBuilder } from '../recommendationRequestBuilder';\n\nexport class PopularSearchTermsRecommendationBuilder extends RecommendationRequestBuilder {\n    term: string | null | undefined;\n\n    recommendationSettings: RecommendPopularSearchTermSettings = {\n        numberOfRecommendations: 10,\n    };\n\n    constructor(\n        settings: Settings) {\n        super(settings);\n    }\n\n    public setTerm(term: string | null | undefined): this {\n        this.term = term;\n\n        return this;\n    }\n\n    public addEntityType(...types: ('Product' | 'Variant' | 'ProductCategory' | 'Brand' | 'Content' | 'ContentCategory')[]): this {\n        this.recommendationSettings.targetEntityTypes = types;\n\n        return this;\n    }\n\n    public build() {\n        const request: PopularSearchTermsRecommendationRequest = {\n            $type: 'Relewise.Client.Requests.Recommendations.PopularSearchTermsRecommendationRequest, Relewise.Client',\n            ...this.baseBuild(),\n            term: this.term,\n            settings: this.recommendationSettings,\n        };\n\n        return request;\n    }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","export default { tag: 'client@2.0.0' };\n","import version from './version';\n\nexport interface RelewiseClientOptions {\n    serverUrl?: string;\n}\n\nexport interface RelewiseRequestOptions {\n    abortSignal?: AbortSignal\n}\n\nexport class ProblemDetailsError extends Error {\n    private _details?: HttpProblemDetails | null;\n\n    public get details(): HttpProblemDetails | undefined | null {\n        return this._details;\n    }\n\n    constructor(message: string, details?: HttpProblemDetails | null) {\n        super(message);\n        this._details = details;\n    }\n}\n\nexport interface HttpProblemDetails {\n    type: string;\n    title: string;\n    status: number;\n    traceId: string;\n    detail?: string;\n    errors?: Record<string, string>;\n}\n\nexport abstract class RelewiseClient {\n    private readonly _serverUrl: string = 'https://api.relewise.com';\n    private readonly _urlPath: string = 'v1';\n    private readonly _apiKeyHeader: string;\n\n    constructor(protected readonly datasetId: string, protected readonly apiKey: string, options?: RelewiseClientOptions) {\n        if (!datasetId) throw new Error('Dataset id cannot be null or empty. Please contact Relewise if you don\\'t have an account already or would like a free demo license');\n        if (!apiKey) throw new Error('API Key secret cannot be null or empty. Please contact Relewise support if you don\\'t know the apiKeySecret for your datasetId.');\n\n        this._apiKeyHeader = `APIKey ${this.apiKey}`;\n\n        if (options?.serverUrl) {\n            this._serverUrl = options.serverUrl;\n        }\n    }\n\n    public get serverUrl(): string {\n        return this._serverUrl;\n    }\n\n    protected async request<TRequest, TResponse>(name: string, data: TRequest, options?: RelewiseRequestOptions): Promise<TResponse | undefined> {\n        const requestUrl = this.createRequestUrl(this._serverUrl, this.datasetId, this._urlPath, name);\n\n        const response = await fetch(requestUrl, {\n            method: 'POST',\n            headers: {\n                Authorization: this._apiKeyHeader,\n                'Content-Type': 'application/json',\n                'X-Relewise-Version': version.tag,\n            },\n            body: JSON.stringify(data),\n            signal: options?.abortSignal,\n            cache: 'no-cache',\n        });\n\n        if (!response.ok) {\n            let responseMessage: HttpProblemDetails | null = null;\n\n            try { \n                responseMessage = await response.json();\n            } catch (_) { \n            }\n\n            const details = responseMessage?.detail ? `Details: ${responseMessage.detail}\\n` : '';\n\n            throw new ProblemDetailsError(`Error when calling the Relewise API.\\n\\nTitle: ${response.statusText}\\nStatus: ${response.status}\\n${details}\\nRead more in the details property if there is error response or look in the network tab.`, responseMessage);\n        }\n\n        try {\n            const responseMessage = await response.json();\n            return responseMessage as TResponse;\n        } catch (err) {\n            return undefined;\n        }\n    }\n\n    private createRequestUrl(baseUrl: string, ...segments: string[]) {\n        const joinedSegments = segments.join('/');\n        return baseUrl.endsWith('/')\n            ? baseUrl.concat(joinedSegments)\n            : baseUrl.concat('/', joinedSegments);\n    }\n}","import { RelewiseClient, RelewiseClientOptions, RelewiseRequestOptions } from './relewise.client';\nimport { \n    TrackOrderRequest, TrackCartRequest, TrackProductViewRequest, TrackProductCategoryViewRequest, TrackContentViewRequest, TrackContentCategoryViewRequest,\n    TrackBrandViewRequest, User, TrackSearchTermRequest, TrackUserUpdateRequest, DataValue,\n} from './models/data-contracts';\n\nexport class Tracker extends RelewiseClient {\n    constructor(protected readonly datasetId: string, protected readonly apiKey: string, options?: RelewiseClientOptions) {\n        super(datasetId, apiKey, options);\n    }\n\n    public async trackOrder({ user, subtotal, orderNumber, lineItems, cartName = 'default', trackingNumber, data }: {\n        user: User,\n        subtotal: { currency: string, amount: number },\n        orderNumber: string,\n        /** @deprecated Use orderNumber instead. */\n        trackingNumber?: string,\n        lineItems: { productId: string, variantId?: string, lineTotal: number, quantity: number, data?: Record<string, DataValue> }[], \n        data?: Record<string, DataValue>, \n        cartName?: string\n    }, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackOrderRequest, void>('TrackOrderRequest', {\n            $type: 'Relewise.Client.Requests.Tracking.TrackOrderRequest, Relewise.Client',\n            order: {\n                $type: 'Relewise.Client.DataTypes.Order, Relewise.Client',\n                lineItems: lineItems.map(l => ({\n                    product: {\n                        id: l.productId,\n                    },\n                    ...(l.variantId && { variant: { id: l.variantId }}),\n                    lineTotal: l.lineTotal,\n                    quantity: l.quantity,\n                    data: l.data,\n                })),\n                subtotal: { amount: subtotal.amount, currency: { value: subtotal.currency }},\n                orderNumber: orderNumber,\n                trackingNumber: trackingNumber,\n                cartName: cartName,\n                data: data,\n                user: user,\n            },\n        }, options);\n    }\n\n    public async trackCart({ user, subtotal, lineItems, data, cartName = 'default' }: { \n        user?: User, \n        subtotal: { currency: string, amount: number }, \n        lineItems: { productId: string, variantId?: string, lineTotal: number, quantity: number, data?: Record<string, DataValue> }[], \n        data?: Record<string, DataValue>, \n        cartName?: string \n    }, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackCartRequest, void>('TrackCartRequest', {\n            $type: 'Relewise.Client.Requests.Tracking.TrackCartRequest, Relewise.Client',\n            cart: {\n                $type: 'Relewise.Client.DataTypes.Cart, Relewise.Client',\n                lineItems: lineItems.map(l => ({\n                    product: {\n                        id: l.productId,\n                    },\n                    ...(l.variantId && { variant: { id: l.variantId }}),\n                    lineTotal: l.lineTotal,\n                    quantity: l.quantity,\n                    data: l.data,\n                })),\n                subtotal: { amount: subtotal.amount, currency: { value: subtotal.currency }},\n                name: cartName,\n                user: user,\n                data: data,\n            },\n        }, options);\n    }\n\n    public async trackProductView({ productId, variantId, user }: { productId: string, variantId?: string, user: User }, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackProductViewRequest, void>('TrackProductViewRequest', {\n            $type: 'Relewise.Client.Requests.Tracking.TrackProductViewRequest, Relewise.Client',\n            productView: {\n                $type: 'Relewise.Client.DataTypes.ProductView, Relewise.Client',\n                product: {\n                    id: productId,\n                },\n                ...(variantId && { variant: { id: variantId }}),\n                user: user,\n            },\n        }, options);\n    }\n\n    public async trackProductCategoryView({ idPath, user }: { idPath: string[], user: User }, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackProductCategoryViewRequest, void>('TrackProductCategoryViewRequest', {\n            $type: 'Relewise.Client.Requests.Tracking.TrackProductCategoryViewRequest, Relewise.Client',\n            productCategoryView: {\n                $type: 'Relewise.Client.DataTypes.ProductCategoryView, Relewise.Client',\n                idPath: idPath,\n                user: user,\n            },\n        }, options);\n    }\n\n    public async trackContentView({ contentId, user }: { contentId: string, user: User }, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackContentViewRequest, void>('TrackContentViewRequest', {\n            $type: 'Relewise.Client.Requests.Tracking.TrackContentViewRequest, Relewise.Client',\n            contentView: {\n                $type: 'Relewise.Client.DataTypes.ContentView, Relewise.Client',\n                content: {\n                    id: contentId,\n                },\n                user: user,\n            },\n        }, options);\n    }\n\n    public async trackContentCategoryView({ idPath, user }: { idPath: string[], user: User }, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackContentCategoryViewRequest, void>('TrackContentCategoryViewRequest', {\n            $type: 'Relewise.Client.Requests.Tracking.TrackContentCategoryViewRequest, Relewise.Client',\n            contentCategoryView: {\n                $type: 'Relewise.Client.DataTypes.ContentCategoryView, Relewise.Client',\n                idPath: idPath,\n                user: user,\n            },\n        }, options);\n    }\n\n    public async trackBrandView({ brandId, user }: { brandId: string, user: User }, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackBrandViewRequest, void>('TrackBrandViewRequest', {\n            $type: 'Relewise.Client.Requests.Tracking.TrackBrandViewRequest, Relewise.Client',\n            brandView: {\n                $type: 'Relewise.Client.DataTypes.BrandView, Relewise.Client',\n                brand: {\n                    id: brandId,\n                },\n                user: user,\n            },\n        }, options);\n    }\n\n    public async trackSearchTerm({ term, language, user }: { term: string, user: User, language: string }, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackSearchTermRequest, void>('TrackSearchTermRequest', {\n            $type: 'Relewise.Client.Requests.Tracking.TrackSearchTermRequest, Relewise.Client',\n            searchTerm: {\n                $type: 'Relewise.Client.DataTypes.SearchTerm, Relewise.Client',\n                language: {\n                    value: language,\n                },\n                term: term,\n                user: user,\n            },\n        }, options);\n    }\n\n    public async trackUserUpdate({ user, updateKind = 'UpdateAndAppend' }: { user: User, updateKind?: 'None' | 'UpdateAndAppend' | 'ReplaceProvidedProperties' | 'ClearAndReplace'  }, options?: RelewiseRequestOptions): Promise<void | undefined> {\n        return this.request<TrackUserUpdateRequest, void>('TrackUserUpdateRequest', {\n            $type: 'Relewise.Client.Requests.Tracking.TrackUserUpdateRequest, Relewise.Client',\n            userUpdate: {\n                $type: 'Relewise.Client.DataTypes.UserUpdate, Relewise.Client',\n                user: user,\n                kind: updateKind,\n            },\n        }, options);\n    }\n}\n","import { RelewiseClient, RelewiseClientOptions, RelewiseRequestOptions } from './relewise.client';\nimport { \n    SearchRequestCollection, \n    SearchResponseCollection, \n    ProductSearchRequest, \n    ProductSearchResponse,\n    ProductCategorySearchRequest, \n    ProductCategorySearchResponse,\n    ContentSearchRequest,\n    ContentSearchResponse,\n    SearchTermPredictionRequest,\n    SearchTermPredictionResponse,\n} from './models/data-contracts';\n\nexport class Searcher extends RelewiseClient {\n    constructor(protected readonly datasetId: string, protected readonly apiKey: string, options?: RelewiseClientOptions) {\n        super(datasetId, apiKey, options);\n    }\n\n    public async searchProducts(request: ProductSearchRequest, options?: RelewiseRequestOptions): Promise<ProductSearchResponse | undefined> {\n        return this.request<ProductSearchRequest, ProductSearchResponse>('ProductSearchRequest', request, options);\n    }\n\n    public async searchProductCategories(request: ProductCategorySearchRequest, options?: RelewiseRequestOptions): Promise<ProductCategorySearchResponse | undefined> {\n        return this.request<ProductCategorySearchRequest, ProductCategorySearchResponse>('ProductCategorySearchRequest', request, options);\n    }\n\n    public async searchContents(request: ContentSearchRequest, options?: RelewiseRequestOptions): Promise<ContentSearchResponse | undefined> {\n        return this.request<ContentSearchRequest, ContentSearchResponse>('ContentSearchRequest', request, options);\n    }\n\n    public async searchTermPrediction(request: SearchTermPredictionRequest, options?: RelewiseRequestOptions): Promise<SearchTermPredictionResponse | undefined> {\n        return this.request<SearchTermPredictionRequest, SearchTermPredictionResponse>('SearchTermPredictionRequest', request, options);\n    }\n\n    public async batch(requestCollections: SearchRequestCollection, options?: RelewiseRequestOptions): Promise<SearchResponseCollection | undefined> {\n        return this.request<SearchRequestCollection, SearchResponseCollection>('SearchRequestCollection', requestCollections, options);\n    }\n}","import { RelewiseClient, RelewiseClientOptions, RelewiseRequestOptions } from './relewise.client';\nimport {\n    ProductRecommendationResponse,\n    ContentRecommendationResponse,\n    ProductRecommendationResponseCollection,\n    ProductRecommendationRequestCollection,\n    ContentRecommendationResponseCollection,\n    ContentRecommendationRequestCollection,\n    PopularSearchTermsRecommendationRequest,\n    SearchTermRecommendationResponse,\n    ContentCategoryRecommendationRequestCollection,\n    ContentCategoryRecommendationResponseCollection,\n    ProductCategoryRecommendationRequestCollection,\n    ProductCategoryRecommendationResponseCollection,\n    PopularBrandsRecommendationRequest,\n    BrandRecommendationResponse,\n    PersonalBrandRecommendationRequest,\n    PurchasedWithProductRequest,\n    PersonalContentCategoryRecommendationRequest,\n    PopularContentCategoriesRecommendationRequest,\n    ContentCategoryRecommendationResponse,\n    PersonalProductCategoryRecommendationRequest,\n    PopularProductCategoriesRecommendationRequest,\n    ProductCategoryRecommendationResponse,\n    PopularContentsRequest,\n    PersonalContentRecommendationRequest,\n    ContentsViewedAfterViewingProductRequest,\n    ContentsViewedAfterViewingMultipleProductsRequest,\n    ContentsViewedAfterViewingMultipleContentsRequest,\n    ContentsViewedAfterViewingContentRequest,\n    SortVariantsRequest,\n    SortProductsRequest,\n    SimilarProductsRequest,\n    SearchTermBasedProductRecommendationRequest,\n    RecentlyViewedProductsRequest,\n    PurchasedWithMultipleProductsRequest,\n    PurchasedWithCurrentCartRequest,\n    ProductsViewedAfterViewingProductRequest,\n    ProductsViewedAfterViewingContentRequest,\n    PopularProductsRequest,\n    PersonalProductRecommendationRequest,\n} from './models/data-contracts';\n\nexport class Recommender extends RelewiseClient {\n    constructor(protected readonly datasetId: string, protected readonly apiKey: string, options?: RelewiseClientOptions) {\n        super(datasetId, apiKey, options);\n    }\n\n    public async recommendPopularSearchTerms(request: PopularSearchTermsRecommendationRequest, options?: RelewiseRequestOptions): Promise<SearchTermRecommendationResponse | undefined> {\n        return this.request<PopularSearchTermsRecommendationRequest, SearchTermRecommendationResponse>('PopularSearchTermsRecommendationRequest', request, options);\n    }\n\n    //#region Brands\n\n    public async recommendPersonalBrands(request: PersonalBrandRecommendationRequest, options?: RelewiseRequestOptions): Promise<BrandRecommendationResponse | undefined> {\n        return this.request<PersonalBrandRecommendationRequest, BrandRecommendationResponse>('PersonalBrandRecommendationRequest', request, options);\n    }\n\n    public async recommendPopularBrands(request: PopularBrandsRecommendationRequest, options?: RelewiseRequestOptions): Promise<BrandRecommendationResponse | undefined> {\n        return this.request<PopularBrandsRecommendationRequest, BrandRecommendationResponse>('PopularBrandsRecommendationRequest', request, options);\n    }\n\n    //#endregion\n\n    //#region Content Categories\n    public async recommendPersonalContentCategories(request: PersonalContentCategoryRecommendationRequest, options?: RelewiseRequestOptions): Promise<ContentCategoryRecommendationResponse | undefined> {\n        return this.request<PersonalContentCategoryRecommendationRequest, ContentCategoryRecommendationResponse>('PersonalContentCategoryRecommendationRequest', request, options);\n    }\n\n    public async recommendPopularContentCategories(request: PopularContentCategoriesRecommendationRequest, options?: RelewiseRequestOptions): Promise<ContentCategoryRecommendationResponse | undefined> {\n        return this.request<PopularContentCategoriesRecommendationRequest, ContentCategoryRecommendationResponse>('PopularContentCategoriesRecommendationRequest', request, options);\n    }\n\n    //#endregion\n\n    //#region Product Categories\n    public async recommendPersonalProductCategories(request: PersonalProductCategoryRecommendationRequest, options?: RelewiseRequestOptions): Promise<ProductCategoryRecommendationResponse | undefined> {\n        return this.request<PersonalProductCategoryRecommendationRequest, ProductCategoryRecommendationResponse>('PersonalProductCategoryRecommendationRequest', request, options);\n    }\n\n    public async recommendPopularProductCategories(request: PopularProductCategoriesRecommendationRequest, options?: RelewiseRequestOptions): Promise<ProductCategoryRecommendationResponse | undefined> {\n        return this.request<PopularProductCategoriesRecommendationRequest, ProductCategoryRecommendationResponse>('PopularProductCategoriesRecommendationRequest', request, options);\n    }\n\n    //#endregion\n\n    //#region Products\n\n    public async recommendPurchasedWithProduct(request: PurchasedWithProductRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<PurchasedWithProductRequest, ProductRecommendationResponse>('PurchasedWithProductRequest', request, options);\n    }\n\n    public async recommendPurchasedWithMultipleProducts(request: PurchasedWithMultipleProductsRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<PurchasedWithMultipleProductsRequest, ProductRecommendationResponse>('PurchasedWithMultipleProductsRequest', request, options);\n    }\n\n    public async sortVariants(request: SortVariantsRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<SortVariantsRequest, ProductRecommendationResponse>('SortVariantsRequest', request, options);\n    }\n\n    public async sortProducts(request: SortProductsRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<SortProductsRequest, ProductRecommendationResponse>('SortProductsRequest', request, options);\n    }\n\n    public async recommendSimilarProducts(request: SimilarProductsRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<SimilarProductsRequest, ProductRecommendationResponse>('SimilarProductsRequest', request, options);\n    }\n\n    public async recommendSearchTermBasedProducts(request: SearchTermBasedProductRecommendationRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<SearchTermBasedProductRecommendationRequest, ProductRecommendationResponse>('SearchTermBasedProductRecommendationRequest', request, options);\n    }\n\n    public async recentlyViewedProducts(request: RecentlyViewedProductsRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<RecentlyViewedProductsRequest, ProductRecommendationResponse>('RecentlyViewedProductsRequest', request, options);\n    }\n\n    public async recommendPurchasedWithCurrentCart(request: PurchasedWithCurrentCartRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<PurchasedWithCurrentCartRequest, ProductRecommendationResponse>('PurchasedWithCurrentCartRequest', request, options);\n    }\n\n    public async recommendProductsViewedAfterViewingProduct(request: ProductsViewedAfterViewingProductRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<ProductsViewedAfterViewingProductRequest, ProductRecommendationResponse>('ProductsViewedAfterViewingProductRequest', request, options);\n    }\n\n    public async recommendProductsViewedAfterViewingContent(request: ProductsViewedAfterViewingContentRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<ProductsViewedAfterViewingContentRequest, ProductRecommendationResponse>('ProductsViewedAfterViewingContentRequest', request, options);\n    }\n\n    public async recommendPopularProducts(request: PopularProductsRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<PopularProductsRequest, ProductRecommendationResponse>('PopularProductsRequest', request, options);\n    }\n\n    public async recommendPersonalProducts(request: PersonalProductRecommendationRequest, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponse | undefined> {\n        return this.request<PersonalProductRecommendationRequest, ProductRecommendationResponse>('PersonalProductRecommendationRequest', request, options);\n    }\n\n    //#endregion\n\n    //#region Content\n\n    public async recommendPopularContents(request: PopularContentsRequest, options?: RelewiseRequestOptions): Promise<ContentRecommendationResponse | undefined> {\n        return this.request<PopularContentsRequest, ContentRecommendationResponse>('PopularContentsRequest', request, options);\n    }\n\n    public async recommendPersonalContents(request: PersonalContentRecommendationRequest, options?: RelewiseRequestOptions): Promise<ContentRecommendationResponse | undefined> {\n        return this.request<PersonalContentRecommendationRequest, ContentRecommendationResponse>('PopularContentsRequest', request, options);\n    }\n\n    public async recommendContentsViewedAfterViewingProduct(request: ContentsViewedAfterViewingProductRequest, options?: RelewiseRequestOptions): Promise<ContentRecommendationResponse | undefined> {\n        return this.request<ContentsViewedAfterViewingProductRequest, ContentRecommendationResponse>('ContentsViewedAfterViewingProductRequest', request, options);\n    }\n\n    public async recommendContentsViewedAfterViewingMultipleProducts(request: ContentsViewedAfterViewingMultipleProductsRequest, options?: RelewiseRequestOptions): Promise<ContentRecommendationResponse | undefined> {\n        return this.request<ContentsViewedAfterViewingMultipleProductsRequest, ContentRecommendationResponse>('ContentsViewedAfterViewingProductRequest', request, options);\n    }\n\n    public async recommendContentsViewedAfterViewingMultipleContents(request: ContentsViewedAfterViewingMultipleContentsRequest, options?: RelewiseRequestOptions): Promise<ContentRecommendationResponse | undefined> {\n        return this.request<ContentsViewedAfterViewingMultipleContentsRequest, ContentRecommendationResponse>('ContentsViewedAfterViewingMultipleContentsRequest', request, options);\n    }\n\n    public async recommendContentsViewedAfterViewingContent(request: ContentsViewedAfterViewingContentRequest, options?: RelewiseRequestOptions): Promise<ContentRecommendationResponse | undefined> {\n        return this.request<ContentsViewedAfterViewingContentRequest, ContentRecommendationResponse>('ContentsViewedAfterViewingContentRequest', request, options);\n    }\n\n    //#endregion\n\n    //#region Batching \n    public async batchProductRecommendations(request: ProductRecommendationRequestCollection, options?: RelewiseRequestOptions): Promise<ProductRecommendationResponseCollection | undefined> {\n        return this.request<ProductRecommendationRequestCollection, ProductRecommendationResponseCollection>('ProductRecommendationRequestCollection', request, options);\n    }\n\n    public async batchContentRecommendations(request: ContentRecommendationRequestCollection, options?: RelewiseRequestOptions): Promise<ContentRecommendationResponseCollection | undefined> {\n        return this.request<ContentRecommendationRequestCollection, ContentRecommendationResponseCollection>('ContentRecommendationRequestCollection', request, options);\n    }\n\n    public async batchContentCategoryRecommendations(request: ContentCategoryRecommendationRequestCollection, options?: RelewiseRequestOptions): Promise<ContentCategoryRecommendationResponseCollection | undefined> {\n        return this.request<ContentCategoryRecommendationRequestCollection, ContentCategoryRecommendationResponseCollection>('ContentCategoryRecommendationRequestCollection', request, options);\n    }\n\n    public async batchProductCategoryRecommendations(request: ProductCategoryRecommendationRequestCollection, options?: RelewiseRequestOptions): Promise<ProductCategoryRecommendationResponseCollection | undefined> {\n        return this.request<ProductCategoryRecommendationRequestCollection, ProductCategoryRecommendationResponseCollection>('ProductCategoryRecommendationRequestCollection', request, options);\n    }\n\n    //#endregion\n}","import { User } from '../models/data-contracts';\n\nexport type PartialUser<TKeys extends string> = Omit<User, TKeys>;\n\nexport class UserFactory {\n    static anonymous(user?: PartialUser<'temporaryId'|'fingerprint'|'authenticatedId'>): User {\n        return { ...user };\n    }\n    \n    static byAuthenticatedId(authenticatedId: string, temporaryId?: string, user?: PartialUser<'temporaryId'|'authenticatedId'>): User {\n        return { authenticatedId, ...(temporaryId && { temporaryId }), ...user };\n    }\n    \n    static byTemporaryId(temporaryId: string, user?: PartialUser<'temporaryId'>): User {\n        return { ...user, temporaryId };\n    }\n    \n    static byIdentifier(key: string, value: string, user?: PartialUser<'identifiers'>): User {\n        return { ...user, identifiers: { [key]: value } };\n    }\n    \n    static byIdentifiers(identifiers: Record<string, string>, user?: PartialUser<'identifiers'>): User {\n        return { identifiers, ...user };\n    }\n    \n    static byEmail(email: string, user?: PartialUser<'email'>): User {\n        return { email, ...user };\n    }\n\n    static byFingerprint(fingerprint: string, user?: PartialUser<'fingerprint'>): User {\n        return { fingerprint, ...user };\n    }\n}","import { DataValue } from '../models/data-contracts';\nimport { StringDataValue, StringCollectionDataValue, NumberDataValue, DoubleCollectionDataValue, BooleanDataValue, BooleanCollectionDataValue, MultiCurrencyDataValue, MultilingualDataValue, MultilingualCollectionDataValue, ObjectDataValue, ObjectCollectionDataValue } from '../models/dataValue';\n\nexport class DataValueFactory {\n    static string(value: string): StringDataValue {\n        return new StringDataValue(value);\n    }\n\n    static stringCollection(collection: string[]): StringCollectionDataValue {\n        return new StringCollectionDataValue(collection);\n    }\n\n    static number(value: number): NumberDataValue {\n        return new NumberDataValue(value);\n    }\n\n    static doubleCollection(collection: number[]): DoubleCollectionDataValue {\n        return new DoubleCollectionDataValue(collection);\n    }\n\n    static boolean(value: boolean): BooleanDataValue {\n        return new BooleanDataValue(value);\n    }\n\n    static booleanCollection(collection: boolean[]): BooleanCollectionDataValue {\n        return new BooleanCollectionDataValue(collection);\n    }\n\n    static multiCurrency(values: { amount: number, currency: string }[]): MultiCurrencyDataValue {\n        return new MultiCurrencyDataValue(values);\n    }\n\n    static multilingual(values: { value: string, language: string }[]): MultilingualDataValue {\n        return new MultilingualDataValue(values);\n    }\n\n    static multilingualCollection(values: { values: string[], language: string }[]): MultilingualCollectionDataValue {\n        return new MultilingualCollectionDataValue(values);\n    }\n\n    static object(data: { [key: string]: DataValue }): ObjectDataValue {\n        return new ObjectDataValue(data);\n    }\n\n    static objectCollection(objects: { [key: string]: DataValue }[]): ObjectCollectionDataValue {\n        return new ObjectCollectionDataValue(objects);\n    }\n}","import { DataDoubleSelector, FixedDoubleValueSelector } from '..';\n\nexport class ValueSelectorFactory {\n    static dataDoubleSelector(key: string): DataDoubleSelector {\n        return {\n            $type: 'Relewise.Client.Requests.ValueSelectors.DataDoubleSelector, Relewise.Client',\n            key: key,\n        };\n    }\n\n    static fixedDoubleValueSelector(value: number): FixedDoubleValueSelector {\n        return {\n            $type: 'Relewise.Client.Requests.ValueSelectors.FixedDoubleValueSelector, Relewise.Client',\n            value: value,\n        };\n    }\n}"],"names":[],"mappings":"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"}